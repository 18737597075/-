{"version":3,"sources":["App.js","pages/login/index.js","util/utils.js","axios/index.js","components/Header/index.js","components/Footer/index.js","config/menuConfig.js","components/NavLeft/index.js","admin.js","pages/ui/button.js","pages/nofound/nofound.js","pages/ui/modals.js","pages/ui/loadings.js","pages/home/index.js","pages/ui/notification.js","pages/ui/message.js","pages/ui/tabs.js","pages/ui/gallery.js","pages/ui/silder.js","pages/form/login.js","pages/form/register.js","pages/table/basic.js","pages/table/high.js","pages/city/index.js","pages/rich/index.js","components/BaseForm/index.js","components/Etable/index.js","pages/order/index.js","common.js","pages/order/detail.js","pages/user/index.js","pages/map/bikeMap.js","pages/echarts/echartTheme.js","pages/echarts/bar/index.js","pages/echarts/pie/index.js","pages/echarts/line/index.js","pages/permission/index.js","router.js","serviceWorker.js","index.js"],"names":["App","this","props","children","Component","Login","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagination","data","callback","onChange","current","result","page","pageSize","page_size","total","showTotall","list","getOptionList","options","map","item","push","value","id","key","name","updateSelectedItem","selectedRowKeys","selectedItem","selectedIds","setState","Axios","_this","url","params","isMock","ajax","then","item_list","index","Utils","requestList","Promise","resolve","reject","JsonP","param","err","response","status","message","baseApi","axios","method","baseURL","timeout","res","code","info","title","content","msg","state","userName","setInterval","sysTime","Util","getTime","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","menuType","className","span","src","alt","menuList","btnList","SubMenu","renderMenu","Item","to","menuTreeNode","MenuConfig","theme","Admin","Buttons","handleSizeChange","e","size","target","handleCloseLoading","loading","type","disabled","icon","shape","onClick","Group","NoFound","Modals","showModal1","showModal2","showModal3","showModal4","handleOpen","handleConfirm","onOk","console","log","onCancel","visible","okText","cancelText","style","top","wrapClassName","antIcon","fontSize","spin","Loadings","indicator","tip","description","Home","openNotification","open","color","openNotificationWithIcon","direction","config","placement","Notification","Message","showMessage","TabPane","Tab","activeKey","onEdit","targetKey","action","add","panes","newTabIndex","remove","lastIndex","forEach","pane","i","filter","length","callBack","closable","defaultActiveKey","tab","Gallery","openGallery","imgSrc","currentImg","imgList","marginBottom","cover","Meta","gutter","md","width","footer","Silder","autoplay","effect","height","FormItem","FormLogin","handleSubmit","preventDefault","form","validateFields","values","success","getFieldDecorator","layout","placeholder","Password","marginTop","onSubmit","rules","required","prefix","valuePropName","initialValue","href","htmlType","create","RadioGroup","Option","TextArea","beforeUpload","file","isJpgOrPng","error","isLt2M","Register","userInfo","getFieldsValue","JSON","stringify","userPwd","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","handleChange","originFileObj","imageUrl","userImg","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","label","mode","moment","showTime","format","autoSize","minRows","maxRows","listType","showUploadList","Basic","dataSource2","request","selectedRows","onRowClick","record","selectKey","interest","handleDelete","rows","ids","confirm","join","dataSource","sex","birthday","address","phoneNumber","columns","dataIndex","render","rowSelection","rowCheckSelection","selectRows","onRow","High","filters","sorter","sortOrder","order","columns3","a","b","age","columns4","text","scroll","y","fixed","x","City","isShowOpenCity","handleOpenCity","cityInfo","cityForm","op_mode","arr","user_name","bordered","wrappedComponentRef","inst","FilterForm","margin","OpenCityForm","Rich","showRichText","editorState","handleClearContent","handleGetText","onEditorChange","contentState","onEditorStateChange","marginLeft","onContentStateChange","draftjs","handleFilterSubmit","fieldsValue","filterSubmit","reset","resetFields","initFormList","formList","formItemList","field","city","utils","begin_time","end_time","colon","INPUT","SELECT","CHECKBOX","React","ETable","indexOf","splice","tableInit","row_selection","Order","orderInfo","orderConfirmVisble","handleFilter","orderId","handleFindishOrder","openOrderDetail","window","BaseForm","bind","distance","bike_sn","battery","start_time","location","Common","Detail","getDetailInfo","renderMap","BMap","Map","centerAndZoom","addMapControl","drawBikeRoute","position_list","drawServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","positionList","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","point","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","polygon","Polygon","fillColor","fillOpacity","match","order_sn","mobile","start_location","end_location","User","isVisible","handleOperate","userForm","UserForm","getState","username","bikeMap","initiaValue","total_count","handelFilterSubmit","filterParams","route_list","gps1","split","gps2","startPointIcon","imageSizeIcon","bikeMarkerStart","endPointIcon","bikeMarkerEnd","routeList","p","polyLine","strokeWeigth","servicePointList","service_list","polyServiceLine","bikeList","bike_list","bikeIcon","bikeMarker","Bar","getOption","tooltip","trigger","xAxis","yAxis","series","getOption2","legend","echarts","registerTheme","echartTheme","option","Pie","orient","right","bottom","formatter","radius","getOption3","sort","roseType","Line","boundaryGap","areaStyle","TreeNode","Permission","handleRole","isRoleVisible","handleRoleSubmit","RoleForm","handlePermission","isPermVisible","detailInfo","menuInfo","menus","handlePermEditSubmit","permForm","role_id","handleUserAuth","isUserVisible","getRoleUserList","getAuthUserList","mockData","targetKeys","user_id","handleUserSubmit","user_ids","patchMenuInfo","checkedKeys","userAuthForm","patchUserInfo","PermEditForm","onCheck","renderTreeNodes","detail_info","role_name","checkable","defaultExpandAll","menuConfig","RoleAuthForm","filterOption","inputValue","titles","showSearch","Router","path","component","OrderDetail","Button","Tabs","FromLogin","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,aCLd8C,G,wLAEb,OACI,yBAAKoC,UAAU,UAAf,iQ,GAHuBlF,c,2BC0HpBsF,EA5HE,CACb,CACIpB,MAAM,eACNnC,IAAI,SAER,CACImC,MAAM,KACNnC,IAAI,MACJhC,SAAS,CACL,CACImE,MAAM,eACNnC,IAAI,eAER,CACImC,MAAM,eACNnC,IAAI,cAER,CACImC,MAAM,UACNnC,IAAI,gBAER,CACImC,MAAM,2BACNnC,IAAI,oBAER,CACImC,MAAM,sBACNnC,IAAI,gBAER,CACImC,MAAM,kBACNnC,IAAI,YAER,CACImC,MAAM,2BACNnC,IAAI,eAER,CACImC,MAAM,qBACNnC,IAAI,kBAIhB,CACImC,MAAM,eACNnC,IAAI,QACJhC,SAAS,CACL,CACImE,MAAM,eACNnC,IAAI,eAER,CACImC,MAAM,eACNnC,IAAI,eAIhB,CACImC,MAAM,eACNnC,IAAI,SACJhC,SAAS,CACL,CACImE,MAAM,2BACNnC,IAAI,gBAER,CACImC,MAAM,2BACNnC,IAAI,iBAIhB,CACImC,MAAM,qBACNnC,IAAI,SAER,CACImC,MAAM,2BACNnC,IAAI,SAER,CACImC,MAAM,2BACNnC,IAAI,SACJwD,QAAQ,CACJ,CACIrB,MAAM,2BACNnC,IAAI,UAER,CACImC,MAAM,2BACNnC,IAAI,YAIhB,CACImC,MAAM,2BACNnC,IAAI,SAER,CACImC,MAAM,2BACNnC,IAAI,YAER,CACImC,MAAM,eACNnC,IAAI,UACJhC,SAAS,CACL,CACImE,MAAM,qBACNnC,IAAI,eAER,CACImC,MAAM,eACNnC,IAAI,eAER,CACImC,MAAM,qBACNnC,IAAI,kBAIhB,CACImC,MAAM,2BACNnC,IAAI,gBCnHJyD,G,WAAAA,SAEa1C,E,2MAQjB2C,WAAW,SAAC5E,GACR,OAAOA,EAAKa,KAAI,SAACC,GACb,OAAGA,EAAK5B,SAEA,kBAACyF,EAAD,CAAStB,MAAOvC,EAAKuC,MAAOnC,IAAKJ,EAAKI,KAChC,EAAK0D,WAAW9D,EAAK5B,WAI5B,sBAAM2F,KAAN,CAAW3D,IAAKJ,EAAKI,KACxB,kBAAC,IAAD,CAAS4D,GAAIhE,EAAKI,KAAMJ,EAAKuC,Y,oFAhBrC,IAAM0B,EAAe/F,KAAK4F,WAAWI,GACrChG,KAAKwC,SAAS,CACVuD,mB,+BAmBJ,OACI,6BACI,yBAAKV,UAAU,QACX,yBAAKE,IAAI,uBAAuBC,IAAI,SACpC,yCAEJ,uBAAMS,MAAM,QACPjG,KAAKwE,MAAMuB,mB,GA9BG5F,aCDd+F,G,wLAEb,OACI,uBAAKb,UAAU,aACX,uBAAKC,KAAM,EAAGD,UAAU,YACpB,kBAAC,EAAD,OAEJ,uBAAKC,KAAM,GAAID,UAAU,QACrB,kBAAC,EAAD,MACA,uBAAKA,UAAU,WACVrF,KAAKC,MAAMC,UAEhB,kBAAC,EAAD,Y,GAZeC,c,qGCHdgG,G,kNACjB3B,MAAQ,G,EAGN4B,iBAAmB,SAAAC,GACjB,EAAK7D,SAAS,CAAE8D,KAAMD,EAAEE,OAAOvE,S,EAEjCwE,mBAAqB,WACd,EAAKhC,MAAMiC,QACZ,EAAKjE,SAAS,CACViE,SAAQ,IAGZ,EAAKjE,SAAS,CACViE,SAAQ,K,wEAMhB,OACI,6BACI,uBAAMpC,MAAM,2BAAOgB,UAAU,QACzB,uBAAQqB,KAAK,WAAb,gBACA,2CACA,uBAAQA,KAAK,UAAb,gBACA,uBAAQA,KAAK,UAAb,gBACA,uBAAQC,UAAQ,GAAhB,iBAEJ,uBAAMtC,MAAM,2BAAOgB,UAAU,QACzB,uBAAQqB,KAAK,UAAUE,KAAK,QAA5B,gBACA,2CACA,uBAAQF,KAAK,SAASE,KAAK,UAA3B,gBACA,uBAAQF,KAAK,SAASE,KAAK,UAA3B,gBACA,uBAAQD,UAAQ,EAACC,KAAK,gBAAtB,iBAEJ,uBAAMvC,MAAM,sBAAYgB,UAAU,QAC9B,uBAAQqB,KAAK,UAAUD,QAASzG,KAAKwE,MAAMiC,SAA3C,gBACA,uBAAQC,KAAK,UAAUD,QAASzG,KAAKwE,MAAMiC,QAASI,MAAM,WAC1D,uBAAQH,KAAK,SAASD,QAASzG,KAAKwE,MAAMiC,SAA1C,4BACA,uBAAQA,QAASzG,KAAKwE,MAAMiC,QAASI,MAAM,WAC3C,uBAAQH,KAAK,SAASI,QAAS9G,KAAKwG,oBAApC,iBAEJ,uBAAMnC,MAAM,sBACR,sBAAQ0C,MAAR,KACI,uBAAQL,KAAK,WACT,uBAAMA,KAAK,SADf,gBAIA,uBAAQA,KAAK,WAAb,eAEI,uBAAMA,KAAK,aAIvB,uBAAMrC,MAAM,2BAAOgB,UAAU,SACzB,sBAAO0B,MAAP,CAAa/E,MAAOhC,KAAKwE,MAAM8B,KAAMpF,SAAUlB,KAAKoG,kBAChD,uBAAOpE,MAAM,SAAb,UACA,uBAAOA,MAAM,WAAb,UACA,uBAAOA,MAAM,SAAb,WAEJ,uBAAQ0E,KAAK,UAAUJ,KAAMtG,KAAKwE,MAAM8B,MAAxC,gBACA,uBAAQA,KAAMtG,KAAKwE,MAAM8B,MAAzB,gBACA,uBAAQI,KAAK,SAASJ,KAAMtG,KAAKwE,MAAM8B,MAAvC,gBACA,uBAAQI,KAAK,SAASJ,KAAMtG,KAAKwE,MAAM8B,MAAvC,sB,GAhEiBnG,cCDhB6G,G,wLAEb,OACI,yBAAK3B,UAAU,eACX,yBAAKE,IAAI,kBAAkBC,IAAI,U,GAJVrF,c,SCChB8G,E,2MACjBzC,MAAQ,CACJ0C,YAAW,EACXC,YAAW,EACXC,YAAW,EACXC,YAAW,G,EAEfC,WAAa,SAACZ,GACV,EAAKlE,SAAL,eACKkE,GAAM,K,EAGfa,cAAgB,SAACb,GACb,IAAMA,GAAM,CACRrC,MAAM,qBACNC,QAAQ,+DACRkD,KAHQ,WAIJC,QAAQC,IAAI,OAEhBC,SANQ,WAOJF,QAAQC,IAAI,c,wEAId,IAAD,OACL,OACI,6BACI,uBAAMrD,MAAM,iCAAQgB,UAAU,QAC1B,uBAAQqB,KAAK,UAAUI,QAAS,kBAAK,EAAKQ,WAAW,gBAArD,QACA,uBAAQZ,KAAK,UAAUI,QAAS,kBAAK,EAAKQ,WAAW,gBAArD,kCACA,uBAAQZ,KAAK,UAAUI,QAAS,kBAAK,EAAKQ,WAAW,gBAArD,gCACA,uBAAQZ,KAAK,UAAUI,QAAS,kBAAK,EAAKQ,WAAW,gBAArD,qDAEJ,uBAAMjD,MAAM,iCAAQgB,UAAU,QAC1B,uBAAQqB,KAAK,UAAUI,QAAS,kBAAK,EAAKS,cAAc,aAAxD,WACA,uBAAQb,KAAK,UAAUI,QAAS,kBAAK,EAAKS,cAAc,UAAxD,QACA,uBAAQb,KAAK,UAAUI,QAAS,kBAAK,EAAKS,cAAc,aAAxD,WACA,uBAAQb,KAAK,UAAUI,QAAS,kBAAK,EAAKS,cAAc,WAAxD,SACA,uBAAQb,KAAK,UAAUI,QAAS,kBAAK,EAAKS,cAAc,aAAxD,YAEA,uBACIlD,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAM0C,WACpBS,SAAU,WACN,EAAKnF,SAAS,CACV0E,YAAW,KAGnBM,KAAM,WACF,EAAKhF,SAAS,CACV0E,YAAW,MAIf,0HAER,uBACI7C,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAM2C,WACpBU,OAAO,eACPC,WAAW,eACXH,SAAU,WACN,EAAKnF,SAAS,CACV2E,YAAW,KAGnBK,KAAM,WACF,EAAKhF,SAAS,CACV2E,YAAW,MAIf,0HAER,uBACI9C,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAM4C,WACpBW,MAAO,CAACC,IAAI,IACZL,SAAU,WACN,EAAKnF,SAAS,CACV4E,YAAW,KAGnBI,KAAM,WACF,EAAKhF,SAAS,CACV4E,YAAW,MAIf,0HAER,uBACI/C,MAAM,2BACN4D,cAAc,wBACdL,QAAS5H,KAAKwE,MAAM6C,WACpBM,SAAU,WACN,EAAKnF,SAAS,CACV6E,YAAW,KAGnBG,KAAM,WACF,EAAKhF,SAAS,CACV6E,YAAW,MAIf,+H,GA1GQlH,a,sDCA9B+H,EAAU,uBAAMxB,KAAK,UAAUqB,MAAO,CAACI,SAAS,IAAKC,MAAI,IAE1CC,E,iLAEb,OACI,6BACI,uBAAMhE,MAAM,mBAASgB,UAAU,QAC3B,uBAAMiB,KAAK,UACX,4BACA,uBAAMA,KAAK,UACX,uBAAMgC,UAAWJ,KAErB,uBAAM7D,MAAM,4BACR,uBAAMkE,IAAI,sBACN,uBACI3E,QAAQ,QACR4E,YAAY,wDACZ9B,KAAK,gB,GAfKvG,aCHjBsI,I,wLAEb,OACI,yBAAKpD,UAAU,aAAf,4F,GAHsBlF,c,8BCC5BuI,GAAmB,WACrB,KAAaC,KAAK,CAClB/E,QAAS,2BACT4E,YACI,uFACJ5B,KAAM,uBAAMF,KAAK,QAAQqB,MAAO,CAAEa,MAAO,gBAIvCC,GAA2B,SAACnC,EAAKoC,GAChCA,GACC,KAAaC,OAAO,CAChBC,UAAUF,IAGlB,KAAapC,GAAM,CACnB9C,QAAS,2BACT4E,YACI,sGAIaS,G,iLAEb,OACI,6BACI,uBAAM5E,MAAM,iCAAQgB,UAAU,QAC1B,uBAAQqB,KAAK,UAAUI,QAAS4B,IAAhC,8BAIJ,uBAAMrE,MAAM,2BAAOgB,UAAU,QACzB,uBAAQyB,QAAS,kBAAM+B,GAAyB,aAAhD,WACA,uBAAQ/B,QAAS,kBAAM+B,GAAyB,UAAhD,QACA,uBAAQ/B,QAAS,kBAAM+B,GAAyB,aAAhD,WACA,uBAAQ/B,QAAS,kBAAM+B,GAAyB,WAAhD,UAEJ,uBAAMxE,MAAM,2BAAOgB,UAAU,QACzB,uBAAQyB,QAAS,kBAAM+B,GAAyB,UAAU,aAA1D,WACA,uBAAQ/B,QAAS,kBAAM+B,GAAyB,OAAO,cAAvD,YACA,uBAAQ/B,QAAS,kBAAM+B,GAAyB,UAAU,gBAA1D,cACA,uBAAQ/B,QAAS,kBAAM+B,GAAyB,QAAQ,iBAAxD,qB,GAnBsB1I,a,6BCrBrB+I,G,2MACjBC,YAAc,SAACzC,GACX,KAAQA,GAAM,2D,wEAER,IAAD,OACL,OACI,6BACI,uBAAMrC,MAAM,iCAAQgB,UAAU,QAC1B,uBAAQyB,QAAS,kBAAI,EAAKqC,YAAY,aAAtC,WACA,uBAAQrC,QAAS,kBAAI,EAAKqC,YAAY,WAAtC,SACA,uBAAQrC,QAAS,kBAAI,EAAKqC,YAAY,aAAtC,WACA,uBAAQrC,QAAS,kBAAI,EAAKqC,YAAY,UAAtC,QACA,uBAAQrC,QAAS,kBAAI,EAAKqC,YAAY,aAAtC,iB,GAZiBhJ,a,8BCD/BiJ,GAAU,KAAKA,QAEAC,G,YACjB,WAAYpJ,GAAQ,IAAD,uBACf,4CAAMA,KAyBViB,SAAW,SAAAoI,GACP,EAAK9G,SAAS,CAAE8G,eA3BD,EA6BnBC,OAAS,SAACC,EAAWC,GACjB,EAAKA,GAAQD,IA9BE,EAgCnBE,IAAM,WAAO,IACDC,EAAU,EAAKnF,MAAfmF,MACFL,EAAS,sBAAQ,EAAKM,eAC5BD,EAAM5H,KAAK,CAAEsC,MAAOiF,EAAWhF,QAAS,mDAAYpC,IAAKoH,IACzD,EAAK9G,SAAS,CAAEmH,QAAOL,eApCR,EAsCnBO,OAAS,SAAAL,GAAc,IAEfM,EADER,EAAc,EAAK9E,MAAnB8E,UAEN,EAAK9E,MAAMmF,MAAMI,SAAQ,SAACC,EAAMC,GACxBD,EAAK9H,MAAQsH,IACbM,EAAYG,EAAI,MAGxB,IAAMN,EAAQ,EAAKnF,MAAMmF,MAAMO,QAAO,SAAAF,GAAI,OAAIA,EAAK9H,MAAQsH,KACvDG,EAAMQ,QAAUb,IAAcE,IAE1BF,EADAQ,GAAa,EACDH,EAAMG,GAAW5H,IAEjByH,EAAM,GAAGzH,KAG7B,EAAKM,SAAS,CAAEmH,QAAOL,eAtDR,EAwDnBc,SAAW,SAAClI,GACR,KAAQkC,KAAK,gDAAalC,IAvD1B,EAAK0H,YAAc,EACnB,IAAMD,EAAQ,CACV,CACItF,MAAO,eACPC,QAAS,6CACTpC,IAAK,KAET,CACImC,MAAO,eACPC,QAAS,6CACTpC,IAAK,KAET,CACImC,MAAO,eACPC,QAAS,uCACTpC,IAAK,IACLmI,UAAU,IAlBH,OAqBf,EAAK7F,MAAQ,CACT8E,UAAWK,EAAM,GAAGzH,IACpByH,SAvBW,E,sEA4Df,OACI,6BACI,uBAAMtF,MAAM,kBAAQgB,UAAU,QAC1B,wBAAMiF,iBAAiB,IAAIpJ,SAAUlB,KAAKoK,UACtC,kBAAChB,GAAD,CAASmB,IAAI,eAAKrI,IAAI,KAAtB,wCAGA,kBAACkH,GAAD,CAASmB,IAAI,eAAKrI,IAAI,KAAtB,8CAGA,kBAACkH,GAAD,CAASmB,IAAI,eAAKrI,IAAI,KAAtB,4DAKR,uBAAMmC,MAAM,oCAAWgB,UAAU,QAC7B,wBAAMiF,iBAAiB,IAAIpJ,SAAUlB,KAAKoK,UACtC,kBAAChB,GAAD,CAASmB,IAAK,8BAAM,uBAAM7D,KAAK,WAAjB,gBAAuCxE,IAAI,KAAzD,wCAGA,kBAACkH,GAAD,CAASmB,IAAK,8BAAM,uBAAM7D,KAAK,UAAjB,gBAAsCxE,IAAI,KAAxD,8CAGA,kBAACkH,GAAD,CAASmB,IAAK,8BAAM,uBAAM7D,KAAK,SAAjB,gBAAqCxE,IAAI,KAAvD,4DAKR,uBAAMmC,MAAM,6CAAUgB,UAAU,QAC5B,wBACInE,SAAUlB,KAAKkB,SACfoI,UAAWtJ,KAAKwE,MAAM8E,UACtB5C,KAAK,gBACL6C,OAAQvJ,KAAKuJ,QAEZvJ,KAAKwE,MAAMmF,MAAM9H,KAAI,SAAAmI,GAAI,OACtB,kBAACZ,GAAD,CAASmB,IAAKP,EAAK3F,MAAOnC,IAAK8H,EAAK9H,IAAKmI,SAAUL,EAAKK,UACnDL,EAAK1F,mB,GAlGLnE,aCFZqK,G,2MACjBhG,MAAQ,CACJoD,SAAQ,G,EAEZ6C,YAAc,SAACC,GACX,EAAKlI,SAAS,CACVoF,SAAQ,EACR+C,WAAW,YAAcD,K,wEAGvB,IAAD,OAQCE,EAPO,CACT,CAAC,QAAQ,QAAQ,QAAQ,SAAS,SAClC,CAAC,QAAQ,SAAS,SAAS,QAAQ,UACnC,CAAC,SAAS,SAAS,SAAS,QAAQ,UACpC,CAAC,SAAS,SAAS,SAAS,SAAS,UACrC,CAAC,SAAS,SAAS,QAAQ,QAAQ,WAElB/I,KAAI,SAACH,GAAD,OAAQA,EAAKG,KAAI,SAACC,GAAD,OACtC,uBACIiG,MAAO,CAAC8C,aAAa,IACrBC,MAAO,yBAAKvF,IAAK,YAAczD,EAAM0D,IAAI,UAAUsB,QAAS,kBAAI,EAAK2D,YAAY3I,OAEjF,sBAAMiJ,KAAN,CACI1G,MAAM,eACNmE,YAAY,0CAIxB,OACI,yBAAKnD,UAAU,aACX,uBAAK2F,OAAQ,IACT,uBAAKC,GAAI,GACJL,EAAQ,IAEb,uBAAKK,GAAI,GACJL,EAAQ,IAEb,uBAAKK,GAAI,GACJL,EAAQ,IAEb,uBAAKK,GAAI,GACJL,EAAQ,IAEb,uBAAKK,GAAI,GACJL,EAAQ,KAGjB,uBACIM,MAAO,IACP7G,MAAM,eACNuD,QAAS5H,KAAKwE,MAAMoD,QACpBD,SAAU,WACN,EAAKnF,SAAS,CACVoF,SAAQ,KAGhBuD,OAAQ,MAER,yBAAK5F,IAAKvF,KAAKwE,MAAMmG,WAAYnF,IAAI,GAAGuC,MAAO,CAACmD,MAAM,gB,GA3DrC/K,a,8BCAhBiL,G,iLAEb,OACI,6BACI,uBAAM/G,MAAM,2BAAO0D,MAAO,CAAC8C,aAAa,KACpC,wBAAUQ,UAAQ,EAACC,OAAO,QACtB,6BAAK,2EACL,6BAAK,iFACL,6BAAK,iFACL,6BAAK,yFAGb,uBAAMjH,MAAM,2BAAOgB,UAAU,eACzB,wBAAUgG,UAAQ,GACd,6BAAK,yBAAK9F,IAAI,+BAA+BC,IAAI,GAAGuC,MAAO,CAACmD,MAAM,OAAOK,OAAO,QAChF,6BAAK,yBAAKhG,IAAI,+BAA+BC,IAAI,GAAGuC,MAAO,CAACmD,MAAM,OAAOK,OAAO,QAChF,6BAAK,yBAAKhG,IAAI,+BAA+BC,IAAI,GAAGuC,MAAO,CAACmD,MAAM,OAAOK,OAAO,e,GAhBpEpL,a,uFCD9BqL,I,OAAW,KAAK3F,MAEf4F,G,2MAEHC,aAAe,SAAArF,GACXA,EAAEsF,iBACF,EAAK1L,MAAM2L,KAAKC,gBAAe,SAACpI,EAAIqI,GAC5BrI,GACA,KAAQsI,QAAQ,gC,wEAIlB,IACEC,EAAsBhM,KAAKC,MAAM2L,KAAjCI,kBACR,OACI,6BACI,uBAAM3H,MAAM,wCACR,wBAAM4H,OAAO,UACT,kBAACT,GAAD,KACI,wBAAOU,YAAY,0CAEvB,kBAACV,GAAD,KACI,uBAAOW,SAAP,CAAgBD,YAAY,oCAEhC,kBAACV,GAAD,KACI,uBAAQ9E,KAAK,WAAb,mBAIZ,uBAAMrC,MAAM,uCAAS0D,MAAO,CAACqE,UAAU,KACnC,wBAAMC,SAAUrM,KAAK0L,aAAcrG,UAAU,cACzC,uBAAMQ,KAAN,KACKmG,EAAkB,WAAY,CAC3BM,MAAO,CAAC,CAAEC,UAAU,EAAM3I,QAAS,2CADtCoI,CAGG,wBACIQ,OAAQ,uBAAM9F,KAAK,OAAOqB,MAAO,CAAEa,MAAO,qBAC1CsD,YAAY,uCACZnE,MAAO,CAACmD,MAAM,SAI1B,uBAAMrF,KAAN,KACKmG,EAAkB,WAAY,CAC3BM,MAAO,CAAC,CAAEC,UAAU,EAAM3I,QAAS,qCADtCoI,CAGG,wBACIQ,OAAQ,uBAAM9F,KAAK,OAAOqB,MAAO,CAAEa,MAAO,qBAC1ClC,KAAK,WACLwF,YAAY,iCACZnE,MAAO,CAACmD,MAAM,SAI1B,uBAAMrF,KAAN,CAAWR,UAAU,aAChB2G,EAAkB,WAAY,CAC3BS,cAAe,UACfC,cAAc,GAFjBV,CAGE,yDACH,uBAAG3G,UAAU,oBAAoBsH,KAAK,IAAtC,4BAGA,6BACA,uBAAQjG,KAAK,UAAUqB,MAAO,CAACmD,MAAM,KAAM0B,SAAS,SAASvH,UAAU,qBAAvE,wB,GA7DHlF,aAuEV,QAAK0M,QAAL,CAAcpB,I,uMCxEvBqB,GAAa,IAAM/F,MACjBgG,G,KAAAA,OACFC,GAAW,KAAMA,SAEvB,SAASC,GAAaC,GAClB,IAAMC,EAA2B,eAAdD,EAAKxG,MAAuC,cAAdwG,EAAKxG,KACjDyG,GACD,KAAQC,MAAM,qCAElB,IAAMC,EAASH,EAAK5G,KAAO,KAAO,KAAO,EAIzC,OAHK+G,GACD,KAAQD,MAAM,gCAEXD,GAAcE,E,IAGnBC,G,2MAEF9I,MAAQ,G,EAGRkH,aAAe,WACX,IAAI6B,EAAW,EAAKtN,MAAM2L,KAAK4B,iBAC/B/F,QAAQC,IAAI+F,KAAKC,UAAUH,IAC3B,KAAQxB,QAAR,UAAmBwB,EAAS9I,SAA5B,gJAA8D8I,EAASI,W,EAI3EC,UAAY,SAACC,EAAK5M,GACd,IAAM6M,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAM/M,EAAS6M,EAAO1M,WACtD0M,EAAOG,cAAcJ,I,EAGzBK,aAAe,SAAA9J,GACc,cAArBA,EAAK8I,KAAKvJ,OAIW,SAArBS,EAAK8I,KAAKvJ,QACV,EAAKiK,UAAUxJ,EAAK8I,KAAKiB,eAAe,SAAAC,GAAQ,OAC5C,EAAK5L,SAAS,CACV6L,QAAQD,EACR3H,SAAS,OAPjB,EAAKjE,SAAS,CAAEiE,SAAS,K,wEAYvB,IACEuF,EAAsBhM,KAAKC,MAAM2L,KAAjCI,kBACFsC,EAAiB,CACnBC,SAAS,CACLC,GAAG,GACHC,GAAG,GAEPC,WAAW,CACPF,GAAG,GACHC,GAAG,KAILE,EAAe,CACjBD,WAAW,CACPF,GAAG,GACHC,GAAG,CACCnJ,KAAK,GACLsJ,OAAO,KAWnB,OACI,6BACI,uBAAMvK,MAAM,4BACR,wBAAM4H,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,sBAAUP,GACtBtC,EAAkB,WAAY,CAC3BU,aAAa,GACbJ,MAAO,CAAC,CAAEC,UAAU,EAAM3I,QAAS,2CAFtCoI,CAIG,wBACIQ,OAAQ,uBAAM9F,KAAK,OAAOqB,MAAO,CAAEa,MAAO,qBAC1CsD,YAAY,2CAIxB,uBAAMrG,KAAN,eAAWgJ,MAAM,gBAASP,GACrBtC,EAAkB,UAAW,CAC1BU,aAAa,GACbJ,MAAO,CAAC,CAAEC,UAAU,EAAM3I,QAAS,qCAFtCoI,CAIG,wBACIQ,OAAQ,uBAAM9F,KAAK,OAAOqB,MAAO,CAAEa,MAAO,qBAC1CsD,YAAY,iCACZxF,KAAK,eAIjB,uBAAMb,KAAN,eAAWgJ,MAAM,gBAASP,GACrBtC,EAAkB,MAAO,CACtBU,aAAa,KADhBV,CAGG,kBAACc,GAAD,KACI,uBAAO9K,MAAM,KAAb,UACA,uBAAOA,MAAM,KAAb,aAIZ,uBAAM6D,KAAN,eAAWgJ,MAAM,gBAASP,GACrBtC,EAAkB,MAAO,CACtBU,aAAa,MADhBV,CAGG,+BAGR,uBAAMnG,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtC,EAAkB,QAAS,CACxBU,aAAa,KADhBV,CAGG,4BACI,kBAAC,GAAD,CAAQhK,MAAM,KAAd,4BACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,4BACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,4BACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,+BAIZ,uBAAM6D,KAAN,eAAWgJ,MAAM,gBAASP,GACrBtC,EAAkB,OAAQ,CACvBU,aAAa,CAAC,IAAI,IAAI,IAAI,MAD7BV,CAGG,wBAAQ8C,KAAK,YACT,kBAAC,GAAD,CAAQ9M,MAAM,KAAd,gBACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,gBACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,yBAIZ,uBAAM6D,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtC,EAAkB,YAAa,CAC5BS,cAAe,UACfC,cAAa,GAFhBV,CAIG,+BAGR,uBAAMnG,KAAN,eAAWgJ,MAAM,gBAASP,GACrBtC,EAAkB,WAAY,CAC3BU,aAAaqC,KAAO,cADvB/C,CAGG,wBACIgD,UAAQ,EACRC,OAAO,0BAInB,uBAAMpJ,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtC,EAAkB,UAAW,CAC1BU,aAAa,IADhBV,CAGG,kBAACgB,GAAD,CAAUd,YAAY,yDAAYgD,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAG3E,uBAAMvJ,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtC,EAAkB,OAAQ,CACvBU,aAAa,IADhBV,CAGG,+BAGR,uBAAMnG,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtC,EAAkB,UAAW,CAC1BU,aAAa,IADhBV,CAIG,wBACI7J,KAAK,SACLkN,SAAS,eACThK,UAAU,kBACViK,gBAAgB,EAChB7F,OAAO,mDACPwD,aAAcA,GACd/L,SAAUlB,KAAKkO,cAEdlO,KAAKwE,MAAM6J,QAAU,yBAAK9I,IAAKvF,KAAKwE,MAAM6J,QAAS7I,IAAI,SAASuC,MAAO,CAAEmD,MAAO,UAAe,uBAAMxE,KAAK,YAIvH,uBAAMb,KAAS8I,EACV3C,EAAkB,QAAS,CACxBU,aAAa,GACbJ,MAAO,CAAC,CAAEC,UAAU,EAAM3I,QAAS,qCAFtCoI,CAIG,uDAAc,uBAAGW,KAAK,KAAR,sBAGtB,uBAAM9G,KAAS8I,EACX,uBAAQjI,KAAK,UAAUI,QAAS9G,KAAK0L,cAArC,wB,GA5LLvL,aAoMR,QAAK0M,QAAL,CAAcS,I,sCCnNRiC,G,2MACjB/K,MAAQ,CACJgL,YAAY,I,EAEhB5M,OAAS,CACLvB,KAAK,G,EAiEToO,QAAU,WACN,IAAI/M,EAAM,gBACVoB,EAAMhB,KAAK,CACPH,IAAI,cACJ3B,KAAK,CACD4B,OAAO,CACHvB,KAAK,EAAKuB,OAAOvB,SAG1B0B,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACHD,EAAI9C,OAAOM,KAAKG,KAAI,SAACC,EAAKmB,GACtBnB,EAAKI,IAAMe,KAEf,EAAKT,SAAS,CACVgN,YAAYtL,EAAI9C,OAAOM,KACvBW,gBAAgB,GAChBqN,aAAa,KACb3O,WAAWmC,EAAMnC,WAAWmD,GAAI,SAAC/C,GAC7BuB,EAAME,OAAOvB,KAAOF,EACpB,EAAKsO,oB,EAOzBE,WAAa,SAACC,EAAO3M,GACjB,IAAI4M,EAAY,CAAC5M,GACjB,IAAMmB,KAAK,CACPC,MAAM,eACNC,QAAQ,2BAAD,OAAQsL,EAAOnL,SAAf,yBAA8BmL,EAAOE,YAEhD,EAAKtN,SAAS,CACVH,gBAAgBwN,EAChBvN,aAAasN,K,EAIrBG,aAAgB,WACZ,IAAIC,EAAO,EAAKxL,MAAMkL,aAClBO,EAAM,GACVD,EAAKnO,KAAI,SAACC,GACNmO,EAAIlO,KAAKD,EAAKG,OAElB,IAAMiO,QAAQ,CACV7L,MAAM,2BACNC,QAAQ,2EAAD,OAAgB2L,EAAIE,KAAK,MAChC3I,KAAK,WACD,KAAQuE,QAAQ,4BAChB,EAAK0D,c,mFAhHb,IAAMW,EAAa,CACf,CACInO,GAAG,IACHwC,SAAS,MACT4L,IAAI,IACJ7L,MAAM,IACNsL,SAAS,IACTQ,SAAS,YACTC,QAAQ,eACRC,YAAY,eAEhB,CACIvO,GAAG,IACHwC,SAAS,MACT4L,IAAI,SACJ7L,MAAM,IACNsL,SAAS,IACTQ,SAAS,YACTC,QAAQ,eACRC,YAAY,eAEhB,CACIvO,GAAG,IACHwC,SAAS,MACT4L,IAAI,SACJ7L,MAAM,IACNsL,SAAS,IACTQ,SAAS,YACTC,QAAQ,eACRC,YAAY,eAEhB,CACIvO,GAAG,IACHwC,SAAS,MACT4L,IAAI,IACJ7L,MAAM,IACNsL,SAAS,IACTQ,SAAS,YACTC,QAAQ,eACRC,YAAY,eAEhB,CACIvO,GAAG,IACHwC,SAAS,MACT4L,IAAI,IACJ7L,MAAM,IACNsL,SAAS,IACTQ,SAAS,YACTC,QAAQ,eACRC,YAAY,gBAGpBJ,EAAWvO,KAAI,SAACC,EAAKmB,GACjBnB,EAAKI,IAAMe,KAEfjD,KAAKwC,SAAS,CACV4N,eAEJpQ,KAAKyP,Y,+BA2DC,IAAD,OACCgB,EAAU,CACZ,CACIpM,MAAM,KACNqM,UAAU,MACZ,CACErM,MAAM,qBACNqM,UAAU,YACZ,CACErM,MAAM,eACNqM,UAAU,MACVC,OAHF,SAGSN,GACH,OAAe,IAARA,EAAY,SAAM,WAE/B,CACEhM,MAAM,eACNqM,UAAU,QACVC,OAHF,SAGSnM,GAQH,MAPa,CACT,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBAEIA,KAEpB,CACEH,MAAM,eACNqM,UAAU,WACVC,OAHF,SAGSb,GAWH,MAVa,CACT,EAAM,eACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,eACN,EAAM,gBAEIA,KAEpB,CACEzL,MAAM,eACNqM,UAAU,YACZ,CACErM,MAAM,eACNqM,UAAU,WACZ,CACErM,MAAM,2BACNqM,UAAU,gBAGVrO,EAAoBrC,KAAKwE,MAAzBnC,gBACFuO,EAAe,CACjBlK,KAAK,QACLrE,mBAEEwO,EAAoB,CACtBnK,KAAK,WACLrE,kBACAnB,SAAS,SAACmB,EAAgByO,GACtB,IAAIb,EAAM,GACV5N,EAAgBR,KAAI,SAACC,GACjBmO,EAAIlO,KAAKD,EAAKG,OAElB,EAAKO,SAAS,CACVH,kBACAE,YAAY0N,MAIxB,OACI,6BACI,uBAAM5L,MAAM,4BACR,wBACIoM,QAASA,EACTL,WAAYpQ,KAAKwE,MAAM4L,WACvBrP,YAAY,KAGpB,uBAAMsD,MAAM,mDAAW0D,MAAO,CAACqE,UAAU,KACrC,wBACIqE,QAASA,EACTL,WAAYpQ,KAAKwE,MAAMgL,YACvBzO,YAAY,KAGpB,uBAAMsD,MAAM,oBAAU0D,MAAO,CAACqE,UAAU,KACpC,wBACIwE,aAAcA,EACdG,MAAO,SAACnB,EAAO3M,GACX,MAAO,CACH6D,QAAQ,WACJ,EAAK6I,WAAWC,EAAO3M,MAInCwN,QAASA,EACTL,WAAYpQ,KAAKwE,MAAMgL,YACvBzO,YAAY,KAGpB,uBAAMsD,MAAM,oBAAU0D,MAAO,CAACqE,UAAU,KACpC,yBAAKrE,MAAO,CAAC8C,aAAa,KACtB,uBAAQ/D,QAAS9G,KAAK+P,cAAtB,iBAEJ,wBACIa,aAAcC,EACdE,MAAO,SAACnB,EAAO3M,GACX,MAAO,CACH6D,QAAQ,WACJ,EAAK6I,WAAWC,EAAO3M,MAInCwN,QAASA,EACTL,WAAYpQ,KAAKwE,MAAMgL,YACvBzO,YAAY,KAGpB,uBAAMsD,MAAM,gCAAY0D,MAAO,CAACqE,UAAU,KACtC,wBACIqE,QAASA,EACTL,WAAYpQ,KAAKwE,MAAMgL,YACvBzO,WAAYf,KAAKwE,MAAMzD,mB,GA3PZZ,a,8BCAd6Q,G,2MACjBxM,MAAQ,G,EAGR5B,OAAS,CACLvB,KAAK,G,EAKToO,QAAU,WAEN3L,EAAMhB,KAAK,CACPH,IAAI,mBACJ3B,KAAK,CACD4B,OAAO,CACHvB,KAAK,EAAKuB,OAAOvB,SAG1B0B,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACHD,EAAI9C,OAAOM,KAAKG,KAAI,SAACC,EAAKmB,GACtBnB,EAAKI,IAAMe,KAEf,EAAKT,SAAS,CACV4N,WAAWlM,EAAI9C,OAAOM,Y,EAKtCwM,aAAe,SAACnN,EAAWkQ,EAAQC,GAC/B,EAAK1O,SAAS,CACV2O,UAAUD,EAAOE,S,EAIzBrB,aAAe,SAACjO,GAEZ,IAAMoO,QAAQ,CACV7L,MAAM,eACNC,QAAQ,2EACRkD,KAAK,WACD,KAAQuE,QAAQ,4BAChB,EAAK0D,c,mFAnCbzP,KAAKyP,Y,+BAuCC,IAAD,OAuNC4B,EAAW,CACb,CACIhN,MAAM,KACNqM,UAAU,MACZ,CACErM,MAAM,qBACNqM,UAAU,YACZ,CACErM,MAAM,eACNqM,UAAU,MACVC,OAHF,SAGSN,GACH,OAAe,IAARA,EAAY,SAAM,WAE/B,CACEhM,MAAM,eACNqM,UAAU,MACVQ,OAAO,SAACI,EAAEC,GACN,OAAOD,EAAEE,IAAMD,EAAEC,KAErBL,UAAUnR,KAAKwE,MAAM2M,WACvB,CACE9M,MAAM,eACNqM,UAAU,QACVC,OAHF,SAGSnM,GAQH,MAPa,CACT,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBAEIA,KAEpB,CACEH,MAAM,eACNqM,UAAU,WACVC,OAHF,SAGSb,GAWH,MAVa,CACT,EAAM,eACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,eACN,EAAM,gBAEIA,KAEpB,CACEzL,MAAM,eACNqM,UAAU,YACZ,CACErM,MAAM,eACNqM,UAAU,WACZ,CACErM,MAAM,2BACNqM,UAAU,gBAGZe,EAAW,CACb,CACIpN,MAAM,KACNqM,UAAU,MACZ,CACErM,MAAM,qBACNqM,UAAU,YACZ,CACErM,MAAM,eACNqM,UAAU,MACVC,OAHF,SAGSN,GACH,OAAe,IAARA,EAAY,SAAM,WAE/B,CACEhM,MAAM,eACNqM,UAAU,OACZ,CACErM,MAAM,eACNqM,UAAU,QACVC,OAHF,SAGSnM,GAQH,MAPa,CACT,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBAEIA,KAEpB,CACEH,MAAM,eACNqM,UAAU,WACVC,OAHF,SAGSb,GAWH,MAVa,CACT,EAAM,wBAAOnM,OAAO,UAAU+N,KAAK,iBACnC,EAAM,wBAAO/N,OAAO,QAAQ+N,KAAK,iBACjC,EAAM,wBAAO/N,OAAO,UAAU+N,KAAK,uBACnC,EAAM,wBAAO/N,OAAO,aAAa+N,KAAK,iBACtC,EAAM,wBAAO/N,OAAO,UAAU+N,KAAK,uBACnC,EAAM,wBAAO/N,OAAO,UAAU+N,KAAK,iBACnC,EAAM,wBAAO/N,OAAO,UAAU+N,KAAK,iBACnC,EAAO,wBAAO/N,OAAO,UAAU+N,KAAK,kBAE1B5B,KAEpB,CACEzL,MAAM,eACNqM,UAAU,YACZ,CACErM,MAAM,eACNqM,UAAU,WACZ,CACErM,MAAM,2BACNqM,UAAU,eACZ,CACErM,MAAM,eACNsM,OAAO,SAACe,EAAK5P,GACT,OAAO,uBAAQgF,QAAS,SAAChF,GAAQ,EAAKiO,aAAajO,KAA5C,mBAInB,OACI,6BACI,uBAAMuC,MAAM,4BACR,wBACIoM,QAnVA,CACZ,CACIpM,MAAM,KACNqM,UAAU,KACVxF,MAAM,IACR,CACE7G,MAAM,qBACNqM,UAAU,WACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,MACVxF,MAAM,GACNyF,OAJF,SAISN,GACH,OAAe,IAARA,EAAY,SAAM,WAE/B,CACEhM,MAAM,eACNqM,UAAU,QACVxF,MAAM,GACNyF,OAJF,SAISnM,GAQH,MAPa,CACT,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBAEIA,KAEpB,CACEH,MAAM,eACNqM,UAAU,WACVxF,MAAM,GACNyF,OAJF,SAISb,GAWH,MAVa,CACT,EAAM,eACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,eACN,EAAM,gBAEIA,KAEpB,CACEzL,MAAM,eACNqM,UAAU,WACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,UACVxF,MAAM,KACR,CACE7G,MAAM,2BACNqM,UAAU,cACVxF,MAAM,KA0REkF,WAAYpQ,KAAKwE,MAAM4L,WACvBrP,YAAY,EACZ4Q,OAAQ,CAACC,EAAE,QAGnB,uBAAMvN,MAAM,2BAAO0D,MAAO,CAACqE,UAAU,KACjC,wBACIqE,QA9RC,CACb,CACIpM,MAAM,KACNqM,UAAU,KACVxF,MAAM,GACN2G,MAAM,QACR,CACExN,MAAM,qBACNqM,UAAU,WACVxF,MAAM,GACN2G,MAAM,QACR,CACExN,MAAM,eACNqM,UAAU,MACVxF,MAAM,GACNyF,OAJF,SAISN,GACH,OAAe,IAARA,EAAY,SAAM,WAE/B,CACEhM,MAAM,eACNqM,UAAU,QACVxF,MAAM,GACNyF,OAJF,SAISnM,GAQH,MAPa,CACT,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBAEIA,KAEpB,CACEH,MAAM,eACNqM,UAAU,WACVxF,MAAM,GACNyF,OAJF,SAISb,GAWH,MAVa,CACT,EAAM,eACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,eACN,EAAM,gBAEIA,KAEpB,CACEzL,MAAM,eACNqM,UAAU,WACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,YACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,aACVxF,MAAM,IACR,CACE7G,MAAM,eACNqM,UAAU,UACVxF,MAAM,IACN2G,MAAM,SACR,CACExN,MAAM,2BACNqM,UAAU,cACVxF,MAAM,GACN2G,MAAM,UAyIEzB,WAAYpQ,KAAKwE,MAAM4L,WACvBrP,YAAY,EACZ4Q,OAAQ,CAACG,EAAE,SAGnB,uBAAMzN,MAAM,2BAAO0D,MAAO,CAACqE,UAAU,KACjC,wBACIqE,QAASY,EACTjB,WAAYpQ,KAAKwE,MAAM4L,WACvBrP,YAAY,EACZG,SAAUlB,KAAKkO,gBAGvB,uBAAM7J,MAAM,2BAAO0D,MAAO,CAACqE,UAAU,KACjC,wBACIqE,QAASgB,EACTrB,WAAYpQ,KAAKwE,MAAM4L,WACvBrP,YAAY,U,GA7ZFZ,aCCb4R,G,2MAEjBvN,MAAQ,CACJ9C,KAAK,GACLsQ,gBAAe,G,EAEnBpP,OAAS,CACLvB,KAAK,G,EAOT8B,YAAc,WACV,IAAIT,EAAK,gBACToB,EAAMhB,KAAK,CACPH,IAAI,aACJ3B,KAAK,CACD4B,OAAO,CACHvB,KAAK,EAAKuB,OAAOvB,SAG1B0B,MAAK,SAACmB,GACL,IAAIxC,EAAOwC,EAAI9C,OAAO4B,UAAUnB,KAAI,SAACC,EAAKmB,GAEtC,OADAnB,EAAKI,IAAMe,EACJnB,KAEX,EAAKU,SAAS,CACVd,OACAX,WAAWmC,EAAMnC,WAAWmD,GAAI,SAAC/C,GAC7BuB,EAAME,OAAOvB,KAAOF,EACpBuB,EAAMS,uB,EAOtB8O,eAAiB,WACb,EAAKzP,SAAS,CACVwP,gBAAe,K,EAIvBtG,aAAe,WACX,IAAIwG,EAAW,EAAKC,SAASlS,MAAM2L,KAAK4B,iBACxC1J,EAAMhB,KAAK,CACPH,IAAI,aACJ3B,KAAK,CACD4B,OAAOsP,KAEZnP,MAAK,SAACmB,GACW,MAAbA,EAAIC,OACH,KAAQ4H,QAAQ,4BAChB,EAAKvJ,SAAS,CACVwP,gBAAe,IAEnB,EAAK7O,mB,mFAhDbnD,KAAKmD,gB,+BAqDC,IAAD,OACCsN,EAAU,CACZ,CACIpM,MAAM,iBACNqM,UAAU,MACZ,CACErM,MAAM,2BACNqM,UAAU,QACZ,CACErM,MAAM,2BACNqM,UAAU,OACVC,OAHF,SAGS7B,GACH,OAAgB,IAATA,EAAa,qBAAQ,uBAElC,CACEzK,MAAM,2BACNqM,UAAU,UACVC,OAHF,SAGSyB,GACH,OAAmB,IAAZA,EAAgB,eAAO,iBAEpC,CACE/N,MAAM,iCACNqM,UAAU,mBACZ,CACErM,MAAM,iCACNqM,UAAU,cACVC,OAHF,SAGS0B,GACH,OAAOA,EAAIxQ,KAAI,SAACC,GACZ,OAAOA,EAAKwQ,aACbnC,KAAK,OAEd,CACE9L,MAAM,uCACNqM,UAAU,aACZ,CACErM,MAAM,2BACNqM,UAAU,cACVC,OAAOzN,EAAM7C,aACf,CACEgE,MAAM,qBACNqM,UAAU,kBAGlB,OACI,6BACI,2BACI,kBAAC,GAAD,OAEJ,uBAAM3I,MAAO,CAACqE,UAAU,SACpB,uBAAQ1F,KAAK,UAAUI,QAAS9G,KAAKiS,gBAArC,6BAEJ,yBAAK5M,UAAU,gBACX,wBACIkN,UAAQ,EACR9B,QAASA,EACTL,WAAYpQ,KAAKwE,MAAM9C,KACvBX,WAAYf,KAAKwE,MAAMzD,cAG/B,uBACIsD,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAMwN,eACpBrK,SAAU,WACN,EAAKnF,SAAS,CACVwP,gBAAe,KAGvBxK,KAAMxH,KAAK0L,cAEX,kBAAC,GAAD,CAAc8G,oBAAqB,SAACC,GAAQ,EAAKN,SAAWM,W,GApI9CtS,aA2I5BuS,G,iLACQ,IACE1G,EAAsBhM,KAAKC,MAAM2L,KAAjCI,kBACAe,EAFH,KAEGA,OACR,OACI,wBAAMd,OAAO,UACT,uBAAMpG,KAAN,CAAWgJ,MAAM,gBAET7C,EAAkB,UAAlBA,CACI,wBACIE,YAAY,eACZnE,MAAO,CAACmD,MAAM,KAEd,kBAAC6B,EAAD,CAAQ/K,MAAM,IAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,sBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,sBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,yBAKhB,uBAAM6D,KAAN,CAAWgJ,MAAM,4BAET7C,EAAkB,OAAlBA,CACI,wBAAQE,YAAY,eAAKnE,MAAO,CAACmD,MAAM,MACnC,kBAAC6B,EAAD,CAAQ/K,MAAM,IAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,8CACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,qCAKhB,uBAAM6D,KAAN,CAAWgJ,MAAM,4BAET7C,EAAkB,UAAlBA,CACI,wBAAQE,YAAY,eAAKnE,MAAO,CAACmD,MAAM,KACnC,kBAAC6B,EAAD,CAAQ/K,MAAM,IAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,mBAKhB,uBAAM6D,KAAN,CAAWgJ,MAAM,8CAET7C,EAAkB,cAAlBA,CACI,wBAAQE,YAAY,eAAKnE,MAAO,CAACmD,MAAM,KACnC,kBAAC6B,EAAD,CAAQ/K,MAAM,IAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,sBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,yBAKhB,uBAAM6D,KAAN,KACI,uBAAQa,KAAK,UAAUqB,MAAO,CAAC4K,OAAO,WAAtC,gBACA,iD,GAxDKxS,aA+DzBuS,GAAa,KAAK7F,OAAO,GAAZ,CAAgB6F,I,IAEvBE,G,iLAEE,IAAMtE,EAAiB,CACnBC,SAAS,CACLjJ,KAAK,GAEToJ,WAAW,CACPpJ,KAAK,IAGL0G,EAAsBhM,KAAKC,MAAM2L,KAAjCI,kBACAe,EAVH,KAUGA,OACR,OACI,wBAAMd,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,4BAAYP,GAErBtC,EAAkB,UAAlBA,CACI,wBACIE,YAAY,eACZnE,MAAO,CAACmD,MAAM,KAEd,kBAAC6B,EAAD,CAAQ/K,MAAM,IAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,sBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,yBAKhB,uBAAM6D,KAAN,eAAWgJ,MAAM,4BAAYP,GAErBtC,EAAkB,UAAlBA,CACI,wBAAQE,YAAY,eAAKnE,MAAO,CAACmD,MAAM,KACnC,kBAAC6B,EAAD,CAAQ/K,MAAM,KAAd,gBACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,mBAKhB,uBAAM6D,KAAN,eAAWgJ,MAAM,4BAAYP,GAErBtC,EAAkB,OAAlBA,CACI,wBAAQjE,MAAO,CAACmD,MAAM,MAClB,kBAAC6B,EAAD,CAAQ/K,MAAM,KAAd,8CACA,kBAAC+K,EAAD,CAAQ/K,MAAM,KAAd,0C,GA3CL7B,aAoD3ByS,GAAe,KAAK/F,OAAO,GAAZ,CAAgB+F,I,6CChQVC,G,2MACjBrO,MAAQ,CACJsO,cAAa,EACbC,YAAY,I,EAEhBC,mBAAqB,WACjB,EAAKxQ,SAAS,CACVuQ,YAAY,M,EAGpBE,cAAgB,WACZ,EAAKzQ,SAAS,CACVsQ,cAAa,K,EAGrBI,eAAiB,SAACC,GACd,EAAK3Q,SAAS,CACV2Q,kB,EAGRC,oBAAsB,SAACL,GACnB,EAAKvQ,SAAS,CACVuQ,iB,wEAGE,IAAD,OACEA,EAAe/S,KAAKwE,MAApBuO,YACP,OACI,6BACI,2BACI,uBAAQrM,KAAK,UAAUI,QAAS9G,KAAKgT,oBAArC,4BACA,uBAAQjL,MAAO,CAACsL,WAAW,IAAK3M,KAAK,UAAUI,QAAS9G,KAAKiT,eAA7D,iCAEJ,uBAAM5O,MAAM,wCACR,kBAAC,UAAD,CACI0O,YAAaA,EACbO,qBAAsBtT,KAAKkT,eAC3BE,oBAAqBpT,KAAKoT,uBAGlC,uBACI/O,MAAM,qBACNuD,QAAS5H,KAAKwE,MAAMsO,aACpBnL,SAAU,WACN,EAAKnF,SAAS,CACVsQ,cAAa,KAGrB3H,OAAQ,MAEPoI,KAAQvT,KAAKwE,MAAM2O,oB,GAlDNhT,aCD5BuS,G,2MAEFc,mBAAqB,WACjB,IAAIC,EAAc,EAAKxT,MAAM2L,KAAK4B,iBAClC,EAAKvN,MAAMyT,aAAaD,I,EAG5BE,MAAQ,WACJ,EAAK1T,MAAM2L,KAAKgI,e,EAGpBC,aAAe,WAAK,IACR7H,EAAsB,EAAK/L,MAAM2L,KAAjCI,kBACF8H,EAAW,EAAK7T,MAAM6T,SACtBC,EAAe,GAgGrB,OA/FGD,GAAYA,EAAS3J,OAAO,GAC3B2J,EAAS/J,SAAQ,SAACjI,EAAKmI,GACnB,IAAI4E,EAAQ/M,EAAK+M,MACbmF,EAAQlS,EAAKkS,MACbtH,EAAe5K,EAAK4K,cAAgB,GACpCR,EAAcpK,EAAKoK,YACnBhB,EAAQpJ,EAAKoJ,MACjB,GAAkB,iBAAdpJ,EAAK4E,KAAe,CACpB,IAAMuN,EAAO,uBAAMpO,KAAN,CAAWgJ,MAAM,eAAK3M,IAAK8R,GAEhChI,EAAkB,OAAO,CACrBU,aAAa,KADjBV,CAGI,wBACIjE,MAAO,CAACmD,MAAM,IACdgB,YAAaA,GAEZgI,EAAMvS,cAAc,CAAC,CAAEM,GAAI,IAAKE,KAAM,gBAAQ,CAAEF,GAAI,IAAKE,KAAM,gBAAQ,CAAEF,GAAI,IAAKE,KAAM,gBAAQ,CAAEF,GAAI,IAAKE,KAAM,gBAAQ,CAAEF,GAAI,IAAKE,KAAM,qBAK3J4R,EAAahS,KAAKkS,QAChB,GAAiB,6BAAdnS,EAAK4E,KAAgB,CAC1B,IAAMyN,EAAa,uBAAMtO,KAAN,CAAWgJ,MAAM,2BAAO3M,IAAK8R,GAE5ChI,EAAkB,aAAa,CAC3BU,aAAaA,GADjBV,CAGI,wBAAYgD,UAAU,EAAM9C,YAAaA,EAAa+C,OAAO,0BAIzE8E,EAAahS,KAAKoS,GAClB,IAAMC,EAAW,uBAAMvO,KAAN,CAAWgJ,MAAM,IAAIwF,OAAO,EAAOnS,IAAK8R,GAEjDhI,EAAkB,WAAlBA,CACI,wBAAYgD,UAAU,EAAM9C,YAAaA,EAAa+C,OAAO,0BAIzE8E,EAAahS,KAAKqS,QACZ,GAAiB,UAAdtS,EAAK4E,KAAiB,CAC3B,IAAM4N,EAAQ,uBAAMzO,KAAN,CAAWgJ,MAAOA,EAAO3M,IAAK8R,GAExChI,EAAkB,CAACgI,GAAO,CACtBtH,aAAaA,GADjBV,CAGI,wBAAOtF,KAAK,OAAOqB,MAAO,CAAEmD,MAAOA,GAASgB,YAAaA,MAIrE6H,EAAahS,KAAKuS,QACZ,GAAiB,WAAdxS,EAAK4E,KAAkB,CAC5B,IAAM6N,EAAS,uBAAM1O,KAAN,CAAWgJ,MAAOA,EAAO3M,IAAK8R,GAEzChI,EAAkB,CAACgI,GAAO,CACtBtH,aAAaA,GADjBV,CAGI,wBACIE,YAAaA,EACbnE,MAAO,CAACmD,MAAMA,IAEbgJ,EAAMvS,cAAcG,EAAKJ,SAK1CqS,EAAahS,KAAKwS,QACZ,GAAiB,aAAdzS,EAAK4E,KAAoB,CAC9B,IAAM8N,EAAW,uBAAM3O,KAAN,CAAWgJ,MAAOA,EAAO3M,IAAK8R,GAE3ChI,EAAkB,CAACgI,GAAO,CACtBvH,cAAc,UACdC,aAAaA,GAFjBV,CAII,4BACK6C,KAKjBkF,EAAahS,KAAKyS,QACZ,GAAiB,SAAd1S,EAAK4E,KAAgB,CAC1B,IAAMlG,EAAO,uBAAMqF,KAAN,CAAWgJ,MAAOA,EAAO3M,IAAK8R,GAEvChI,EAAkB,CAACgI,GAAnBhI,CACI,wBAAYgD,UAAU,EAAM9C,YAAaA,EAAa+C,OAAO,0BAIzE8E,EAAahS,KAAKvB,OAInBuT,G,wEAIP,OACI,wBAAM9H,OAAO,UACRjM,KAAK6T,eACN,uBAAMhO,KAAN,KACI,uBAAQa,KAAK,UAAUqB,MAAO,CAAC4K,OAAO,UAAW7L,QAAS9G,KAAKwT,oBAA/D,gBACA,uBAAQ1M,QAAS9G,KAAK2T,OAAtB,sB,GAvHKc,IAAMtU,WA8HhB,QAAK0M,OAAO,GAAZ,CAAgB6F,IChIVgC,G,2MACjB/E,WAAa,SAACC,EAAO3M,GAEjB,GAAoB,aADD,EAAKhD,MAAM2Q,aACC,CAC3B,IAAIvO,EAAkB,EAAKpC,MAAMoC,gBAC7BC,EAAe,EAAKrC,MAAMqC,aAC1BC,EAAc,EAAKtC,MAAMsC,YAC7B,GAAGA,EAAY,CACX,IAAM0H,EAAI1H,EAAYoS,QAAQ/E,EAAO3N,KAC3B,IAAPgI,GACC1H,EAAYR,KAAK6N,EAAO3N,IACxBI,EAAgBN,KAAKkB,GACrBX,EAAaP,KAAK6N,KAElBrN,EAAYqS,OAAO3K,EAAE,GACrB5H,EAAgBuS,OAAO3K,EAAE,GACzB3H,EAAasS,OAAO3K,EAAE,SAG1B1H,EAAc,CAACqN,EAAO3N,IACtBI,EAAkB,CAACY,GACnBX,EAAe,CAACsN,GAEpB,EAAK3P,MAAMmC,mBAAmBC,EAAgBC,EAAaC,OAC1D,CACD,IAAIF,EAAkB,CAACY,GACnBX,EAAesN,EACnB,EAAK3P,MAAMmC,mBAAmBC,EAAgBC,K,EAGtDuS,UAAY,WACR,IAAIC,EAAgB,EAAK7U,MAAM2Q,aAEzBA,EAAe,CACjBlK,KAAK,QACLrE,gBAHkB,EAAKpC,MAAMoC,iBAajC,OAPqB,IAAlByS,GAA6C,OAAlBA,EAC1BA,GAAgB,EACO,aAAlBA,EACLlE,EAAalK,KAAO,WAEpBoO,EAAgB,QAEb,sCACHvC,UAAQ,GACJ,EAAKtS,MAFN,CAGH2Q,aAAckE,EAAgBlE,EAAe,KAC7CG,MAAO,SAACnB,EAAO3M,GACX,MAAO,CACH6D,QAAQ,WACAgO,GAGJ,EAAKnF,WAAWC,EAAO3M,U,wEAOvC,OACI,6BACKjD,KAAK6U,iB,GAhEc1U,aCIf4U,G,2MACjBvQ,MAAQ,CACJwQ,UAAU,GACVC,oBAAmB,G,EAEvBrS,OAAS,CACLvB,KAAK,G,EAETyS,SAAW,CACP,CACIpN,KAAK,SACLmI,MAAM,eACNmF,MAAM,OACN9H,YAAY,eACZQ,aAAa,IACbxB,MAAM,GACNxJ,KAAK,CAAC,CAACO,GAAG,IAAIE,KAAK,gBAAM,CAACF,GAAG,IAAIE,KAAK,gBAAM,CAACF,GAAG,IAAIE,KAAK,gBAAM,CAACF,GAAG,IAAIE,KAAK,kBAEhF,CACIuE,KAAK,2BACLmI,MAAM,4BAEV,CACInI,KAAK,SACLmI,MAAM,2BACNmF,MAAM,eACN9H,YAAY,eACZQ,aAAa,IACbxB,MAAM,IACNxJ,KAAK,CAAC,CAACO,GAAG,IAAIE,KAAK,gBAAM,CAACF,GAAG,IAAIE,KAAK,sBAAO,CAACF,GAAG,IAAIE,KAAK,+B,EAOlE+S,aAAe,SAACtS,GACZ,EAAKA,OAASA,EACd,EAAKO,e,EAGTA,YAAc,WAEVW,EAAMX,YAAN,gBAAuB,cAAc,EAAKP,QAAO,I,EAGrD2E,cAAgB,WACZ,IAAIzF,EAAO,EAAK0C,MAAMlC,aAClBR,EAOJgC,EAAMhB,KAAK,CACPH,IAAI,oBACJ3B,KAAK,CACD4B,OAAO,CACHuS,QAAQrT,EAAKG,OAGtBc,MAAK,SAACmB,GACW,IAAbA,EAAIC,MACH,EAAK3B,SAAS,CACVwS,UAAU9Q,EAAI9C,OACd6T,oBAAmB,OAjB3B,IAAM7Q,KAAK,CACPC,MAAM,2BACNC,QAAQ,wE,EAqBpB8Q,mBAAqB,WACjB,IAAItT,EAAO,EAAK0C,MAAMlC,aACtBwB,EAAMhB,KAAK,CACPH,IAAI,sBACJ3B,KAAK,CACD4B,OAAO,CACHuS,QAAQrT,EAAKG,OAGtBc,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACH,KAAQ4H,QAAQ,wCAChB,EAAKvJ,SAAS,CACVyS,oBAAmB,IAEvB,EAAK9R,mB,EAIjBkS,gBAAkB,WACd,IAAIvT,EAAO,EAAK0C,MAAMlC,aAClBR,EAOJwT,OAAO3M,KAAP,iCAAsC7G,EAAKG,IAAK,UAN5C,IAAMmC,KAAK,CACPC,MAAM,2BACNC,QAAQ,sD,mFA/DhBtE,KAAKmD,gB,+BAqEC,IAAD,OACCmL,EAAiB,CACnBC,SAAS,CACLjJ,KAAK,GAEToJ,WAAW,CACPpJ,KAAK,KAuDb,OACI,6BACI,2BACI,kBAACiQ,GAAD,CAAUzB,SAAU9T,KAAK8T,SAAUJ,aAAc1T,KAAKkV,gBAE1D,uBAAMnN,MAAO,CAACqE,UAAY,KACtB,uBAAQ1F,KAAK,UAAUI,QAAS9G,KAAKqV,iBAArC,4BACA,uBAAQ3O,KAAK,UAAUqB,MAAO,CAACsL,WAAW,IAAKvM,QAAS9G,KAAKuH,eAA7D,6BAEJ,yBAAKlC,UAAU,gBACX,kBAAC,GAAD,CACIjD,mBAAoBc,EAAMd,mBAAmBoT,KAAKxV,MAClDyQ,QAhEA,CACZ,CACIpM,MAAM,2BACNqM,UAAU,YAEd,CACIrM,MAAM,2BACNqM,UAAU,WAEd,CACIrM,MAAM,qBACNqM,UAAU,aAEd,CACIrM,MAAM,qBACNqM,UAAU,UAEd,CACIrM,MAAM,eACNqM,UAAU,WACVC,OAHJ,SAGW8E,GACH,OAAOA,EAAS,IAAO,OAG/B,CACIpR,MAAM,2BACNqM,UAAU,cAEd,CACIrM,MAAM,eACNqM,UAAU,SACVC,OAHJ,SAGWhN,GACH,OAAkB,IAAXA,EAAe,qBAAQ,6BAGtC,CACIU,MAAM,2BACNqM,UAAU,cAEd,CACIrM,MAAM,2BACNqM,UAAU,YAEd,CACIrM,MAAM,2BACNqM,UAAU,aAEd,CACIrM,MAAM,2BACNqM,UAAU,aAgBFN,WAAYpQ,KAAKwE,MAAM9C,KACvBW,gBAAiBrC,KAAKwE,MAAMnC,gBAC5BE,YAAevC,KAAKwE,MAAMjC,YAC1BD,aAAgBtC,KAAKwE,MAAMlC,aAC3BvB,WAAYf,KAAKwE,MAAMzD,cAI/B,uBACIsD,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAMyQ,mBACpBtN,SAAU,WACN,EAAKnF,SAAS,CACVyS,oBAAmB,KAG3BzN,KAAMxH,KAAKoV,mBACXlK,MAAO,KAEP,wBAAMe,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtO,KAAKwE,MAAMwQ,UAAUU,SAE1B,uBAAM7P,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtO,KAAKwE,MAAMwQ,UAAUW,QAAU,KAEpC,uBAAM9P,KAAN,eAAWgJ,MAAM,wCAAaP,GACzBtO,KAAKwE,MAAMwQ,UAAUY,YAE1B,uBAAM/P,KAAN,eAAWgJ,MAAM,4BAAWP,GACvBtO,KAAKwE,MAAMwQ,UAAUa,iB,GA9Mf1V,aCFd2V,G,iLAEb,OACI,6BACI,uBAAKzQ,UAAU,eACX,kBAAC,EAAD,CAAQD,SAAS,YAErB,uBAAKC,UAAU,WACVrF,KAAKC,MAAMC,e,GARIC,aCAf4V,I,mNACjBvR,MAAQ,G,EAQRwR,cAAgB,SAACb,GACbrR,EAAMhB,KAAK,CACPH,IAAI,gBACJ3B,KAAK,CACD4B,OAAO,CACHuS,QAAQA,MAGjBpS,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACH,EAAK3B,SAAS,CACVwS,UAAU9Q,EAAI9C,SAElB,EAAK6U,UAAU/R,EAAI9C,a,EAI/B6U,UAAY,SAAC7U,GAET,EAAKS,IAAM,IAAIyT,OAAOY,KAAKC,IAAI,kBAC/B,EAAKtU,IAAIuU,cAAc,eAAK,IAC5B,EAAKC,gBAEL,EAAKC,cAAclV,EAAOmV,eAE1B,EAAKC,gBAAgBpV,EAAOqV,O,EAIhCJ,cAAgB,WACZ,IAAIxU,EAAM,EAAKA,IACfA,EAAI6U,WAAW,IAAIpB,OAAOY,KAAKS,aAAa,CAACC,OAAOtB,OAAOuB,yBAC3DhV,EAAI6U,WAAW,IAAIpB,OAAOY,KAAKY,kBAAkB,CAACF,OAAOtB,OAAOuB,0B,EAIpEP,cAAgB,SAACS,GAEb,IAAIC,EAAa,GACbC,EAAW,GACf,GAAGF,EAAa5M,OAAO,EAAE,CACrB,IAAI+M,EAAQH,EAAa,GACrBI,EAAOJ,EAAaA,EAAa5M,OAAO,GAG5C6M,EAAa,IAAI1B,OAAOY,KAAKkB,MAAMF,EAAMG,IAAIH,EAAMI,KACnD,IAAIC,EAAY,IAAIjC,OAAOY,KAAKsB,KAAK,0BAA0B,IAAIlC,OAAOY,KAAKuB,KAAK,GAAG,IAAI,CACvFC,UAAU,IAAIpC,OAAOY,KAAKuB,KAAK,GAAG,IAClCb,OAAO,IAAItB,OAAOY,KAAKuB,KAAK,GAAG,MAE/BE,EAAc,IAAIrC,OAAOY,KAAK0B,OAAOZ,EAAW,CAACpQ,KAAK2Q,IAC1D,EAAK1V,IAAIgW,WAAWF,GAGpBV,EAAW,IAAI3B,OAAOY,KAAKkB,MAAMD,EAAKE,IAAIF,EAAKG,KAC/C,IAAIQ,EAAU,IAAIxC,OAAOY,KAAKsB,KAAK,wBAAwB,IAAIlC,OAAOY,KAAKuB,KAAK,GAAG,IAAI,CACnFC,UAAU,IAAIpC,OAAOY,KAAKuB,KAAK,GAAG,IAClCb,OAAO,IAAItB,OAAOY,KAAKuB,KAAK,GAAG,MAE/BM,EAAY,IAAIzC,OAAOY,KAAK0B,OAAOX,EAAS,CAACrQ,KAAKkR,IACtD,EAAKjW,IAAIgW,WAAWE,GAIpB,IADA,IAAIC,EAAa,GACT/N,EAAI,EAAGA,EAAI8M,EAAa5M,OAAQF,IAAI,CACxC,IAAIgO,EAAQlB,EAAa9M,GACzB+N,EAAWjW,KAAK,IAAIuT,OAAOY,KAAKkB,MAAMa,EAAMZ,IAAIY,EAAMX,MAE1D,IAAIY,EAAW,IAAI5C,OAAOY,KAAKiC,SAASH,EAAW,CAC/CI,YAAY,UACZC,aAAa,EACbC,cAAc,IAElB,EAAKzW,IAAIgW,WAAWK,GACpB,EAAKrW,IAAIuU,cAAca,EAAS,M,EAKxCT,gBAAkB,SAACO,GAGf,IADA,IAAIiB,EAAa,GACT/N,EAAI,EAAGA,EAAI8M,EAAa5M,OAAQF,IAAI,CACxC,IAAIgO,EAAQlB,EAAa9M,GACzB+N,EAAWjW,KAAK,IAAIuT,OAAOY,KAAKkB,MAAMa,EAAMZ,IAAIY,EAAMX,MAG1D,IAAIiB,EAAU,IAAIjD,OAAOY,KAAKsC,QAAQR,EAAW,CAC7CI,YAAY,UACZC,aAAa,EACbC,cAAc,EACdG,UAAU,UACVC,YAAY,KAEhB,EAAK7W,IAAIgW,WAAWU,I,mFAnGpB,IAAIpD,EAAUnV,KAAKC,MAAM0Y,MAAM/V,OAAOuS,QACnCA,GACCnV,KAAKgW,cAAcb,K,+BAoGvB,IAAM/Q,EAAOpE,KAAKwE,MAAMwQ,WAAa,GACrC,OACI,6BACI,2BACI,yBAAK/S,GAAG,iBAAiBoD,UAAU,cACnC,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cAAf,4BACA,wBAAIA,UAAU,eACV,4BACI,yBAAKA,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAqC,IAAdjB,EAAK0K,KAAa,qBAAQ,uBAEpE,4BACI,yBAAKzJ,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAKwU,WAE/C,4BACI,yBAAKvT,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAKsR,UAE/C,4BACI,yBAAKrQ,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAKkO,YAE/C,4BACI,yBAAKjN,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAKyU,WAIvD,yBAAKxT,UAAU,gBACX,yBAAKA,UAAU,cAAf,4BACA,wBAAIA,UAAU,eACV,4BACI,yBAAKA,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAK0U,iBAE/C,4BACI,yBAAKzT,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAK2U,eAE/C,4BACI,yBAAK1T,UAAU,oBAAf,4BACA,yBAAKA,UAAU,uBAAuBjB,EAAKqR,SAAS,IAApD,yB,GArJItV,cCG5B6M,G,KAAAA,SACAD,G,KAAAA,OAEaiM,G,2MAEjBxU,MAAQ,CACJyU,WAAU,G,EAGdrW,OAAS,CACLvB,KAAK,G,EAGTyS,SAAW,CACP,CACIpN,KAAK,QACLmI,MAAM,qBACNmF,MAAM,YACN9H,YAAY,uCACZhB,MAAM,KAEV,CACIxE,KAAK,QACLmI,MAAM,qBACNmF,MAAM,cACN9H,YAAY,uCACZhB,MAAM,KAEV,CACIxE,KAAK,OACLmI,MAAM,6CACNmF,MAAM,YACN9H,YAAY,mC,EAQpBgJ,aAAe,SAACtS,GACZ,EAAKA,OAASA,EACd,EAAKO,e,EAGTA,YAAc,WACVW,EAAMX,YAAN,gBAAuB,aAAa,EAAKP,QAAO,I,EAIpDsW,cAAgB,SAACxS,GACb,IAAI5E,EAAO,EAAK0C,MAAMlC,aACtB,GAAY,WAAToE,EACC,EAAKlE,SAAS,CACVkE,OACAuS,WAAU,EACV5U,MAAM,kCAER,GAAY,SAATqC,EAAgB,CACrB,IAAI5E,EAKA,YAJA,IAAMsC,KAAK,CACPC,MAAM,eACNC,QAAQ,+CAIhB,EAAK9B,SAAS,CACVkE,OACAuS,WAAU,EACV5U,MAAM,2BACNkJ,SAASzL,SAEX,GAAY,WAAT4E,EACL,EAAKlE,SAAS,CACVkE,OACAuS,WAAU,EACV5U,MAAM,2BACNkJ,SAASzL,QAEZ,CACD,IAAIA,EAKA,YAJA,IAAMsC,KAAK,CACPC,MAAM,eACNC,QAAQ,+CAIhB,IAAI5B,EAAK,gBACT,IAAMwN,QAAQ,CACV7L,MAAM,2BACNC,QAAQ,iFACRkD,KAHU,WAIN1D,EAAMhB,KAAK,CACPH,IAAI,eACJ3B,KAAK,CACD4B,OAAO,CACHX,GAAGH,EAAKG,OAGjBc,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACHzB,EAAMF,SAAS,CACXyW,WAAU,IAEdvW,EAAMS,uB,EAS9BuI,aAAe,WACA,EAAKlH,MAAMkC,KAAtB,IACI1F,EAAO,EAAKmY,SAASlZ,MAAM2L,KAAK4B,iBACpC1J,EAAMhB,KAAK,CACPH,IAAoB,YACpB3B,KAAK,CACD4B,OAAO5B,KAEZ+B,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACH,EAAKgV,SAASlZ,MAAM2L,KAAKgI,cACzB,EAAKpR,SAAS,CACVyW,WAAU,IAEd,EAAK9V,mB,mFA1FbnD,KAAKmD,gB,+BA8FC,IAAD,OA6DDgI,EAAS,GAMb,MALuB,WAApBnL,KAAKwE,MAAMkC,OACVyE,EAAS,CACLA,OAAO,OAIX,6BACI,2BACI,kBAACoK,GAAD,CAAUzB,SAAU9T,KAAK8T,SAAUJ,aAAc1T,KAAKkV,gBAE1D,uBAAMnN,MAAO,CAACqE,UAAY,KACtB,uBAAQ1F,KAAK,UAAUE,KAAK,OAAOE,QAAS,kBAAI,EAAKoS,cAAc,YAAnE,4BACA,uBAAQxS,KAAK,UAAUE,KAAK,OAAOmB,MAAO,CAACsL,WAAW,IAAKvM,QAAS,kBAAI,EAAKoS,cAAc,UAA3F,4BACA,uBAAQxS,KAAK,UAAUqB,MAAO,CAACsL,WAAW,IAAKvM,QAAS,kBAAI,EAAKoS,cAAc,YAA/E,4BACA,uBAAQxS,KAAK,UAAUE,KAAK,SAASmB,MAAO,CAACsL,WAAW,IAAKvM,QAAS,kBAAI,EAAKoS,cAAc,YAA7F,6BAEJ,yBAAK7T,UAAU,gBACX,kBAAC,GAAD,CACIjD,mBAAoBc,EAAMd,mBAAmBoT,KAAKxV,MAClDyQ,QAhFA,CACZ,CACIpM,MAAM,KACNqM,UAAU,MAEd,CACIrM,MAAM,qBACNqM,UAAU,YAEd,CACIrM,MAAM,eACNqM,UAAU,MACVC,OAHJ,SAGWN,GACH,OAAe,IAARA,EAAY,SAAM,WAGjC,CACIhM,MAAM,eACNqM,UAAU,QACVC,OAHJ,SAGWnM,GAQH,MAPa,CACT,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBAEIA,KAGtB,CACIH,MAAM,eACNqM,UAAU,WACVC,OAHJ,SAGWb,GAWH,MAVa,CACT,EAAM,eACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,qBACN,EAAM,eACN,EAAM,eACN,EAAM,gBAEIA,KAGtB,CACIzL,MAAM,eACNqM,UAAU,YAEd,CACIrM,MAAM,2BACNqM,UAAU,WAEd,CACIrM,MAAM,2BACNqM,UAAU,SAwBFN,WAAYpQ,KAAKwE,MAAM9C,KACvBW,gBAAiBrC,KAAKwE,MAAMnC,gBAC5BC,aAAgBtC,KAAKwE,MAAMlC,aAC3BvB,WAAYf,KAAKwE,MAAMzD,cAG/B,qCACIsD,MAAOrE,KAAKwE,MAAMH,MAClBuD,QAAS5H,KAAKwE,MAAMyU,UACpBtR,SAAU,WACN,EAAKwR,SAASlZ,MAAM2L,KAAKgI,cACzB,EAAKpR,SAAS,CACVyW,WAAU,KAGlBzR,KAAMxH,KAAK0L,aACXR,MAAO,KACHC,GAEJ,kBAAC,GAAD,CAAUzE,KAAM1G,KAAKwE,MAAMkC,KAAM6G,SAAUvN,KAAKwE,MAAM+I,SAAUiF,oBAAqB,SAACC,GAAD,OAAQ,EAAK0G,SAAW1G,W,GArO/FtS,aA2O5BiZ,G,2MACFC,SAAW,SAAC7U,GACR,MAAO,CACH,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,2BACN,EAAM,sBACRA,I,wEAGF,IAAIkC,EAAO1G,KAAKC,MAAMyG,KAClB6G,EAAWvN,KAAKC,MAAMsN,UAAY,GAC/BvB,EAAqBhM,KAAKC,MAAM2L,KAAhCI,kBACDsC,EAAiB,CACnBC,SAAS,CACLjJ,KAAK,GAEToJ,WAAW,CACPpJ,KAAK,KAGb,OACI,wBAAM2G,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,sBAAUP,GAEV,WAAT5H,EAAoB6G,EAAS+L,SAC7BtN,EAAkB,UAAU,CACxBU,aAAaa,EAAS+L,UAD1BtN,CAGI,wBAAOtF,KAAK,OAAOwF,YAAY,2CAI3C,uBAAMrG,KAAN,eAAWgJ,MAAM,gBAASP,GAET,WAAT5H,EAAqC,IAAjB6G,EAAS8C,IAAW,SAAI,SAC5CrE,EAAkB,MAAM,CACpBU,aAAaa,EAAS8C,KAD1BrE,CAGI,sBAAOjF,MAAP,KACI,uBAAO/E,MAAO,GAAd,UACA,uBAAOA,MAAO,GAAd,aAKhB,uBAAM6D,KAAN,eAAWgJ,MAAM,gBAASP,GAET,WAAT5H,EAAoB1G,KAAKqZ,SAAS9L,EAAS/I,OAC3CwH,EAAkB,QAAQ,CACtBU,aAAaa,EAAS/I,OAD1BwH,CAGI,4BACI,kBAAC,GAAD,CAAQhK,MAAO,GAAf,4BACA,kBAAC,GAAD,CAAQA,MAAO,GAAf,4BACA,kBAAC,GAAD,CAAQA,MAAO,GAAf,4BACA,kBAAC,GAAD,CAAQA,MAAO,GAAf,4BACA,kBAAC,GAAD,CAAQA,MAAO,GAAf,yBAKhB,uBAAM6D,KAAN,eAAWgJ,MAAM,gBAASP,GAET,WAAT5H,EAAoB6G,EAAS+C,SAC7BtE,EAAkB,WAAW,CACzBU,aAAaqC,KAAOxB,EAAS+C,WADjCtE,CAGI,+BAIZ,uBAAMnG,KAAN,eAAWgJ,MAAM,4BAAWP,GAEX,WAAT5H,EAAoB6G,EAASgD,QAC7BvE,EAAkB,UAAU,CACxBU,aAAaa,EAASgD,SAD1BvE,CAGI,kBAAC,GAAD,CAAUgE,KAAM,EAAG9D,YAAY,sD,GA/EpC/L,aAuFvBiZ,GAAW,KAAKvM,OAAO,GAAZ,CAAgBuM,I,ICxUNG,G,2MACjB/U,MAAM,G,EACN3C,IAAM,G,EACNiS,SAAW,CACP,CACIpN,KAAK,gBACP,CACEA,KAAK,4BACP,CACEA,KAAK,SACLmI,MAAM,2BACNmF,MAAM,eACN9H,YAAY,eACZsN,YAAY,IACZ9X,KAAK,CAAC,CAACO,GAAG,IAAIE,KAAK,gBAAM,CAACF,GAAG,IAAIE,KAAK,sBAAO,CAACF,GAAG,IAAIE,KAAK,6BAC1D+I,MAAM,M,EAId/H,YAAc,WACVW,EAAMhB,KAAK,CACPH,IAAI,iBACJ3B,KAAK,CACD4B,OAAO,EAAKA,UAEjBG,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACH,EAAK3B,SAAS,CACViX,YAAYvV,EAAI9C,OAAOqY,cAE3B,EAAKxD,UAAU/R,Q,EAO3BwV,mBAAqB,SAACC,GAClB,EAAK/W,OAAS+W,EACd,EAAKxW,e,EAGT8S,UAAY,SAAC/R,GACT,IAAIxC,EAAOwC,EAAI9C,OAAOwY,WACtB,EAAK/X,IAAM,IAAIyT,OAAOY,KAAKC,IAAI,aAC/B,IAAI0D,EAAOnY,EAAK,GAAGoY,MAAM,KACrB9C,EAAa,IAAI1B,OAAOY,KAAKkB,MAAMyC,EAAK,GAAGA,EAAK,IAChDE,EAAOrY,EAAKA,EAAKyI,OAAO,GAAG2P,MAAM,KACjC7C,EAAW,IAAI3B,OAAOY,KAAKkB,MAAM2C,EAAK,GAAGA,EAAK,IAClD,EAAKlY,IAAIuU,cAAca,EAAS,IAEhC,IAAI+C,EAAiB,IAAI1E,OAAOY,KAAKsB,KAAK,0BAA0B,IAAIlC,OAAOY,KAAKuB,KAAK,GAAG,IAAI,CAC5FwC,cAAc,IAAI3E,OAAOY,KAAKuB,KAAK,GAAG,IACtCb,OAAO,IAAItB,OAAOY,KAAKuB,KAAK,GAAG,MAE/ByC,EAAkB,IAAI5E,OAAOY,KAAK0B,OAAOZ,EAAW,CAACpQ,KAAKoT,IAC9D,EAAKnY,IAAIgW,WAAWqC,GACpB,IAAIC,EAAe,IAAI7E,OAAOY,KAAKsB,KAAK,wBAAwB,IAAIlC,OAAOY,KAAKuB,KAAK,GAAG,IAAI,CACxFwC,cAAc,IAAI3E,OAAOY,KAAKuB,KAAK,GAAG,IACtCb,OAAO,IAAItB,OAAOY,KAAKuB,KAAK,GAAG,MAE/B2C,EAAgB,IAAI9E,OAAOY,KAAK0B,OAAOX,EAAS,CAACrQ,KAAKuT,IAC1D,EAAKtY,IAAIgW,WAAWuC,GAGpB,IAAIC,EAAY,GAChB3Y,EAAKqI,SAAQ,SAACjI,GACV,IAAIwY,EAAIxY,EAAKgY,MAAM,KACnBO,EAAUtY,KAAK,IAAIuT,OAAOY,KAAKkB,MAAMkD,EAAE,GAAGA,EAAE,QAGhD,IAAIC,EAAW,IAAIjF,OAAOY,KAAKiC,SAASkC,EAAU,CAC9CjC,YAAY,UACZoC,aAAa,EACblC,cAAc,IAElB,EAAKzW,IAAIgW,WAAW0C,GAGpB,IAAIE,EAAmB,GACLvW,EAAI9C,OAAOsZ,aACjB3Q,SAAQ,SAACjI,GACjB2Y,EAAiB1Y,KAAK,IAAIuT,OAAOY,KAAKkB,MAAMtV,EAAKuV,IAAIvV,EAAKwV,SAE9D,IAAIqD,EAAkB,IAAIrF,OAAOY,KAAKiC,SAASsC,EAAiB,CAC5DrC,YAAY,UACZoC,aAAa,EACblC,cAAc,IAElB,EAAKzW,IAAIgW,WAAW8C,GAGpB,IAAIC,EAAW1W,EAAI9C,OAAOyZ,UACtBC,EAAW,IAAIxF,OAAOY,KAAKsB,KAAK,mBAAmB,IAAIlC,OAAOY,KAAKuB,KAAK,GAAG,IAAI,CAC/EC,UAAU,IAAIpC,OAAOY,KAAKuB,KAAK,GAAG,IAClCb,OAAO,IAAItB,OAAOY,KAAKuB,KAAK,GAAG,MAEnCmD,EAAS7Q,SAAQ,SAACjI,GACd,IAAIwY,EAAIxY,EAAKgY,MAAM,KACf7B,EAAQ,IAAI3C,OAAOY,KAAKkB,MAAMkD,EAAE,GAAGA,EAAE,IACrCS,EAAa,IAAIzF,OAAOY,KAAK0B,OAAOK,EAAM,CAACrR,KAAKkU,IACpD,EAAKjZ,IAAIgW,WAAWkD,O,oFAlExB/a,KAAKmD,gB,+BAsEL,OACI,6BACI,2BACI,kBAACoS,GAAD,CAAUzB,SAAU9T,KAAK8T,SAAUJ,aAAc1T,KAAK0Z,sBAE1D,uBAAM3R,MAAO,CAACqE,UAAU,KACpB,sCAAOpM,KAAKwE,MAAMiV,YAAlB,gBACA,yBAAKxX,GAAG,YAAY8F,MAAO,CAACwD,OAAO,a,GAhHlBpL,aCLtB,IACX,MAAS,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,gBAAmB,UACnB,UAAa,GACb,MAAS,CACL,UAAa,CACT,MAAS,WAEb,aAAgB,CACZ,MAAS,YAGjB,KAAQ,CACJ,UAAa,CACT,OAAU,CACN,YAAe,IAGvB,UAAa,CACT,OAAU,CACN,MAAS,IAGjB,WAAc,KACd,OAAU,cACV,QAAU,GAEd,IAAO,CACH,UAAa,CACT,OAAU,CACN,YAAe,EACf,YAAe,QAEnB,SAAY,CACR,YAAe,EACf,YAAe,UAI3B,aAAgB,CACZ,SAAY,CACR,MAAQ,EACR,UAAa,CACT,MAAS,YAGjB,SAAY,CACR,MAAQ,EACR,UAAa,CACT,MAAS,YAGjB,UAAa,CACT,MAAQ,EACR,UAAa,CACT,MAAS,UACT,SAAY,OAGpB,UAAa,CACT,MAAQ,EACR,UAAa,CACT,MAAS,CACL,aAIZ,UAAa,CACT,MAAQ,EACR,UAAa,CACT,MAAS,CACL,wBACA,4BAKhB,UAAa,CACT,SAAY,CACR,MAAQ,EACR,UAAa,CACT,MAAS,YAGjB,SAAY,CACR,MAAQ,EACR,UAAa,CACT,MAAS,YAGjB,UAAa,CACT,MAAQ,EACR,UAAa,CACT,MAAS,UACT,SAAY,OAGpB,UAAa,CACT,MAAQ,EACR,UAAa,CACT,MAAS,CACL,aAIZ,UAAa,CACT,MAAQ,EACR,UAAa,CACT,MAAS,CACL,wBACA,4BAKhB,QAAW,CACP,UAAa,CACT,OAAU,CACN,YAAe,WAEnB,SAAY,CACR,YAAe,aAI3B,OAAU,CACN,UAAa,CACT,MAAS,YAGjB,QAAW,CACP,YAAe,CACX,UAAa,CACT,MAAS,UACT,MAAS,GAEb,WAAc,CACV,MAAS,UACT,MAAS,KAIrB,SAAY,CACR,UAAa,CACT,MAAS,UACT,MAAS,GAEb,UAAa,CACT,OAAU,CACN,MAAS,UACT,YAAe,GAEnB,SAAY,CACR,MAAS,YAGjB,aAAgB,CACZ,OAAU,CACN,MAAS,UACT,YAAe,UACf,YAAe,IAEnB,SAAY,CACR,MAAS,UACT,YAAe,UACf,YAAe,KAGvB,gBAAmB,CACf,MAAS,UACT,YAAe,uBAEnB,MAAS,CACL,OAAU,CACN,UAAa,CACT,MAAS,YAGjB,SAAY,CACR,UAAa,CACT,MAAS,cAKzB,UAAa,CACT,MAAS,CACL,OAAU,CACN,UAAa,CACT,MAAS,YAGjB,SAAY,CACR,UAAa,CACT,MAAS,e,4EClMR6a,G,2MAIjBC,UAAY,WAsBR,MArBa,CACT5W,MAAM,CACFqN,KAAK,wCAETwJ,QAAQ,CACJC,QAAQ,QAEZC,MAAM,CACFpa,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCqa,MAAM,CACF3U,KAAK,SAET4U,OAAO,CACH,CACInZ,KAAK,qBACLuE,KAAK,MACL1F,KAAK,CAAC,IAAK,IAAK,IAAK,KAAK,IAAK,KAAK,S,EAMpDua,WAAa,WAiCT,MAhCa,CACTlX,MAAM,CACFqN,KAAK,wCAET8J,OAAO,CACHxa,KAAK,CAAC,2BAAO,2BAAO,6BAExBka,QAAQ,CACJC,QAAQ,QAEZC,MAAM,CACFpa,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCqa,MAAM,CACF3U,KAAK,SAET4U,OAAO,CACH,CACInZ,KAAK,2BACLuE,KAAK,MACL1F,KAAK,CAAC,IAAI,IAAK,KAAK,IAAK,KAAK,IAAK,OACrC,CACEmB,KAAK,2BACLuE,KAAK,MACL1F,KAAK,CAAC,IAAI,IAAI,KAAK,IAAK,KAAK,IAAK,OACpC,CACEmB,KAAK,2BACLuE,KAAK,MACL1F,KAAK,CAAC,IAAI,IAAI,IAAK,KAAK,IAAK,KAAK,S,oFAvD9Cya,KAAQC,cAAc,QAAQC,M,+BA8D9B,OACI,6BACI,uBAAMtX,MAAM,wCACR,kBAAC,KAAD,CAAcuX,OAAQ5b,KAAKib,YAAahV,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,QAEzE,uBAAOlH,MAAM,uCAAS0D,MAAO,CAACqE,UAAU,KACpC,kBAAC,KAAD,CAAcwP,OAAQ5b,KAAKub,aAActV,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,a,GAtEzDpL,aCAZ0b,I,kNAIjBZ,UAAY,WAsDR,MArDa,CACT5W,MAAM,CACFqN,KAAK,uCACLI,EAAE,UAEN0J,OAAO,CACHM,OAAO,WACPC,MAAM,GACN/T,IAAI,GACJgU,OAAO,GACPhb,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCka,QAAQ,CACJC,QAAQ,OACRc,UAAU,yBAEdX,OAAO,CACH,CACInZ,KAAK,qBACLuE,KAAK,MACL1F,KAAK,CACD,CACIgB,MAAM,IACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,IACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,IACNG,KAAK,qB,EAQ7BoZ,WAAa,WAuDT,MAtDa,CACTlX,MAAM,CACFqN,KAAK,uCACLI,EAAE,UAEN0J,OAAO,CACHM,OAAO,WACPC,MAAM,GACN/T,IAAI,GACJgU,OAAO,GACPhb,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCka,QAAQ,CACJC,QAAQ,OACRc,UAAU,yBAEdX,OAAO,CACH,CACInZ,KAAK,qBACLuE,KAAK,MACLwV,OAAO,CAAC,MAAM,OACdlb,KAAK,CACD,CACIgB,MAAM,IACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,IACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,IACNG,KAAK,qB,EAQ7Bga,WAAa,WA0DT,MAzDa,CACT9X,MAAM,CACFqN,KAAK,uCACLI,EAAE,UAEN0J,OAAO,CACHM,OAAO,WACPC,MAAM,GACN/T,IAAI,GACJgU,OAAO,GACPhb,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCka,QAAQ,CACJC,QAAQ,OACRc,UAAU,yBAEdX,OAAO,CACH,CACInZ,KAAK,qBACLuE,KAAK,MACLwV,OAAO,MACPlb,KAAK,CACD,CACIgB,MAAM,IACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,IACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,KACNG,KAAK,gBAET,CACIH,MAAM,IACNG,KAAK,iBAEXia,MAAK,SAAC9K,EAAEC,GACN,OAAOD,EAAEtP,MAAQuP,EAAEvP,SAEvBqa,SAAU,a,oFAzKtBZ,KAAQC,cAAc,QAAQC,M,+BAgL9B,OACI,6BACI,uBAAMtX,MAAM,kCACR,kBAAC,KAAD,CAAcuX,OAAQ5b,KAAKib,YAAahV,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,QAEzE,uBAAOlH,MAAM,iCAAQ0D,MAAO,CAACqE,UAAU,KACnC,kBAAC,KAAD,CAAcwP,OAAQ5b,KAAKub,aAActV,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,QAE1E,uBAAOlH,MAAM,iCAAQ0D,MAAO,CAACqE,UAAU,KACnC,kBAAC,KAAD,CAAcwP,OAAQ5b,KAAKmc,aAAclW,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,a,GA3LzDpL,cCAZmc,I,kNAIjBrB,UAAY,WAsBR,MArBa,CACT5W,MAAM,CACFqN,KAAK,wCAETwJ,QAAQ,CACJC,QAAQ,QAEZC,MAAM,CACFpa,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCqa,MAAM,CACF3U,KAAK,SAET4U,OAAO,CACH,CACInZ,KAAK,qBACLuE,KAAK,OACL1F,KAAK,CAAC,IAAI,IAAK,IAAI,IAAK,KAAK,IAAK,S,EAMlDua,WAAa,WA8BT,MA7Ba,CACTlX,MAAM,CACFqN,KAAK,wCAETwJ,QAAQ,CACJC,QAAQ,QAEZK,OAAO,CACHxa,KAAK,CAAC,6CAAU,+CAEpBoa,MAAM,CACFpa,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCqa,MAAM,CACF3U,KAAK,SAET4U,OAAO,CACH,CACInZ,KAAK,6CACLuE,KAAK,OACL1F,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,MAEtC,CACImB,KAAK,6CACLuE,KAAK,OACL1F,KAAK,CAAC,IAAI,IAAK,IAAI,IAAK,KAAK,IAAK,S,EAMlDmb,WAAa,WAwBT,MAvBa,CACT9X,MAAM,CACFqN,KAAK,wCAETwJ,QAAQ,CACJC,QAAQ,QAEZC,MAAM,CACFmB,aAAa,EACbvb,KAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,iBAExCqa,MAAM,CACF3U,KAAK,SAET4U,OAAO,CACH,CACInZ,KAAK,qBACLuE,KAAK,OACL1F,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAClCwb,UAAU,O,oFA9EtBf,KAAQC,cAAc,QAAQC,M,+BAqF9B,OACI,6BACI,uBAAMtX,MAAM,wCACR,kBAAC,KAAD,CAAcuX,OAAQ5b,KAAKib,YAAahV,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,QAEzE,uBAAOlH,MAAM,uCAAS0D,MAAO,CAACqE,UAAU,KACpC,kBAAC,KAAD,CAAcwP,OAAQ5b,KAAKub,aAActV,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,QAE1E,uBAAOlH,MAAM,uCAAS0D,MAAO,CAACqE,UAAU,KACpC,kBAAC,KAAD,CAAcwP,OAAQ5b,KAAKmc,aAAclW,MAAM,QAAQ8B,MAAO,CAACwD,OAAO,a,GAhGxDpL,c,wECJ3B4M,G,KAAAA,OACC0P,G,KAAAA,SAEaC,G,2MAEjBlY,MAAQ,G,EAORmY,WAAa,WACT,EAAKna,SAAS,CACVoa,eAAc,K,EAKtBC,iBAAmB,WACf,IAAI7b,EAAO,EAAK8b,SAAS7c,MAAM2L,KAAK4B,iBACpC1J,EAAMhB,KAAK,CACPH,IAAI,cACJ3B,KAAK,CACD4B,OAAO5B,KAEZ+B,MAAK,SAACmB,GACW,IAAbA,EAAIC,OACH,EAAK3B,SAAS,CACVoa,eAAc,IAElB,EAAKE,SAAS7c,MAAM2L,KAAKgI,cACzB9P,EAAMX,YAAN,gBAAuB,aAAa,IAAG,Q,EAMnD4Z,iBAAmB,WACf,IAAIjb,EAAO,EAAK0C,MAAMlC,aAClBR,EAMJ,EAAKU,SAAS,CACVwa,eAAc,EACdC,WAAWnb,EACXob,SAASpb,EAAKqb,QARd,IAAM/Y,KAAK,CACPsN,KAAK,gD,EAWjB0L,qBAAuB,WACnB,IAAIpc,EAAO,EAAKqc,SAASpd,MAAM2L,KAAK4B,iBACpCxM,EAAKsc,QAAU,EAAK9Y,MAAMlC,aAAaL,GACvCjB,EAAKmc,MAAQ,EAAK3Y,MAAM0Y,SACxBpZ,EAAMhB,KAAK,CACPH,IAAI,mBACJ3B,KAAK,CACD4B,OAAO,gBACA5B,MAGZ+B,MAAK,SAACmB,GACFA,IACC,EAAK1B,SAAS,CACVwa,eAAc,IAElBlZ,EAAMX,YAAN,gBAAuB,aAAa,IAAG,Q,EAMnDoa,eAAiB,WACb,IAAIzb,EAAO,EAAK0C,MAAMlC,aAClBR,GAMJ,EAAKU,SAAS,CACVgb,eAAc,EACdP,WAAWnb,IAEf,EAAK2b,gBAAgB3b,EAAKG,KATtB,IAAMmC,KAAK,CACPsN,KAAK,gD,EAYjB+L,gBAAkB,SAACxb,GACf6B,EAAMhB,KAAK,CACPH,IAAI,kBACJ3B,KAAK,CACD4B,OAAO,CACHX,SAGTc,MAAK,SAACmB,GACFA,GACC,EAAKwZ,gBAAgBxZ,EAAI9C,Y,EAMrCsc,gBAAkB,SAACtN,GACf,IAAMuN,EAAW,GACXC,EAAa,GACnB,GAAGxN,GAAcA,EAAWjG,OAAO,EAAE,CACjC,IAAI,IAAIF,EAAI,EAAGA,EAAImG,EAAWjG,OAAQF,IAAI,CACtC,IAAMjJ,EAAO,CACTkB,IAAIkO,EAAWnG,GAAG4T,QAClBxZ,MAAM+L,EAAWnG,GAAGqI,UACpB3O,OAAOyM,EAAWnG,GAAGtG,QAEN,IAAhB3C,EAAK2C,QACJia,EAAW7b,KAAKf,EAAKkB,KAEzByb,EAAS5b,KAAKf,GAElB,EAAKwB,SAAS,CACVmb,WAASC,iB,EAMrBE,iBAAmB,WACf,IAAI9c,EAAO,GACXA,EAAK+c,SAAW,EAAKvZ,MAAMoZ,WAC3B5c,EAAKsc,QAAU,EAAK9Y,MAAMlC,aAAaL,GACvC6B,EAAMhB,KAAK,CACPH,IAAI,uBACJ3B,KAAK,CACD4B,OAAO,gBACA5B,MAGZ+B,MAAK,SAACmB,GACFA,IACC,EAAK1B,SAAS,CACVgb,eAAc,IAElB1Z,EAAMX,YAAN,gBAAuB,aAAa,IAAG,Q,oFAzI/CW,EAAMX,YAAYnD,KAAK,aAAa,IAAG,K,+BA6IjC,IAAD,OACCyQ,EAAU,CACZ,CACIpM,MAAM,iBACNqM,UAAU,MACZ,CACErM,MAAM,2BACNqM,UAAU,aACZ,CACErM,MAAM,2BACNqM,UAAU,cACVC,OAAOzN,EAAM7C,aACf,CACEgE,MAAM,2BACNqM,UAAU,SACVC,OAHF,SAGShN,GACH,OAAkB,IAAXA,EAAe,eAAO,iBAEnC,CACEU,MAAM,2BACNqM,UAAU,iBACVC,OAAOzN,EAAM7C,aACf,CACEgE,MAAM,qBACNqM,UAAU,wBAGlB,OACI,6BACI,2BACI,uBAAQhK,KAAK,UAAUI,QAAS9G,KAAK2c,YAArC,4BACA,uBAAQjW,KAAK,UAAUqB,MAAO,CAACsL,WAAW,IAAKvM,QAAS9G,KAAK+c,kBAA7D,4BACA,uBAAQrW,KAAK,UAAUqB,MAAO,CAACsL,WAAW,IAAKvM,QAAS9G,KAAKud,gBAA7D,6BAEJ,yBAAKlY,UAAU,gBACX,kBAAC,GAAD,CACIjD,mBAAoBc,EAAMd,mBAAmBoT,KAAKxV,MAClDyQ,QAASA,EACTL,WAAYpQ,KAAKwE,MAAM9C,KACvBW,gBAAiBrC,KAAKwE,MAAMnC,mBAGpC,uBACIgC,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAMoY,cACpBpV,KAAMxH,KAAK6c,iBACXlV,SAAU,WACN,EAAKmV,SAAS7c,MAAM2L,KAAKgI,cACzB,EAAKpR,SAAS,CACVoa,eAAc,MAItB,kBAAC,GAAD,CAAUpK,oBAAqB,SAACC,GAAD,OAAQ,EAAKqK,SAAWrK,MAE3D,uBACIpO,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAMwY,cACpB9R,MAAO,IACP1D,KAAMxH,KAAKod,qBACXzV,SAAU,WACN,EAAKnF,SAAS,CACVwa,eAAc,MAItB,kBAAC,GAAD,CACIxK,oBAAqB,SAACC,GAAD,OAAQ,EAAK4K,SAAW5K,GAC7CwK,WAAYjd,KAAKwE,MAAMyY,WACvBC,SAAUld,KAAKwE,MAAM0Y,SACrBc,cAAe,SAACC,GACZ,EAAKzb,SAAS,CACV0a,SAASe,QAKzB,uBACI5Z,MAAM,2BACNuD,QAAS5H,KAAKwE,MAAMgZ,cACpBtS,MAAO,IACP1D,KAAMxH,KAAK8d,iBACXnW,SAAU,WACN,EAAKnF,SAAS,CACVgb,eAAc,MAItB,kBAAC,GAAD,CACIhL,oBAAqB,SAACC,GAAD,OAAQ,EAAKyL,aAAezL,GACjDwK,WAAYjd,KAAKwE,MAAMyY,WACvBW,WAAY5d,KAAKwE,MAAMoZ,WACvBD,SAAU3d,KAAKwE,MAAMmZ,SACrBQ,cAAe,SAACP,GACZ,EAAKpb,SAAS,CACVob,wB,GAjPQzd,aA2PlC2c,G,iLACQ,IACC9Q,EAAqBhM,KAAKC,MAAM2L,KAAhCI,kBACDsC,EAAiB,CACnBC,SAAS,CAACjJ,KAAK,GACfoJ,WAAW,CAACpJ,KAAK,KAErB,OACI,wBAAM2G,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,4BAAWP,GAEpBtC,EAAkB,YAAlBA,CACI,wBAAOtF,KAAK,OAAOwF,YAAY,iDAI3C,uBAAMrG,KAAN,eAAWgJ,MAAM,gBAASP,GAElBtC,EAAkB,SAAlBA,CACI,4BACI,kBAAC,GAAD,CAAQhK,MAAO,GAAf,gBACA,kBAAC,GAAD,CAAQA,MAAO,GAAf,wB,GArBT7B,aA8BvB2c,GAAW,KAAKjQ,OAAO,GAAZ,CAAgBiQ,I,IAErBsB,G,2MAEFC,QAAU,SAACJ,GACP,EAAKhe,MAAM+d,cAAcC,I,EAG7BK,gBAAkB,SAACtd,GACf,OAAOA,EAAKa,KAAI,SAACC,GACb,OAAGA,EAAK5B,SACG,kBAACuc,GAAD,CAAUpY,MAAOvC,EAAKuC,MAAOnC,IAAKJ,EAAKI,KACzC,EAAKoc,gBAAgBxc,EAAK5B,WAGxB,kBAACuc,GAAD,CAAUpY,MAAOvC,EAAKuC,MAAOnC,IAAKJ,EAAKI,U,wEAIhD,IAAD,OACE8J,EAAqBhM,KAAKC,MAAM2L,KAAhCI,kBACDsC,EAAiB,CACnBC,SAAS,CAACjJ,KAAK,GACfoJ,WAAW,CAACpJ,KAAK,KAEfiZ,EAAcve,KAAKC,MAAMgd,WACzBC,EAAWld,KAAKC,MAAMid,SAC5B,OACI,wBAAMjR,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,4BAAWP,GACxB,wBAAO3H,UAAQ,EAACuF,YAAaqS,EAAYC,aAE7C,uBAAM3Y,KAAN,eAAWgJ,MAAM,gBAASP,GAElBtC,EAAkB,SAAS,CACvBU,aAAa,KADjBV,CAGI,4BACI,kBAAC,GAAD,CAAQhK,MAAM,KAAd,gBACA,kBAAC,GAAD,CAAQA,MAAM,KAAd,mBAKhB,wBACIyc,WAAS,EACTC,kBAAgB,EAChBL,QAAS,SAACJ,GACN,EAAKI,QAAQJ,IAEjBA,YAAaf,GAEb,kBAACT,GAAD,CAAUpY,MAAM,2BAAOnC,IAAI,gBACtBlC,KAAKse,gBAAgBK,U,GAnDnBxe,aA0D3Bie,GAAe,KAAKvR,OAAO,GAAZ,CAAgBuR,I,IAEzBQ,G,2MAEFP,QAAU,SAACJ,GACP,EAAKhe,MAAM+d,cAAcC,I,EAG7BY,aAAe,SAACC,EAAYlD,GAAb,OAAwBA,EAAOvX,MAAMsQ,QAAQmK,IAAe,G,EAE3E5Q,aAAe,SAAC0P,GACZ,EAAK3d,MAAMke,cAAcP,I,wEAKzB,IAAMtP,EAAiB,CACnBC,SAAS,CAACjJ,KAAK,GACfoJ,WAAW,CAACpJ,KAAK,KAEfiZ,EAAcve,KAAKC,MAAMgd,WAE/B,OACI,wBAAMhR,OAAO,cACT,uBAAMpG,KAAN,eAAWgJ,MAAM,4BAAWP,GACxB,wBAAO3H,UAAQ,EAACuF,YAAaqS,EAAYC,aAE7C,uBAAM3Y,KAAN,eAAWgJ,MAAM,4BAAWP,GACxB,wBACI8B,WAAYpQ,KAAKC,MAAM0d,SACvBoB,OAAQ,CAAC,2BAAQ,4BACjBC,YAAU,EACVH,aAAc7e,KAAK6e,aACnBjB,WAAY5d,KAAKC,MAAM2d,WACvB1c,SAAUlB,KAAKkO,aACfyC,OAAQ,SAAA7O,GAAI,OAAIA,EAAKuC,e,GAjClBlE,aAwC3Bye,GAAe,KAAK/R,OAAO,GAAZ,CAAgB+R,I,IC1WVK,G,iLAEb,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW/e,IAChC,kBAAC,IAAD,CAAO8e,KAAK,UAAUvO,OAAQ,kBAC1B,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuO,KAAK,gCAAgCC,UAAWC,UAInE,kBAAC,IAAD,CAAOF,KAAK,IAAIvO,OAAQ,kBACpB,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuO,KAAK,QAAQC,UAAW1W,KAC/B,kBAAC,IAAD,CAAOyW,KAAK,cAAcC,UAAWE,IACrC,kBAAC,IAAD,CAAOH,KAAK,aAAaC,UAAWlY,IACpC,kBAAC,IAAD,CAAOiY,KAAK,eAAeC,UAAW9W,IACtC,kBAAC,IAAD,CAAO6W,KAAK,mBAAmBC,UAAWlW,KAC1C,kBAAC,IAAD,CAAOiW,KAAK,eAAeC,UAAWjW,KACtC,kBAAC,IAAD,CAAOgW,KAAK,WAAWC,UAAWG,KAClC,kBAAC,IAAD,CAAOJ,KAAK,cAAcC,UAAW3U,KACrC,kBAAC,IAAD,CAAO0U,KAAK,eAAeC,UAAW/T,KACtC,kBAAC,IAAD,CAAO8T,KAAK,cAAcC,UAAWI,KACrC,kBAAC,IAAD,CAAOL,KAAK,YAAYC,UAAW7R,KACnC,kBAAC,IAAD,CAAO4R,KAAK,eAAeC,UAAW5P,KACtC,kBAAC,IAAD,CAAO2P,KAAK,cAAcC,UAAWnO,KACrC,kBAAC,IAAD,CAAOkO,KAAK,QAAQC,UAAWpN,KAC/B,kBAAC,IAAD,CAAOmN,KAAK,QAAQC,UAAWtM,KAC/B,kBAAC,IAAD,CAAOqM,KAAK,SAASC,UAAWpK,KAChC,kBAAC,IAAD,CAAOmK,KAAK,QAAQC,UAAWnG,KAC/B,kBAAC,IAAD,CAAOkG,KAAK,WAAWC,UAAW5F,KAClC,kBAAC,IAAD,CAAO2F,KAAK,cAAcC,UAAWnE,KACrC,kBAAC,IAAD,CAAOkE,KAAK,cAAcC,UAAWtD,KACrC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAW7C,KACtC,kBAAC,IAAD,CAAO4C,KAAK,cAAcC,UAAWzC,KACrC,kBAAC,IAAD,CAAU5W,GAAG,UACb,kBAAC,IAAD,CAAOqZ,UAAWnY,gB,GAxClB7G,aCnBhBqf,QACW,cAA7BlK,OAAOO,SAAS4J,UAEe,UAA7BnK,OAAOO,SAAS4J,UAEhBnK,OAAOO,SAAS4J,SAAS9G,MACvB,2DCZN+G,IAAS/O,OAAO,kBAAC,GAAD,MAAYgP,SAASC,eAAe,SD6H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhd,MAAK,SAAAid,GACjCA,EAAaC,iB","file":"static/js/main.e2ca358e.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                this is Login page \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default {\r\n    formateDate(time){\r\n        if(!time){\r\n            return '';\r\n        }\r\n        let date = new Date(time);\r\n        return date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + date.getDate() +' '+ date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\r\n    },\r\n    pagination(data,callback){\r\n        return {\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.result.page,\r\n            pageSize:data.result.page_size,\r\n            total:data.result.total,\r\n            showTotall:()=>{\r\n                return `共${data.result.list.total}条`\r\n            },\r\n        }\r\n    },\r\n    getOptionList(data){\r\n        if(!data){\r\n            return [];\r\n        }\r\n        let options = []\r\n        data.map((item)=>{\r\n            options.push(<option value={item.id} key={item.id}>{item.name}</option>)\r\n        })\r\n        return options;\r\n    },\r\n    updateSelectedItem(selectedRowKeys,selectedItem,selectedIds){\r\n        if(selectedIds){\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem,\r\n                selectedIds\r\n            })\r\n        }else{\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem\r\n            })\r\n        }\r\n    }\r\n}","import axios from 'axios'\r\nimport JsonP from 'jsonp'\r\nimport { Modal } from 'antd';\r\nimport Utils from './../util/utils'\r\n\r\nexport default class Axios {\r\n    static requestList(_this,url,params,isMock){\r\n        var data = {\r\n            params:params,\r\n            isMock\r\n        }\r\n        this.ajax({\r\n            url,\r\n            data\r\n        }).then((data)=>{\r\n            if(data && data.result){\r\n                let list = data.result.item_list.map((item,index)=>{\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                _this.setState({\r\n                    list,\r\n                    pagination:Utils.pagination(data,(current)=>{\r\n                        _this.params.page = current;\r\n                        _this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    static jsonp(options){\r\n        return new Promise((resolve,reject)=>{\r\n            JsonP(options.url,{\r\n                param:'callback'\r\n            },function(err,response){\r\n                if(response.status === 'success'){\r\n                    resolve(response);\r\n                }else{\r\n                    reject(response.message);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    static ajax(options){\r\n        // let loading;\r\n        // if(options.data && options.data.isShowLoading !== false){\r\n        //     loading = document.getElementById('ajaxLoading');\r\n        //     loading.style.display = 'block';\r\n        // }\r\n        //判断数据接口是mock伪数据还是真正的数据接口（else中填写真正的数据接口）\r\n        let baseApi = '';\r\n        if(options.isMock){\r\n            baseApi = 'https://www.easy-mock.com/mock/5e096fa408f7e84791397343/example'\r\n        }else{\r\n            baseApi = 'https://www.easy-mock.com/mock/5e096fa408f7e84791397343/example'\r\n        }\r\n        return new Promise((resolve,reject)=>{\r\n            axios({\r\n                url:options.url,\r\n                method:'get',\r\n                baseURL:baseApi,\r\n                timeout:5000,\r\n                params:(options.data && options.data.params) || ''\r\n            }).then((response)=>{\r\n                if(response.status === '200'){\r\n                    let res = response.data;\r\n                    if(res.code === '0'){\r\n                        resolve(res);\r\n                    }else{\r\n                        Modal.info({\r\n                            title:'提示',\r\n                            content:res.msg\r\n                        })\r\n                    }\r\n                }else{\r\n                    reject(response.data);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport './index.less';\r\nimport Util from '../../util/utils'\r\nimport axios from '../../axios/index'\r\n// import menuList from '../../config/menuConfig'\r\n\r\nexport default class index extends Component {\r\n    state = {}\r\n    componentWillMount(){\r\n        this.setState({\r\n            userName:'咸鱼求道'\r\n        })\r\n        setInterval(()=>{\r\n            let sysTime = Util.formateDate(new Date().getTime());\r\n            this.setState({\r\n                sysTime\r\n            })\r\n        },1000)\r\n    }\r\n    getWeatherAPIData(){\r\n        let city = '北京'\r\n        axios.jsonp({\r\n            url:'http://api.map.baidu.com/telematics/v3/weather?location='+ encodeURIComponent(city) +'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n        }).then((res)=>{\r\n            if(res.status === 'success'){\r\n                let data = res.results[0].weather_data[0];\r\n                this.setState({\r\n                    dayPictureUrl:data.dayPictureUrl,\r\n                    weather:data.weather\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const menuType = this.props.menuType;\r\n        return (\r\n            <div className=\"header\">\r\n                <Row className=\"header-top\">\r\n                    {\r\n                        menuType ?\r\n                            <Col span={6} className='logo'>\r\n                                <img src='/assets/logo-ant.svg' alt='' />\r\n                                <span>Enjoy DC 通用管理系统</span>\r\n                            </Col> : ''\r\n                    }\r\n                    <Col span={menuType ? 18 : 24}>\r\n                        <span>欢迎，{this.state.userName}</span>\r\n                        <a>退出</a>\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    menuType ? '' :\r\n                    <Row className=\"breadcrumb\">\r\n                        <Col span={4} className=\"breadcrumb-title\">\r\n                            首页\r\n                        </Col>\r\n                        <Col span={20} className=\"weather\">\r\n                            <span className=\"date\">{this.state.sysTime}</span>\r\n                            <span className=\"weather-detail\">\r\n                                <img src={this.state.dayPictureUrl} alt=\"\"/>\r\n                                {this.state.weather}\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                版权所有：该版权归xxxxx所有（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：xxx\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const menuList = [\r\n    {\r\n        title:'首页',\r\n        key:'/home'\r\n    },\r\n    {\r\n        title:'UI',\r\n        key:'/ui',\r\n        children:[\r\n            {\r\n                title:'按钮',\r\n                key:'/ui/buttons',\r\n            },\r\n            {\r\n                title:'弹框',\r\n                key:'/ui/modals',\r\n            },\r\n            {\r\n                title:'Loading',\r\n                key:'/ui/loadings',\r\n            },\r\n            {\r\n                title:'通知提醒',\r\n                key:'/ui/notification',\r\n            },\r\n            {\r\n                title:'全局Message',\r\n                key:'/ui/messages',\r\n            },\r\n            {\r\n                title:'Tab页签',\r\n                key:'/ui/tabs',\r\n            },\r\n            {\r\n                title:'图片画廊',\r\n                key:'/ui/gallery',\r\n            },\r\n            {\r\n                title:'轮播图',\r\n                key:'/ui/carousel',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'表单',\r\n        key:'/form',\r\n        children:[\r\n            {\r\n                title:'登录',\r\n                key:'/form/login',\r\n            },\r\n            {\r\n                title:'注册',\r\n                key:'/form/reg',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'表格',\r\n        key:'/table',\r\n        children:[\r\n            {\r\n                title:'基础表格',\r\n                key:'/table/basic',\r\n            },\r\n            {\r\n                title:'高级表格',\r\n                key:'/table/high',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'富文本',\r\n        key:'/rich'\r\n    },\r\n    {\r\n        title:'城市管理',\r\n        key:'/city'\r\n    },\r\n    {\r\n        title:'订单管理',\r\n        key:'/order',\r\n        btnList:[\r\n            {\r\n                title:'订单详情',\r\n                key:'detail'\r\n            },\r\n            {\r\n                title:'结束订单',\r\n                key:'finish'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'员工管理',\r\n        key:'/user'\r\n    },\r\n    {\r\n        title:'车辆地图',\r\n        key:'/bikeMap'\r\n    },\r\n    {\r\n        title:'图标',\r\n        key:'/charts',\r\n        children:[\r\n            {\r\n                title:'柱形图',\r\n                key:'/charts/bar'\r\n            },\r\n            {\r\n                title:'饼图',\r\n                key:'/charts/pie'\r\n            },\r\n            {\r\n                title:'折线图',\r\n                key:'/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title:'权限设置',\r\n        key:'/permission'\r\n    },\r\n];\r\nexport default menuList;","import React, { Component } from 'react';\r\nimport { Menu } from 'antd';\r\nimport MenuConfig from './../../config/menuConfig';\r\nimport {NavLink} from 'react-router-dom'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class index extends Component {\r\n    componentWillMount(){\r\n        const menuTreeNode = this.renderMenu(MenuConfig);\r\n        this.setState({\r\n            menuTreeNode\r\n        })\r\n    }\r\n    //菜单渲染\r\n    renderMenu=(data)=>{\r\n        return data.map((item)=>{\r\n            if(item.children){\r\n                return(\r\n                    <SubMenu title={item.title} key={item.key} >\r\n                        { this.renderMenu(item.children) }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Menu.Item key={item.key}>\r\n                <NavLink to={item.key}>{item.title}</NavLink>\r\n            </Menu.Item>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"logo\">\r\n                    <img src=\"/assets/logo-ant.svg\" alt=\"logo\" />\r\n                    <h1>Enjoy DC</h1>\r\n                </div>\r\n                <Menu theme=\"dark\">\r\n                    {this.state.menuTreeNode}\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport NavLeft from './components/NavLeft'\r\nimport './style/common.less'\r\n\r\nexport default class Admin extends Component {\r\n    render() {\r\n        return (\r\n            <Row className=\"container\">\r\n                <Col span={3} className=\"nav-left\">\r\n                    <NavLeft />\r\n                </Col>\r\n                <Col span={21} className=\"main\">\r\n                    <Header />\r\n                    <Row className=\"content\">\r\n                        {this.props.children}\r\n                    </Row>\r\n                    <Footer />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Card,Button,Icon, Radio} from 'antd';\r\nimport './ui.less'\r\n\r\nexport default class Buttons extends Component {\r\n    state = {\r\n      };\r\n    \r\n      handleSizeChange = e => {\r\n        this.setState({ size: e.target.value });\r\n      };\r\n      handleCloseLoading = ()=>{\r\n          if(this.state.loading){\r\n            this.setState({\r\n                loading:false\r\n            })\r\n          }else{\r\n            this.setState({\r\n                loading:true\r\n            })\r\n          }\r\n      };\r\n    render() {\r\n        // const { size } = this.state;\r\n        return (\r\n            <div>\r\n                <Card title=\"基础按钮\" className=\"card\">\r\n                    <Button type=\"primary\">新增</Button>\r\n                    <Button>查看</Button>\r\n                    <Button type=\"dashed\">查询</Button>\r\n                    <Button type=\"danger\">删除</Button>\r\n                    <Button disabled>禁用</Button>\r\n                </Card>\r\n                <Card title=\"图形按钮\" className=\"card\">\r\n                    <Button type=\"primary\" icon=\"edit\">新增</Button>\r\n                    <Button>查看</Button>\r\n                    <Button type=\"dashed\" icon=\"search\">查询</Button>\r\n                    <Button type=\"danger\" icon=\"delete\">删除</Button>\r\n                    <Button disabled icon=\"close-circle\">禁用</Button>\r\n                </Card>\r\n                <Card title=\"Loading按钮\" className=\"card\">\r\n                    <Button type=\"primary\" loading={this.state.loading}>确定</Button>\r\n                    <Button type=\"primary\" loading={this.state.loading} shape=\"circle\"></Button>\r\n                    <Button type=\"dashed\" loading={this.state.loading}>点击加载</Button>\r\n                    <Button loading={this.state.loading} shape=\"circle\"></Button>\r\n                    <Button type=\"danger\" onClick={this.handleCloseLoading}>关闭</Button>\r\n                </Card>\r\n                <Card title=\"按钮组\">\r\n                    <Button.Group>\r\n                        <Button type=\"primary\">\r\n                            <Icon type=\"left\" />\r\n                            返回\r\n                        </Button>\r\n                        <Button type=\"primary\">\r\n                            前进\r\n                            <Icon type=\"right\" />\r\n                        </Button>\r\n                    </Button.Group>\r\n                </Card>\r\n                <Card title=\"按钮尺寸\" className=\"card1\">\r\n                    <Radio.Group value={this.state.size} onChange={this.handleSizeChange}>\r\n                        <Radio value=\"small\">小</Radio>\r\n                        <Radio value=\"default\">中</Radio>\r\n                        <Radio value=\"large\">大</Radio>\r\n                    </Radio.Group>\r\n                    <Button type=\"primary\" size={this.state.size}>新增</Button>\r\n                    <Button size={this.state.size}>查看</Button>\r\n                    <Button type=\"dashed\" size={this.state.size}>查询</Button>\r\n                    <Button type=\"danger\" size={this.state.size}>删除</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './nofound.less'\r\n\r\nexport default class NoFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nofound-img\">\r\n                <img src=\"/assets/404.jpg\" alt=\"\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button,Modal } from 'antd'\r\nimport './ui.less'\r\n\r\nexport default class Modals extends Component {\r\n    state = { \r\n        showModal1:false,\r\n        showModal2:false,\r\n        showModal3:false,\r\n        showModal4:false\r\n     };\r\n    handleOpen = (type) => {\r\n        this.setState({\r\n            [type]:true\r\n        });\r\n    };\r\n    handleConfirm = (type) =>{\r\n        Modal[type]({\r\n            title:'确认？',\r\n            content:'您确定要放弃骑车吗？',\r\n            onOk(){\r\n                console.log('OK')\r\n            },\r\n            onCancel(){\r\n                console.log(\"Cancel\")\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"基础模态框\" className=\"card\">\r\n                    <Button type=\"primary\" onClick={() =>this.handleOpen('showModal1')}>Open</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleOpen('showModal2')}>自定义页脚</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleOpen('showModal3')}>顶部20px弹框</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleOpen('showModal4')}>水平垂直居中弹框</Button>\r\n                </Card>\r\n                <Card title=\"信息确认框\" className=\"card\">\r\n                    <Button type=\"primary\" onClick={() =>this.handleConfirm('confirm')}>Confirm</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleConfirm('info')}>Info</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleConfirm('success')}>Success</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleConfirm('error')}>Error</Button>\r\n                    <Button type=\"primary\" onClick={() =>this.handleConfirm('warning')}>Warning</Button>\r\n                </Card>\r\n                    <Modal\r\n                        title=\"温馨提示\"\r\n                        visible={this.state.showModal1}\r\n                        onCancel={()=>{\r\n                            this.setState({\r\n                                showModal1:false\r\n                            })\r\n                        }}\r\n                        onOk={()=>{\r\n                            this.setState({\r\n                                showModal1:false\r\n                            })\r\n                        }}\r\n                        >\r\n                            <p>共享单车不能驶出规定范围内哦！</p>\r\n                    </Modal>\r\n                    <Modal\r\n                        title=\"温馨提示\"\r\n                        visible={this.state.showModal2}\r\n                        okText=\"好的\"\r\n                        cancelText=\"算了\"\r\n                        onCancel={()=>{\r\n                            this.setState({\r\n                                showModal2:false\r\n                            })\r\n                        }}\r\n                        onOk={()=>{\r\n                            this.setState({\r\n                                showModal2:false\r\n                            })\r\n                        }}\r\n                        >\r\n                            <p>共享单车不能驶出规定范围内哦！</p>\r\n                    </Modal>\r\n                    <Modal\r\n                        title=\"温馨提示\"\r\n                        visible={this.state.showModal3}\r\n                        style={{top:20}}\r\n                        onCancel={()=>{\r\n                            this.setState({\r\n                                showModal3:false\r\n                            })\r\n                        }}\r\n                        onOk={()=>{\r\n                            this.setState({\r\n                                showModal3:false\r\n                            })\r\n                        }}\r\n                        >\r\n                            <p>共享单车不能驶出规定范围内哦！</p>\r\n                    </Modal>\r\n                    <Modal\r\n                        title=\"温馨提示\"\r\n                        wrapClassName=\"vertical-center-modal\"\r\n                        visible={this.state.showModal4}\r\n                        onCancel={()=>{\r\n                            this.setState({\r\n                                showModal4:false\r\n                            })\r\n                        }}\r\n                        onOk={()=>{\r\n                            this.setState({\r\n                                showModal4:false\r\n                            })\r\n                        }}\r\n                        >\r\n                            <p>共享单车不能驶出规定范围内哦！</p>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ui.less'\r\nimport { Card, Spin, Icon, Alert } from 'antd'\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{fontSize:24}} spin/>\r\n\r\nexport default class Loadings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"Spin用法\" className=\"card\">\r\n                    <Spin size=\"small\"/>\r\n                    <Spin />\r\n                    <Spin size=\"large\"/>\r\n                    <Spin indicator={antIcon}/>\r\n                </Card>\r\n                <Card title=\"内容遮罩\">\r\n                    <Spin tip=\"加载中\">\r\n                        <Alert \r\n                            message=\"React\"\r\n                            description=\"欢迎来到React实战项目\"\r\n                            type=\"info\"\r\n                        />\r\n                    </Spin>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-wrap\">\r\n                欢迎进入共享单车后台管理系统\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ui.less'\r\nimport { Card,Button,Icon,notification } from 'antd'\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n    message: '温馨提示',\r\n    description:\r\n        '天冷路滑，骑行时请在注意安全',\r\n    icon: <Icon type=\"smile\" style={{ color: '#108ee9' }} />,\r\n    });\r\n};\r\n\r\nconst openNotificationWithIcon = (type,direction) => {\r\n    if(direction){\r\n        notification.config({\r\n            placement:direction\r\n        })\r\n    }\r\n    notification[type]({\r\n    message: '发工资了',\r\n    description:\r\n        '发了工资就可以买买买买了。。。。',\r\n    });\r\n};\r\n\r\nexport default class Notification extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"通知提醒框\" className=\"card\">\r\n                    <Button type=\"primary\" onClick={openNotification}>\r\n                        Open the notification box\r\n                    </Button>\r\n                </Card>\r\n                <Card title=\"带图标的\" className=\"card\">\r\n                    <Button onClick={() => openNotificationWithIcon('success')}>Success</Button>\r\n                    <Button onClick={() => openNotificationWithIcon('info')}>Info</Button>\r\n                    <Button onClick={() => openNotificationWithIcon('warning')}>Warning</Button>\r\n                    <Button onClick={() => openNotificationWithIcon('error')}>Error</Button>\r\n                </Card>\r\n                <Card title=\"控制方向\" className=\"card\">\r\n                    <Button onClick={() => openNotificationWithIcon('success','topLeft')}>TopLeft</Button>\r\n                    <Button onClick={() => openNotificationWithIcon('info','topRight')}>TopRight</Button>\r\n                    <Button onClick={() => openNotificationWithIcon('warning','bottomLeft')}>BottomLeft</Button>\r\n                    <Button onClick={() => openNotificationWithIcon('error','bottomRight')}>BottomRight</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport './ui.less'\r\nimport { Card,Button,message } from 'antd'\r\n\r\nexport default class Message extends Component {\r\n    showMessage = (type) =>{\r\n        message[type](\"今天天气真的好冷啊\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"全局提示框\" className=\"card\">\r\n                    <Button onClick={()=>this.showMessage('success')}>Success</Button>\r\n                    <Button onClick={()=>this.showMessage('error')}>Error</Button>\r\n                    <Button onClick={()=>this.showMessage('warning')}>Warning</Button>\r\n                    <Button onClick={()=>this.showMessage('info')}>Info</Button>\r\n                    <Button onClick={()=>this.showMessage('loading')}>Loading</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ui.less'\r\nimport { Card,Icon,message,Tabs } from 'antd'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nexport default class Tab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.newTabIndex = 0;\r\n        const panes = [\r\n            { \r\n                title: '天气', \r\n                content: '每天天气都很好', \r\n                key: '1' \r\n            },\r\n            { \r\n                title: '心情', \r\n                content: '每天心情都很好', \r\n                key: '2' \r\n            },\r\n            {\r\n                title: '工作',\r\n                content: '每天都很充实',\r\n                key: '3',\r\n                closable: false,\r\n            },\r\n        ];\r\n        this.state = {\r\n            activeKey: panes[0].key,\r\n            panes,\r\n        };\r\n    }\r\n    onChange = activeKey => {\r\n        this.setState({ activeKey });\r\n    };\r\n    onEdit = (targetKey, action) => {\r\n        this[action](targetKey);\r\n    };\r\n    add = () => {\r\n        const { panes } = this.state;\r\n        const activeKey = `饮食${this.newTabIndex++}`;\r\n        panes.push({ title: activeKey, content: '今天吃点什么呢？', key: activeKey });\r\n        this.setState({ panes, activeKey });\r\n    };\r\n    remove = targetKey => {\r\n        let { activeKey } = this.state;\r\n        let lastIndex;\r\n        this.state.panes.forEach((pane, i) => {\r\n            if (pane.key === targetKey) {\r\n                lastIndex = i - 1;\r\n            }\r\n        });\r\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n        if (panes.length && activeKey === targetKey) {\r\n            if (lastIndex >= 0) {\r\n                activeKey = panes[lastIndex].key;\r\n            } else {\r\n                activeKey = panes[0].key;\r\n            }\r\n        }\r\n        this.setState({ panes, activeKey });\r\n    };\r\n    callBack = (key) => {\r\n        message.info(\"Hi,您选择了页签：\"+key)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"Tab页签\" className=\"card\">\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callBack}>\r\n                        <TabPane tab=\"天气\" key=\"1\">\r\n                            今天天气不错\r\n                        </TabPane>\r\n                        <TabPane tab=\"心情\" key=\"2\">\r\n                            今天心情很不错\r\n                        </TabPane>\r\n                        <TabPane tab=\"工作\" key=\"3\">\r\n                            今天没什么工作要做\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"Tab带图的页签\" className=\"card\">\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callBack}>\r\n                        <TabPane tab={<span><Icon type=\"gitlab\" />天气</span>} key=\"1\">\r\n                            今天天气不错\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"yahoo\" />心情</span>} key=\"2\">\r\n                            今天心情很不错\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"fire\" />工作</span>} key=\"3\">\r\n                            今天没什么工作要做\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"可编辑的标签页\" className=\"card\">\r\n                    <Tabs\r\n                        onChange={this.onChange}\r\n                        activeKey={this.state.activeKey}\r\n                        type=\"editable-card\"\r\n                        onEdit={this.onEdit}\r\n                    >\r\n                        {this.state.panes.map(pane => (\r\n                            <TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\r\n                                {pane.content}\r\n                            </TabPane>\r\n                        ))}\r\n                    </Tabs>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Row,Col,Modal} from 'antd'\r\nimport './ui.less'\r\n\r\nexport default class Gallery extends Component {\r\n    state = {\r\n        visible:false\r\n    }\r\n    openGallery = (imgSrc) =>{\r\n        this.setState({\r\n            visible:true,\r\n            currentImg:'/gallery/' + imgSrc\r\n        })\r\n    }\r\n    render() {\r\n        const imgs = [\r\n            ['1.png','2.png','3.png','14.png','5.png'],\r\n            ['6.png','25.png','13.png','9.png','10.png'],\r\n            ['11.png','12.png','23.png','4.png','15.png'],\r\n            ['16.png','17.png','18.png','19.png','24.png'],\r\n            ['21.png','20.png','7.png','8.png','22.png']\r\n        ]\r\n        const imgList = imgs.map((list)=>list.map((item)=>\r\n            <Card\r\n                style={{marginBottom:10}}\r\n                cover={<img src={'/gallery/' + item} alt=\"example\" onClick={()=>this.openGallery(item)}/>}\r\n            >\r\n                <Card.Meta \r\n                    title=\"风景\" \r\n                    description=\"美丽的风景\" \r\n                />\r\n            </Card>\r\n        ))\r\n        return (\r\n            <div className=\"card-wrap\">\r\n                <Row gutter={10}>\r\n                    <Col md={5}>\r\n                        {imgList[0]}\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        {imgList[1]}\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        {imgList[2]}\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        {imgList[3]}\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {imgList[4]}\r\n                    </Col>\r\n                </Row>\r\n                <Modal\r\n                    width={300}\r\n                    title=\"风景\"\r\n                    visible={this.state.visible}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            visible:false\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                >\r\n                    <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport{Card,Carousel} from 'antd'\r\nimport './ui.less'\r\n\r\nexport default class Silder extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"文字轮播\" style={{marginBottom:10}}>\r\n                    <Carousel autoplay effect=\"fade\">\r\n                        <div><h3>今天天气很好！</h3></div>\r\n                        <div><h3>今天心情很美丽！</h3></div>\r\n                        <div><h3>今天状态还不错！</h3></div>\r\n                        <div><h3>每天过得都很开心！</h3></div>\r\n                    </Carousel>\r\n                </Card>\r\n                <Card title=\"图片轮播\" className=\"silder-warp\">\r\n                    <Carousel autoplay>\r\n                        <div><img src=\"/carousel-img/carousel-1.jpg\" alt=\"\" style={{width:'100%',height:300}}/></div>\r\n                        <div><img src=\"/carousel-img/carousel-2.jpg\" alt=\"\" style={{width:'100%',height:300}}/></div>\r\n                        <div><img src=\"/carousel-img/carousel-3.jpg\" alt=\"\" style={{width:'100%',height:300}}/></div>\r\n                    </Carousel>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Form, Input,Icon, Button, message,Checkbox} from 'antd'\r\nimport './login.less'\r\nconst FormItem = Form.Item\r\n\r\n class FormLogin extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err,values)=>{\r\n            if(!err){\r\n                message.success('登录成功')\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Card title=\"登录行内表单\">\r\n                    <Form layout=\"inline\">\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入用户名\"/>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input.Password placeholder=\"请输入密码\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\">登录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"登录水平表单\" style={{marginTop:10}}>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{ required: true, message: '请输入用户名!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)'}} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                    style={{width:300}}\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)'}} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                    style={{width:300}}\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item className=\"form-warp\">\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(<Checkbox>记住密码</Checkbox>)}\r\n                            <a className=\"login-form-forgot\" href=\"\">\r\n                                忘记密码\r\n                            </a>\r\n                            <br />\r\n                            <Button type=\"primary\" style={{width:300}} htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(FormLogin);\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Form,Input,Icon,Radio, InputNumber, Select, Switch, DatePicker, TimePicker, Upload,message, Checkbox, Button   } from 'antd'\r\nimport moment from 'moment';\r\n\r\nconst RadioGroup = Radio.Group;\r\nconst { Option } = Select;\r\nconst TextArea = Input.TextArea;\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass Register extends Component {\r\n\r\n    state = {};\r\n\r\n    //注册按钮的点击事件\r\n    handleSubmit = () => {\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        console.log(JSON.stringify(userInfo))\r\n        message.success(`${userInfo.userName} 恭喜你，您通过本次表单组件学习，当前密码为：${userInfo.userPwd}`)\r\n    }\r\n\r\n    //图片上传\r\n    getBase64 = (img, callback)=>{\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            this.getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    userImg:imageUrl,\r\n                    loading: false,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:12\r\n            }\r\n        }\r\n        //定义偏移列\r\n        const offsetLayout = {\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        }\r\n        // const uploadButton = (\r\n        //     <div>\r\n        //         <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        //         <div className=\"ant-upload-text\">Upload</div>\r\n        //     </div>\r\n        // );\r\n        // const { imageUrl } = this.state;\r\n        return (\r\n            <div>\r\n                <Card title=\"注册表单\">\r\n                    <Form layout=\"horizontal\">\r\n                        <Form.Item label=\"用户名\" {...formItemLayout}>\r\n                            {getFieldDecorator('userName', {\r\n                                initialValue:'',\r\n                                rules: [{ required: true, message: '请输入用户名!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)'}} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"密码\" {...formItemLayout}>\r\n                            {getFieldDecorator('userPwd', {\r\n                                initialValue:'',\r\n                                rules: [{ required: true, message: '请输入密码!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)'}} />}\r\n                                    placeholder=\"请输入密码\"\r\n                                    type=\"password\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\" {...formItemLayout}>\r\n                            {getFieldDecorator('sex', {\r\n                                initialValue:'1',\r\n                            })(\r\n                                <RadioGroup>\r\n                                    <Radio value=\"1\">男</Radio>\r\n                                    <Radio value=\"2\">女</Radio>\r\n                                </RadioGroup>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\" {...formItemLayout}>\r\n                            {getFieldDecorator('age', {\r\n                                initialValue:'18',\r\n                            })(\r\n                                <InputNumber />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"当前状态\" {...formItemLayout}>\r\n                            {getFieldDecorator('state', {\r\n                                initialValue:'1',\r\n                            })(\r\n                                <Select>\r\n                                    <Option value=\"1\">一条咸鱼</Option>\r\n                                    <Option value=\"2\">两条咸鱼</Option>\r\n                                    <Option value=\"3\">三条咸鱼</Option>\r\n                                    <Option value=\"4\">四条咸鱼</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"爱好\" {...formItemLayout}>\r\n                            {getFieldDecorator('like', {\r\n                                initialValue:['1','2','3','4'],\r\n                            })(\r\n                                <Select mode='multiple'>\r\n                                    <Option value=\"1\">吃饭</Option>\r\n                                    <Option value=\"2\">听歌</Option>\r\n                                    <Option value=\"3\">睡</Option>\r\n                                    <Option value=\"4\">巴文博</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否已婚\" {...formItemLayout}>\r\n                            {getFieldDecorator('isMarried', {\r\n                                valuePropName: 'checked',\r\n                                initialValue:true,\r\n                            })(\r\n                                <Switch />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"生日\" {...formItemLayout}>\r\n                            {getFieldDecorator('birthday', {\r\n                                initialValue:moment('2019-2-14'),\r\n                            })(\r\n                                <DatePicker \r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"联系地址\" {...formItemLayout}>\r\n                            {getFieldDecorator('address', {\r\n                                initialValue:''\r\n                            })(\r\n                                <TextArea placeholder=\"请输入您的联系地址\" autoSize={{ minRows: 3, maxRows: 5 }}/>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"早起时间\" {...formItemLayout}>\r\n                            {getFieldDecorator('time', {\r\n                                initialValue:''\r\n                            })(\r\n                                <TimePicker />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"头像上传\" {...formItemLayout}>\r\n                            {getFieldDecorator('userImg', {\r\n                                initialValue:''\r\n                            })(\r\n                                //action是官网的传地址\r\n                                <Upload \r\n                                    name=\"avatar\"\r\n                                    listType=\"picture-card\"\r\n                                    className=\"avatar-uploader\"\r\n                                    showUploadList={false}\r\n                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                    beforeUpload={beforeUpload}\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                    {this.state.userImg ? <img src={this.state.userImg} alt=\"avatar\" style={{ width: '100%' }} /> : <Icon type=\"plus\"/>}\r\n                                </Upload>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item {...offsetLayout}>\r\n                            {getFieldDecorator('agree', {\r\n                                initialValue:'',\r\n                                rules: [{ required: true, message: '请阅读协议!' }],\r\n                            })(\r\n                                <Checkbox>我已同意<a href='#'>xxx协议</a></Checkbox>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item {...offsetLayout}>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(Register);\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, message, Button } from 'antd'\r\nimport axios from './../../axios/index'\r\nimport Utils from './../../util/utils'\r\n\r\nexport default class Basic extends Component {\r\n    state = {\r\n        dataSource2:[]\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        const dataSource = [\r\n            {\r\n                id:'0',\r\n                userName:'bwb',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2019-2-14',\r\n                address:'河南',\r\n                phoneNumber:'15698745698'\r\n            },\r\n            {\r\n                id:'1',\r\n                userName:'gqp',\r\n                sex:'女',\r\n                state:'4',\r\n                interest:'6',\r\n                birthday:'2019-2-14',\r\n                address:'河南',\r\n                phoneNumber:'15698745698'\r\n            },\r\n            {\r\n                id:'2',\r\n                userName:'lwq',\r\n                sex:'女',\r\n                state:'3',\r\n                interest:'4',\r\n                birthday:'2019-2-14',\r\n                address:'河南',\r\n                phoneNumber:'15698745698'\r\n            },\r\n            {\r\n                id:'3',\r\n                userName:'wxy',\r\n                sex:'1',\r\n                state:'2',\r\n                interest:'3',\r\n                birthday:'2019-2-14',\r\n                address:'河南',\r\n                phoneNumber:'15698745698'\r\n            },\r\n            {\r\n                id:'4',\r\n                userName:'zwh',\r\n                sex:'1',\r\n                state:'5',\r\n                interest:'1',\r\n                birthday:'2019-2-14',\r\n                address:'河南',\r\n                phoneNumber:'15698745698'\r\n            }\r\n        ]\r\n        dataSource.map((item,index)=>{\r\n            item.key = index;\r\n        })\r\n        this.setState({\r\n            dataSource\r\n        })\r\n        this.request()\r\n    }\r\n\r\n    //动态获取mock数据\r\n    request = ()=>{\r\n        let _this=this;\r\n        axios.ajax({\r\n            url:'/table/list',\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                res.result.list.map((item,index)=>{\r\n                    item.key = index;\r\n                })\r\n                this.setState({\r\n                    dataSource2:res.result.list,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination:Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onRowClick = (record,index) => {\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title:'信息',\r\n            content:`用户名：${record.userName},爱好:${record.interest}`\r\n        })\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectedItem:record\r\n        })\r\n    }\r\n    //多选删除操作\r\n    handleDelete = (()=>{\r\n        let rows = this.state.selectedRows;\r\n        let ids = [];\r\n        rows.map((item)=>{\r\n            ids.push(item.id)\r\n        });\r\n        Modal.confirm({\r\n            title:'删除提示',\r\n            content:`您确定要删除这些数据吗？${ids.join(',')}`,\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request(); //刷新页面\r\n            }\r\n        })\r\n    })\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'id',\r\n                dataIndex:'id'\r\n            },{\r\n                title:'用户名',\r\n                dataIndex:'userName'\r\n            },{\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },{\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config = {\r\n                        '1' : '咸鱼一条',\r\n                        '2' : '风华浪子',\r\n                        '3' : '邻家妹妹',\r\n                        '4' : '白衣天使',\r\n                        '5' : '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },{\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                render(interest){\r\n                    let config = {\r\n                        '1' : '美食',\r\n                        '2' : '旅游',\r\n                        '3' : '打游戏',\r\n                        '4' : '追剧',\r\n                        '5' : '看小说',\r\n                        '6' : '逛街',\r\n                        '7' : '拍照',\r\n                        '8' : '爬山'\r\n                    }\r\n                    return config[interest];\r\n                }\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday'\r\n            },{\r\n                title:'地址',\r\n                dataIndex:'address'\r\n            },{\r\n                title:'联系方式',\r\n                dataIndex:'phoneNumber'\r\n            }\r\n        ]\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            type:'radio',\r\n            selectedRowKeys\r\n        }\r\n        const rowCheckSelection = {\r\n            type:'checkbox',\r\n            selectedRowKeys,\r\n            onChange:(selectedRowKeys,selectRows) => {\r\n                let ids = [];\r\n                selectedRowKeys.map((item)=>{\r\n                    ids.push(item.id)\r\n                })\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedIds:ids\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table \r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"动态数据渲染表格\" style={{marginTop:10}}>\r\n                    <Table \r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"Mock-单选\" style={{marginTop:10}}>\r\n                    <Table \r\n                        rowSelection={rowSelection}\r\n                        onRow={(record,index)=>{\r\n                            return {\r\n                                onClick:() => { \r\n                                    this.onRowClick(record,index);\r\n                                },//点击行\r\n                            }\r\n                        }}\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"Mock-多选\" style={{marginTop:10}}>\r\n                    <div style={{marginBottom:10}}>\r\n                        <Button onClick={this.handleDelete}>删除</Button>\r\n                    </div>\r\n                    <Table\r\n                        rowSelection={rowCheckSelection}\r\n                        onRow={(record,index)=>{\r\n                            return {\r\n                                onClick:() => {\r\n                                    this.onRowClick(record,index);\r\n                                },//点击行\r\n                            }\r\n                        }}\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n                <Card title=\"Mock-表格分页\" style={{marginTop:10}}>\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource2}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, message, Button,Badge } from 'antd'\r\nimport axios from './../../axios/index'\r\n// import Utils from './../../util/utils'\r\n\r\nexport default class High extends Component {\r\n    state = {\r\n        // dataSource2:[]\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        this.request();\r\n    }\r\n    request = ()=>{\r\n        // let _this=this;\r\n        axios.ajax({\r\n            url:'/table/high/list',\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                res.result.list.map((item,index)=>{\r\n                    item.key = index;\r\n                })\r\n                this.setState({\r\n                    dataSource:res.result.list\r\n                })\r\n            }\r\n        })\r\n    }\r\n    handleChange = (pagination,filters,sorter)=>{\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    }\r\n\r\n    handleDelete = (item)=>{\r\n        // let id = item.id;\r\n        Modal.confirm({\r\n            title:'确认',\r\n            content:'您确认要删除此条数据吗？',\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'id',\r\n                dataIndex:'id',\r\n                width:80\r\n            },{\r\n                title:'用户名',\r\n                dataIndex:'userName',\r\n                width:80\r\n            },{\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                width:80,\r\n                render(sex){\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },{\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                width:80,\r\n                render(state){\r\n                    let config = {\r\n                        '1' : '咸鱼一条',\r\n                        '2' : '风华浪子',\r\n                        '3' : '邻家妹妹',\r\n                        '4' : '白衣天使',\r\n                        '5' : '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },{\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                width:80,\r\n                render(interest){\r\n                    let config = {\r\n                        '1' : '美食',\r\n                        '2' : '旅游',\r\n                        '3' : '打游戏',\r\n                        '4' : '追剧',\r\n                        '5' : '看小说',\r\n                        '6' : '逛街',\r\n                        '7' : '拍照',\r\n                        '8' : '爬山'\r\n                    }\r\n                    return config[interest];\r\n                }\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday',\r\n                width:80,\r\n            },{\r\n                title:'地址',\r\n                dataIndex:'address',\r\n                width:140\r\n            },{\r\n                title:'联系方式',\r\n                dataIndex:'phoneNumber',\r\n                width:80\r\n            }\r\n        ]\r\n        const columns2 = [\r\n            {\r\n                title:'id',\r\n                dataIndex:'id',\r\n                width:80,\r\n                fixed:'left'\r\n            },{\r\n                title:'用户名',\r\n                dataIndex:'userName',\r\n                width:80,\r\n                fixed:'left'\r\n            },{\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                width:80,\r\n                render(sex){\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },{\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                width:80,\r\n                render(state){\r\n                    let config = {\r\n                        '1' : '咸鱼一条',\r\n                        '2' : '风华浪子',\r\n                        '3' : '邻家妹妹',\r\n                        '4' : '白衣天使',\r\n                        '5' : '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },{\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                width:80,\r\n                render(interest){\r\n                    let config = {\r\n                        '1' : '美食',\r\n                        '2' : '旅游',\r\n                        '3' : '打游戏',\r\n                        '4' : '追剧',\r\n                        '5' : '看小说',\r\n                        '6' : '逛街',\r\n                        '7' : '拍照',\r\n                        '8' : '爬山'\r\n                    }\r\n                    return config[interest];\r\n                }\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday1',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday2',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday3',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday4',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday5',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday6',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday7',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday8',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday9',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday10',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday11',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday12',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday13',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday14',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday15',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday16',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday17',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday18',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday19',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday20',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday21',\r\n                width:80,\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday22',\r\n                width:80,\r\n            },{\r\n                title:'地址',\r\n                dataIndex:'address',\r\n                width:140,\r\n                fixed:'right'\r\n            },{\r\n                title:'联系方式',\r\n                dataIndex:'phoneNumber',\r\n                width:80,\r\n                fixed:'right'\r\n            }\r\n        ]\r\n        const columns3 = [\r\n            {\r\n                title:'id',\r\n                dataIndex:'id',\r\n            },{\r\n                title:'用户名',\r\n                dataIndex:'userName',\r\n            },{\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },{\r\n                title:'年龄',\r\n                dataIndex:'age',\r\n                sorter:(a,b)=>{\r\n                    return a.age - b.age;\r\n                },\r\n                sortOrder:this.state.sortOrder\r\n            },{\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config = {\r\n                        '1' : '咸鱼一条',\r\n                        '2' : '风华浪子',\r\n                        '3' : '邻家妹妹',\r\n                        '4' : '白衣天使',\r\n                        '5' : '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },{\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                render(interest){\r\n                    let config = {\r\n                        '1' : '美食',\r\n                        '2' : '旅游',\r\n                        '3' : '打游戏',\r\n                        '4' : '追剧',\r\n                        '5' : '看小说',\r\n                        '6' : '逛街',\r\n                        '7' : '拍照',\r\n                        '8' : '爬山'\r\n                    }\r\n                    return config[interest];\r\n                }\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday',\r\n            },{\r\n                title:'地址',\r\n                dataIndex:'address',\r\n            },{\r\n                title:'联系方式',\r\n                dataIndex:'phoneNumber',\r\n            }\r\n        ]\r\n        const columns4 = [\r\n            {\r\n                title:'id',\r\n                dataIndex:'id',\r\n            },{\r\n                title:'用户名',\r\n                dataIndex:'userName',\r\n            },{\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },{\r\n                title:'年龄',\r\n                dataIndex:'age'\r\n            },{\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config = {\r\n                        '1' : '咸鱼一条',\r\n                        '2' : '风华浪子',\r\n                        '3' : '邻家妹妹',\r\n                        '4' : '白衣天使',\r\n                        '5' : '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },{\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                render(interest){\r\n                    let config = {\r\n                        '1' : <Badge status='success' text='美食'/>,\r\n                        '2' : <Badge status=\"error\" text=\"旅游\" />,\r\n                        '3' : <Badge status=\"default\" text=\"打游戏\" />,\r\n                        '4' : <Badge status=\"processing\" text=\"追剧\" />,\r\n                        '5' : <Badge status=\"warning\" text=\"看小说\" />,\r\n                        '6' : <Badge status=\"success\" text=\"逛街\" />,\r\n                        '7' : <Badge status=\"warning\" text=\"拍照\" />,\r\n                        '8' :  <Badge status=\"success\" text=\"爬山\" />\r\n                    }\r\n                    return config[interest];\r\n                }\r\n            },{\r\n                title:'生日',\r\n                dataIndex:'birthday',\r\n            },{\r\n                title:'地址',\r\n                dataIndex:'address',\r\n            },{\r\n                title:'联系方式',\r\n                dataIndex:'phoneNumber',\r\n            },{\r\n                title:'操作',\r\n                render:(text,item)=>{\r\n                    return <Button onClick={(item)=>{this.handleDelete(item )}}>删除</Button>\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title=\"头部固定\">\r\n                    <Table \r\n                        columns={columns}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                        scroll={{y:240}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"左侧固定\" style={{marginTop:10}}>\r\n                    <Table \r\n                        columns={columns2}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                        scroll={{x:2460}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"年龄排序\" style={{marginTop:10}}>\r\n                    <Table \r\n                        columns={columns3}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </Card>\r\n                <Card title=\"操作按钮\" style={{marginTop:10}}>\r\n                    <Table \r\n                        columns={columns4}\r\n                        dataSource={this.state.dataSource}\r\n                        pagination={false}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Table,Form, Select,Modal, message} from 'antd';\r\nimport axios from './../../axios/index';\r\nimport Utils from './../../util/utils'\r\nimport './../../style/common.less'\r\n\r\nexport default class City extends Component {\r\n    \r\n    state = {\r\n        list:[],\r\n        isShowOpenCity:false\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        this.requestList();\r\n    }\r\n\r\n    //默认请求接口数据\r\n    requestList = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/open_city',\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            let list = res.result.item_list.map((item,index)=>{\r\n                item.key = index;\r\n                return item;\r\n            });\r\n            this.setState({\r\n                list,\r\n                pagination:Utils.pagination(res,(current)=>{\r\n                    _this.params.page = current;\r\n                    _this.requestList();\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    //开通城市\r\n    handleOpenCity = ()=>{\r\n        this.setState({\r\n            isShowOpenCity:true\r\n        })\r\n    }\r\n    //开通城市提交\r\n    handleSubmit = ()=>{\r\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url:'/city/open',\r\n            data:{\r\n                params:cityInfo\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === '0'){\r\n                message.success('开通成功');\r\n                this.setState({\r\n                    isShowOpenCity:false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'城市ID',\r\n                dataIndex:'id'\r\n            },{\r\n                title:'城市名称',\r\n                dataIndex:'name'\r\n            },{\r\n                title:'用车模式',\r\n                dataIndex:'mode',\r\n                render(mode){\r\n                    return mode === 1 ? '停车点' : '禁停区';\r\n                }\r\n            },{\r\n                title:'运营模式',\r\n                dataIndex:'op_mode',\r\n                render(op_mode){\r\n                    return op_mode === 1 ? '自营' : '加盟';\r\n                }\r\n            },{\r\n                title:'授权加盟商',\r\n                dataIndex:'franchisee_name'\r\n            },{\r\n                title:'城市管理员',\r\n                dataIndex:'city_admins',\r\n                render(arr){\r\n                    return arr.map((item)=>{\r\n                        return item.user_name;\r\n                    }).join(',');\r\n                }\r\n            },{\r\n                title:'城市开通时间',\r\n                dataIndex:'open_time'\r\n            },{\r\n                title:'操作时间',\r\n                dataIndex:'update_time',\r\n                render:Utils.formateDate\r\n            },{\r\n                title:'操作人',\r\n                dataIndex:'sys_user_name'\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <FilterForm />\r\n                </Card>\r\n                <Card style={{marginTop:'10px'}}>\r\n                    <Button type='primary' onClick={this.handleOpenCity} >开通城市</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <Table \r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title='开通城市'\r\n                    visible={this.state.isShowOpenCity}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isShowOpenCity:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleSubmit}\r\n                >\r\n                    <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FilterForm extends Component {\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        return (\r\n            <Form layout='inline'>\r\n                <Form.Item label='城市'>\r\n                    {\r\n                        getFieldDecorator('city_id')(\r\n                            <Select \r\n                                placeholder='全部'\r\n                                style={{width:80}}\r\n                            >\r\n                                <Option value=''>全部</Option>\r\n                                <Option value='1'>北京市</Option>\r\n                                <Option value='2'>天津市</Option>\r\n                                <Option value='3'>深圳市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='用车模式'>\r\n                    {\r\n                        getFieldDecorator('mode')(\r\n                            <Select placeholder='全部' style={{width:140}}>\r\n                                <Option value=''>全部</Option>\r\n                                <Option value='1'>指定停车点模式</Option>\r\n                                <Option value='2'>禁停区模式</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='运营模式'>\r\n                    {\r\n                        getFieldDecorator('op_mode')(\r\n                            <Select placeholder='全部' style={{width:80}}>\r\n                                <Option value=''>全部</Option>\r\n                                <Option value='1'>自营</Option>\r\n                                <Option value='2'>加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='加盟商授权状态'>\r\n                    {\r\n                        getFieldDecorator('auth_status')(\r\n                            <Select placeholder='全部' style={{width:80}}>\r\n                                <Option value=''>全部</Option>\r\n                                <Option value='1'>已授权</Option>\r\n                                <Option value='2'>未授权</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' style={{margin:'0 20px'}}>查询</Button>\r\n                    <Button>重置</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n//通过form.create实现自动绑定功能\r\nFilterForm = Form.create({})(FilterForm);\r\n\r\nclass OpenCityForm extends Component {\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:8\r\n            }\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        return (\r\n            <Form layout='horizontal'>\r\n                <Form.Item label='选择城市'  {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('city_id')(\r\n                            <Select \r\n                                placeholder='全部'\r\n                                style={{width:80}}\r\n                            >\r\n                                <Option value=''>全部</Option>\r\n                                <Option value='1'>北京市</Option>\r\n                                <Option value='2'>天津市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='运营模式'  {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('op_mode')(\r\n                            <Select placeholder='自营' style={{width:80}}>\r\n                                <Option value='1'>自营</Option>\r\n                                <Option value='2'>加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='用车模式'  {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('mode')(\r\n                            <Select style={{width:140}}>\r\n                                <Option value='1'>指定停车点模式</Option>\r\n                                <Option value='2'>禁停区模式</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nOpenCityForm = Form.create({})(OpenCityForm);\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Modal} from 'antd'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftjs from 'draftjs-to-html';\r\n\r\nexport default class Rich extends Component {\r\n    state = {\r\n        showRichText:false,\r\n        editorState:''\r\n    }\r\n    handleClearContent = ()=>{\r\n        this.setState({\r\n            editorState:''\r\n        })\r\n    }\r\n    handleGetText = ()=>{\r\n        this.setState({\r\n            showRichText:true\r\n        });\r\n    }\r\n    onEditorChange = (contentState)=>{\r\n        this.setState({\r\n            contentState,\r\n        })\r\n    }\r\n    onEditorStateChange = (editorState)=>{\r\n        this.setState({\r\n            editorState,\r\n        })\r\n    }\r\n    render() {\r\n        const {editorState} = this.state;\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleClearContent}>清除内容</Button>\r\n                    <Button style={{marginLeft:10}} type=\"primary\" onClick={this.handleGetText}>获取HTML文本</Button>\r\n                </Card>\r\n                <Card title=\"富文本编辑器\">\r\n                    <Editor\r\n                        editorState={editorState}\r\n                        onContentStateChange={this.onEditorChange}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    title=\"富文本\"\r\n                    visible={this.state.showRichText}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showRichText:false\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                >\r\n                    {draftjs(this.state.contentState)}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Input,Select,Form,Button,Checkbox, DatePicker} from 'antd'\r\nimport utils from '../../util/utils';\r\n// const { option } = Select;\r\n\r\nclass FilterForm extends React.Component{\r\n\r\n    handleFilterSubmit = ()=>{\r\n        let fieldsValue = this.props.form.getFieldsValue();\r\n        this.props.filterSubmit(fieldsValue);\r\n    }\r\n\r\n    reset = ()=>{\r\n        this.props.form.resetFields();\r\n    }\r\n\r\n    initFormList = ()=>{\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formList = this.props.formList;\r\n        const formItemList = [];\r\n        if(formList && formList.length>0){\r\n            formList.forEach((item,i)=>{\r\n                let label = item.label;\r\n                let field = item.field;\r\n                let initialValue = item.initialValue || '';\r\n                let placeholder = item.placeholder;\r\n                let width = item.width;\r\n                if (item.type === '城市') {\r\n                    const city = <Form.Item label=\"城市\" key={field}>\r\n                        {\r\n                            getFieldDecorator('city',{\r\n                                initialValue:'0'\r\n                            })(\r\n                                <Select\r\n                                    style={{width:80}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    {utils.getOptionList([{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '上海' }, { id: '3', name: '天津' }, { id: '4', name: '杭州' }])}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </Form.Item>;\r\n                    formItemList.push(city)\r\n                }else if(item.type === '时间查询'){\r\n                    const begin_time = <Form.Item label='时间查询' key={field}>\r\n                    {\r\n                        getFieldDecorator('begin_time',{\r\n                            initialValue:initialValue\r\n                        })(\r\n                            <DatePicker showTime={true} placeholder={placeholder} format='YYYY-MM-DD HH:mm:ss'/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                formItemList.push(begin_time)\r\n                const end_time = <Form.Item label='~' colon={false} key={field}>\r\n                    {\r\n                        getFieldDecorator('end_time')(\r\n                            <DatePicker showTime={true} placeholder={placeholder} format='YYYY-MM-DD HH:mm:ss'/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                formItemList.push(end_time)\r\n                }else if(item.type === 'INPUT'){\r\n                    const INPUT = <Form.Item label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field],{\r\n                            initialValue:initialValue\r\n                        })(\r\n                            <Input type=\"text\" style={{ width: width }} placeholder={placeholder} />\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                formItemList.push(INPUT)\r\n                }else if(item.type === 'SELECT'){\r\n                    const SELECT = <Form.Item label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field],{\r\n                            initialValue:initialValue\r\n                        })(\r\n                            <Select \r\n                                placeholder={placeholder}\r\n                                style={{width:width}}\r\n                            >\r\n                                {utils.getOptionList(item.list)}\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                formItemList.push(SELECT)\r\n                }else if(item.type === 'CHECKBOX'){\r\n                    const CHECKBOX = <Form.Item label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field],{\r\n                            valuePropName:'checked',\r\n                            initialValue:initialValue\r\n                        })(\r\n                            <Checkbox>\r\n                                {label}\r\n                            </Checkbox>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                formItemList.push(CHECKBOX)\r\n                }else if(item.type === 'DATE'){\r\n                    const Date = <Form.Item label={label} key={field}>\r\n                    {\r\n                        getFieldDecorator([field])(\r\n                            <DatePicker showTime={true} placeholder={placeholder} format='YYYY-MM-DD HH:mm:ss'/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                formItemList.push(Date)\r\n                }\r\n            })\r\n        }\r\n        return formItemList\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Form layout='inline'>\r\n                {this.initFormList()}\r\n                <Form.Item>\r\n                    <Button type='primary' style={{margin:'0 20px'}} onClick={this.handleFilterSubmit}>查询</Button>\r\n                    <Button onClick={this.reset}>重置</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Form.create({})(FilterForm)","import React, { Component } from 'react'\r\nimport {Table} from 'antd'\r\n\r\nexport default class ETable extends Component {\r\n    onRowClick = (record,index)=>{\r\n        let rowSelection = this.props.rowSelection;\r\n        if(rowSelection === 'checkbox'){\r\n            let selectedRowKeys = this.props.selectedRowKeys;\r\n            let selectedItem = this.props.selectedItem;\r\n            let selectedIds = this.props.selectedIds;\r\n            if(selectedIds){\r\n                const i = selectedIds.indexOf(record.id);\r\n                if(i === -1){\r\n                    selectedIds.push(record.id);\r\n                    selectedRowKeys.push(index);\r\n                    selectedItem.push(record);\r\n                }else{\r\n                    selectedIds.splice(i,1);\r\n                    selectedRowKeys.splice(i,1);\r\n                    selectedItem.splice(i,1);\r\n                }\r\n            }else{\r\n                selectedIds = [record.id];\r\n                selectedRowKeys = [index];\r\n                selectedItem = [record];\r\n            }\r\n            this.props.updateSelectedItem(selectedRowKeys,selectedItem,selectedIds);\r\n        }else{\r\n            let selectedRowKeys = [index];\r\n            let selectedItem = record;\r\n            this.props.updateSelectedItem(selectedRowKeys,selectedItem);\r\n        }\r\n    }\r\n    tableInit = ()=>{\r\n        let row_selection = this.props.rowSelection;\r\n        let selectedRowKeys = this.props.selectedRowKeys;\r\n        const rowSelection = {\r\n            type:'radio',\r\n            selectedRowKeys,\r\n            // onChange:this.onSelectChange,\r\n        }\r\n        if(row_selection === false || row_selection === null){\r\n            row_selection = false;\r\n        }else if(row_selection === 'checkbox'){\r\n            rowSelection.type = 'checkbox';\r\n        }else{\r\n            row_selection = 'radio';\r\n        }\r\n        return <Table \r\n            bordered\r\n            {...this.props}\r\n            rowSelection={row_selection ? rowSelection : null}\r\n            onRow={(record,index)=>{\r\n                return {\r\n                    onClick:() => {\r\n                        if(!row_selection){\r\n                            return\r\n                        }\r\n                        this.onRowClick(record,index);\r\n                    },//点击行\r\n                }\r\n            }}\r\n        />\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.tableInit()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Form,Modal, message} from 'antd';\r\nimport axios from '../../axios/index'\r\nimport Utils from '../../util/utils'\r\nimport BaseForm from '../../components/BaseForm/index'\r\nimport ETable from './../../components/Etable/index'\r\n\r\nexport default class Order extends Component {\r\n    state = {\r\n        orderInfo:{},\r\n        orderConfirmVisble:false,\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    formList = [\r\n        {\r\n            type:'SELECT',\r\n            label:'城市',\r\n            field:'city',\r\n            placeholder:'全部',\r\n            initialValue:'1',\r\n            width:80,\r\n            list:[{id:'0',name:'全部'},{id:'1',name:'北京'},{id:'2',name:'天津'},{id:'3',name:'上海'}]\r\n        },\r\n        {\r\n            type:'时间查询',\r\n            label:'订单时间',\r\n        },\r\n        {\r\n            type:'SELECT',\r\n            label:'订单状态',\r\n            field:'order_status',\r\n            placeholder:'全部',\r\n            initialValue:'1',\r\n            width:100,\r\n            list:[{id:'0',name:'全部'},{id:'1',name:'进行中'},{id:'2',name:'结束进程'}]\r\n        },\r\n    ]\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n\r\n    handleFilter = (params)=>{\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = ()=>{\r\n        // let _this=this;\r\n        axios.requestList(this,'/order/list',this.params,true)\r\n    }\r\n    //订单结束确认\r\n    handleConfirm = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if(!item){\r\n            Modal.info({\r\n                title:'提示信息',\r\n                content:'请选择一条订单进行结束'\r\n            })\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url:'/order/ebike_info',\r\n            data:{\r\n                params:{\r\n                    orderId:item.id\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                this.setState({\r\n                    orderInfo:res.result,\r\n                    orderConfirmVisble:true\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //结束订单\r\n    handleFindishOrder = ()=>{\r\n        let item = this.state.selectedItem;\r\n        axios.ajax({\r\n            url:'/order/finish_order',\r\n            data:{\r\n                params:{\r\n                    orderId:item.id\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                message.success('订单结束成功')\r\n                this.setState({\r\n                    orderConfirmVisble:false\r\n                })\r\n                this.requestList()\r\n            }\r\n        })\r\n    }\r\n    openOrderDetail = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if(!item){\r\n            Modal.info({\r\n                title:'提示信息',\r\n                content:'请先选择一条订单'\r\n            })\r\n            return;\r\n        }\r\n        window.open(`/#/common/order/detail/${item.id}`,'_blank')\r\n    }\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        const columns = [\r\n            {\r\n                title:'订单编号',\r\n                dataIndex:'order_sn'\r\n            },\r\n            {\r\n                title:'车辆编号',\r\n                dataIndex:'bike_sn'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                dataIndex:'user_name'\r\n            },\r\n            {\r\n                title:'手机号',\r\n                dataIndex:'mobile'\r\n            },\r\n            {\r\n                title:'里程',\r\n                dataIndex:'distance',\r\n                render(distance){\r\n                    return distance/1000 + 'Km'\r\n                }\r\n            },\r\n            {\r\n                title:'行驶时长',\r\n                dataIndex:'total_time'\r\n            },\r\n            {\r\n                title:'状态',\r\n                dataIndex:'status',\r\n                render(status){\r\n                    return status === 1 ? '进行中' : '行驶结束'\r\n                }\r\n            },\r\n            {\r\n                title:'开始时间',\r\n                dataIndex:'start_time'\r\n            },\r\n            {\r\n                title:'结束时间',\r\n                dataIndex:'end_time'\r\n            },\r\n            {\r\n                title:'订单金额',\r\n                dataIndex:'total_fee'\r\n            },\r\n            {\r\n                title:'实付金额',\r\n                dataIndex:'user_pay'\r\n            },\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop : 10}}>\r\n                    <Button type='primary' onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type='primary' style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable \r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        selectedIds = {this.state.selectedIds}\r\n                        selectedItem = {this.state.selectedItem}\r\n                        pagination={this.state.pagination}\r\n                        // rowSelection = \"radio\"\r\n                    />\r\n                </div>\r\n                <Modal \r\n                    title='结束订单'\r\n                    visible={this.state.orderConfirmVisble}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            orderConfirmVisble:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleFindishOrder}\r\n                    width={600}\r\n                >\r\n                    <Form layout='horizontal' >\r\n                        <Form.Item label='车辆编号' {...formItemLayout}>\r\n                            {this.state.orderInfo.bike_sn}\r\n                        </Form.Item>\r\n                        <Form.Item label='剩余电量' {...formItemLayout}>\r\n                            {this.state.orderInfo.battery + '%'}\r\n                        </Form.Item>\r\n                        <Form.Item label='行程开始时间' {...formItemLayout}>\r\n                            {this.state.orderInfo.start_time}\r\n                        </Form.Item>\r\n                        <Form.Item label='当前位置' {...formItemLayout}>\r\n                            {this.state.orderInfo.location}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row } from 'antd';\r\nimport Header from './components/Header';\r\nimport './style/common.less'\r\n\r\nexport default class Common extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"simple-page\">\r\n                    <Header menuType='second'/>\r\n                </Row>\r\n                <Row className=\"content\">\r\n                    {this.props.children}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card} from 'antd';\r\nimport axios from '../../axios/index'\r\nimport './detail.less'\r\n\r\nexport default class Detail extends Component {\r\n    state = {}\r\n    componentDidMount(){\r\n        //取路由中的一个参数\r\n        let orderId = this.props.match.params.orderId;\r\n        if(orderId){\r\n            this.getDetailInfo(orderId);\r\n        }\r\n    }\r\n    getDetailInfo = (orderId)=>{\r\n        axios.ajax({\r\n            url:'/order/detail',\r\n            data:{\r\n                params:{\r\n                    orderId:orderId\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                this.setState({\r\n                    orderInfo:res.result\r\n                })\r\n                this.renderMap(res.result)\r\n            }\r\n        })\r\n    }\r\n    renderMap = (result)=>{\r\n        // 创建地图实例\r\n        this.map = new window.BMap.Map(\"orderDetailMap\");\r\n        this.map.centerAndZoom('北京',11);\r\n        this.addMapControl();\r\n        //调用路线图绘制方法\r\n        this.drawBikeRoute(result.position_list);\r\n        //调用服务区绘制方法\r\n        this.drawServiceArea(result.area)\r\n    }\r\n\r\n    //添加地图控件\r\n    addMapControl = ()=>{\r\n        let map = this.map;\r\n        map.addControl(new window.BMap.ScaleControl({anchor:window.BMAP_ANCHOR_TOP_RIGHT}));\r\n        map.addControl(new window.BMap.NavigationControl({anchor:window.BMAP_ANCHOR_TOP_RIGHT}));\r\n    }\r\n\r\n    //绘制用户的行驶路线\r\n    drawBikeRoute = (positionList)=>{\r\n        // let map = this.map;\r\n        let startPoint = '';\r\n        let endPoint = '';\r\n        if(positionList.length>0){\r\n            let first = positionList[0];\r\n            let last = positionList[positionList.length-1]\r\n\r\n            //起始图标\r\n            startPoint = new window.BMap.Point(first.lon,first.lat);\r\n            let startIcon = new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\r\n                imageSize:new window.BMap.Size(36,42),\r\n                anchor:new window.BMap.Size(36,42),\r\n            })\r\n            let startMarker = new window.BMap.Marker(startPoint,{icon:startIcon});\r\n            this.map.addOverlay(startMarker);\r\n\r\n            //结束图标\r\n            endPoint = new window.BMap.Point(last.lon,last.lat);\r\n            let endIcon = new window.BMap.Icon('/assets/end_point.png',new window.BMap.Size(36,42),{\r\n                imageSize:new window.BMap.Size(36,42),\r\n                anchor:new window.BMap.Size(36,42),\r\n            })\r\n            let endMarker = new window.BMap.Marker(endPoint,{icon:endIcon});\r\n            this.map.addOverlay(endMarker);\r\n\r\n            //连接路线图\r\n            let trackPoint = [];\r\n            for(let i = 0; i < positionList.length; i++){\r\n                let point = positionList[i];\r\n                trackPoint.push(new window.BMap.Point(point.lon,point.lat));\r\n            }\r\n            let polyline = new window.BMap.Polyline(trackPoint,{\r\n                strokeColor:'#1869AD', //线的颜色\r\n                strokeWeight:3,  //线的宽度\r\n                strokeOpacity:1,  //线的透明度\r\n            })\r\n            this.map.addOverlay(polyline);\r\n            this.map.centerAndZoom(endPoint,11);\r\n        }\r\n    }\r\n\r\n    //绘制服务区\r\n    drawServiceArea = (positionList)=>{\r\n        //生成最高点\r\n        let trackPoint = [];\r\n        for(let i = 0; i < positionList.length; i++){\r\n            let point = positionList[i];\r\n            trackPoint.push(new window.BMap.Point(point.lon,point.lat));\r\n        }\r\n\r\n        let polygon = new window.BMap.Polygon(trackPoint,{\r\n            strokeColor:'#CE0000', //线的颜色\r\n            strokeWeight:4,  //线的宽度\r\n            strokeOpacity:1,  //线的透明度\r\n            fillColor:'#ff8605',\r\n            fillOpacity:0.4\r\n        })\r\n        this.map.addOverlay(polygon);\r\n    }\r\n    render() {\r\n        const info = this.state.orderInfo || {};\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <div id='orderDetailMap' className=\"order-map\"></div>\r\n                    <div className='detail-items'>\r\n                        <div className='item-title'>基础信息</div>\r\n                        <ul className='detail-form'>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用车模式</div>\r\n                                <div className=\"detail-form-content\">{info.mode === 1 ? '服务区' : '停车点'}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">订单编号</div>\r\n                                <div className=\"detail-form-content\">{info.order_sn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">车辆编号</div>\r\n                                <div className=\"detail-form-content\">{info.bike_sn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用户姓名</div>\r\n                                <div className=\"detail-form-content\">{info.user_name}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">手机号码</div>\r\n                                <div className=\"detail-form-content\">{info.mobile}</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='detail-items'>\r\n                        <div className='item-title'>行驶轨迹</div>\r\n                        <ul className='detail-form'>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程起点</div>\r\n                                <div className=\"detail-form-content\">{info.start_location}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程终点</div>\r\n                                <div className=\"detail-form-content\">{info.end_location}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行驶里程</div>\r\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Modal, Input,Radio,DatePicker, Select,Form } from 'antd'\r\nimport axios from './../../axios'\r\nimport Utils from './../../util/utils'\r\nimport ETable from './../../components/Etable'\r\nimport BaseForm from '../../components/BaseForm'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nexport default class User extends Component {\r\n\r\n    state = {\r\n        isVisible:false\r\n    }\r\n\r\n    params = {\r\n        page:1\r\n    }\r\n\r\n    formList = [\r\n        {\r\n            type:'INPUT',\r\n            label:'用户名',\r\n            field:'user_name',\r\n            placeholder:'请输入用户名',\r\n            width:130,\r\n        },\r\n        {\r\n            type:'INPUT',\r\n            label:'手机号',\r\n            field:'user_mobile',\r\n            placeholder:'请输入手机号',\r\n            width:130,\r\n        },\r\n        {\r\n            type:'DATE',\r\n            label:'请选择入职日期',\r\n            field:'user_date',\r\n            placeholder:'请输入日期',\r\n        }\r\n    ]\r\n\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n\r\n    handleFilter = (params)=>{\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n    \r\n    requestList = ()=>{\r\n        axios.requestList(this,'/user/list',this.params,true)\r\n    }\r\n\r\n    //功能区操作\r\n    handleOperate = (type)=>{\r\n        let item = this.state.selectedItem;\r\n        if(type === 'create'){\r\n            this.setState({\r\n                type,\r\n                isVisible:true,\r\n                title:'创建员工'\r\n            })\r\n        }else if(type === 'edit'){\r\n            if(!item){\r\n                Modal.info({\r\n                    title:\"提示\",\r\n                    content:\"请选择一个用户\"\r\n                })\r\n                return;\r\n            }\r\n            this.setState({\r\n                type,\r\n                isVisible:true,\r\n                title:'编辑员工',\r\n                userInfo:item\r\n            })\r\n        }else if(type === 'detail'){\r\n            this.setState({\r\n                type,\r\n                isVisible:true,\r\n                title:'员工详情',\r\n                userInfo:item\r\n            })\r\n        }else{\r\n            if(!item){\r\n                Modal.info({\r\n                    title:\"提示\",\r\n                    content:\"请选择一个用户\"\r\n                })\r\n                return;\r\n            }\r\n            let _this = this;\r\n            Modal.confirm({\r\n                title:'确认删除',\r\n                content:'是否确认删除当前选中的员工',\r\n                onOk(){\r\n                    axios.ajax({\r\n                        url:'/user/delete',\r\n                        data:{\r\n                            params:{\r\n                                id:item.id\r\n                            }\r\n                        }\r\n                    }).then((res)=>{\r\n                        if(res.code === 0){\r\n                            _this.setState({\r\n                                isVisible:false\r\n                            })\r\n                            _this.requestList();\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //创建员工提交\r\n    handleSubmit = ()=>{\r\n        let type = this.state.type;\r\n        let data = this.userForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url:type='create' ? '/user/add' : '/user/edit',\r\n            data:{\r\n                params:data\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                this.userForm.props.form.resetFields();\r\n                this.setState({\r\n                    isVisible:false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                dataIndex:'username'\r\n            },\r\n            {\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },\r\n            {\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config = {\r\n                        '1' : '咸鱼一条',\r\n                        '2' : '风华浪子',\r\n                        '3' : '邻家妹妹',\r\n                        '4' : '白衣天使',\r\n                        '5' : '创业者'\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                render(interest){\r\n                    let config = {\r\n                        '1' : '美食',\r\n                        '2' : '旅游',\r\n                        '3' : '打游戏',\r\n                        '4' : '追剧',\r\n                        '5' : '看小说',\r\n                        '6' : '逛街',\r\n                        '7' : '拍照',\r\n                        '8' : '爬山'\r\n                    }\r\n                    return config[interest];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'联系地址',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'入职时间',\r\n                dataIndex:'time'\r\n            },\r\n        ]\r\n        let footer = {};\r\n        if(this.state.type === 'detail'){\r\n            footer = {\r\n                footer:null\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop : 10}}>\r\n                    <Button type='primary' icon=\"plus\" onClick={()=>this.handleOperate('create')}>创建员工</Button>\r\n                    <Button type='primary' icon=\"edit\" style={{marginLeft:10}} onClick={()=>this.handleOperate('edit')}>编辑员工</Button>\r\n                    <Button type='primary' style={{marginLeft:10}} onClick={()=>this.handleOperate('detail')}>员工详情</Button>\r\n                    <Button type='primary' icon=\"delete\" style={{marginLeft:10}} onClick={()=>this.handleOperate('delete')}>删除员工</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable \r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        selectedItem = {this.state.selectedItem}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </div>\r\n                <Modal \r\n                    title={this.state.title}\r\n                    visible={this.state.isVisible}\r\n                    onCancel={()=>{\r\n                        this.userForm.props.form.resetFields();\r\n                        this.setState({\r\n                            isVisible:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleSubmit}\r\n                    width={600}\r\n                    {...footer}\r\n                >\r\n                    <UserForm type={this.state.type} userInfo={this.state.userInfo} wrappedComponentRef={(inst)=>this.userForm = inst}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass UserForm extends Component {\r\n    getState = (state)=>{\r\n        return {\r\n            '1' : '咸鱼一条',\r\n            '2' : '风华浪子',\r\n            '3' : '邻家妹妹',\r\n            '4' : '白衣天使',\r\n            '5' : '创业者'\r\n        }[state]\r\n    }\r\n    render() {\r\n        let type = this.props.type;\r\n        let userInfo = this.props.userInfo || {};\r\n        const {getFieldDecorator} = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        return (\r\n            <Form layout='horizontal' >\r\n                <Form.Item label='用户名' {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.username :\r\n                        getFieldDecorator('usename',{\r\n                            initialValue:userInfo.username\r\n                        })(\r\n                            <Input type='text' placeholder=\"请输入用户名\"/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='性别' {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.sex === 1 ?'男':'女' :\r\n                        getFieldDecorator('sex',{\r\n                            initialValue:userInfo.sex\r\n                        })(\r\n                            <Radio.Group>\r\n                                <Radio value={1}>男</Radio>\r\n                                <Radio value={2}>女</Radio>\r\n                            </Radio.Group>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='状态' {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? this.getState(userInfo.state) :\r\n                        getFieldDecorator('state',{\r\n                            initialValue:userInfo.state\r\n                        })(\r\n                            <Select>\r\n                                <Option value={1}>咸鱼一条</Option>\r\n                                <Option value={2}>风华浪子</Option>\r\n                                <Option value={3}>邻家妹妹</Option>\r\n                                <Option value={4}>白衣天使</Option>\r\n                                <Option value={5}>创业者</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='生日' {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.birthday :\r\n                        getFieldDecorator('birthday',{\r\n                            initialValue:moment(userInfo.birthday)\r\n                        })(\r\n                            <DatePicker />\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='联系地址' {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.address :\r\n                        getFieldDecorator('address',{\r\n                            initialValue:userInfo.address\r\n                        })(\r\n                            <TextArea rows={4} placeholder=\"请输入联系地址\"/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nUserForm = Form.create({})(UserForm)\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from './../../axios/index'\r\nimport {Card} from 'antd'\r\nimport BaseForm from './../../components/BaseForm/index'\r\n\r\nexport default class bikeMap extends Component {\r\n    state={}\r\n    map = \"\"\r\n    formList = [\r\n        {\r\n            type:'城市'\r\n        },{\r\n            type:'时间查询'\r\n        },{\r\n            type:'SELECT',\r\n            label:'订单状态',\r\n            field:'order_status',\r\n            placeholder:'全部',\r\n            initiaValue:'0',\r\n            list:[{id:'0',name:'全部'},{id:'1',name:'进行中'},{id:'2',name:'行程结束'}],\r\n            width:100,\r\n        }\r\n    ]\r\n\r\n    requestList = ()=>{\r\n        axios.ajax({\r\n            url:'/map/bike_list',\r\n            data:{\r\n                params:this.params\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                this.setState({\r\n                    total_count:res.result.total_count\r\n                })\r\n                this.renderMap(res);\r\n            }\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        this.requestList();\r\n    }\r\n    handelFilterSubmit = (filterParams)=>{\r\n        this.params = filterParams;\r\n        this.requestList();\r\n    }\r\n    //渲染地图数据\r\n    renderMap = (res)=>{\r\n        let list = res.result.route_list;\r\n        this.map = new window.BMap.Map('container');\r\n        let gps1 = list[0].split(',');\r\n        let startPoint = new window.BMap.Point(gps1[0],gps1[1]);\r\n        let gps2 = list[list.length-1].split(',');\r\n        let endPoint = new window.BMap.Point(gps2[0],gps2[1]);\r\n        this.map.centerAndZoom(endPoint,11);\r\n\r\n        let startPointIcon = new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\r\n            imageSizeIcon:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        })\r\n        let bikeMarkerStart = new window.BMap.Marker(startPoint,{icon:startPointIcon})\r\n        this.map.addOverlay(bikeMarkerStart)\r\n        let endPointIcon = new window.BMap.Icon('/assets/end_point.png',new window.BMap.Size(36,42),{\r\n            imageSizeIcon:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        })\r\n        let bikeMarkerEnd = new window.BMap.Marker(endPoint,{icon:endPointIcon})\r\n        this.map.addOverlay(bikeMarkerEnd)\r\n\r\n        //绘制车辆行驶路线\r\n        let routeList = [];\r\n        list.forEach((item)=>{\r\n            let p = item.split(',');\r\n            routeList.push(new window.BMap.Point(p[0],p[1]))\r\n        })\r\n\r\n        let polyLine = new window.BMap.Polyline(routeList,{\r\n            strokeColor:'#ef4136',\r\n            strokeWeigth:1,\r\n            strokeOpacity:1\r\n        })\r\n        this.map.addOverlay(polyLine)\r\n\r\n        //绘制服务区\r\n        let servicePointList = [];\r\n        let serviceList = res.result.service_list;\r\n        serviceList.forEach((item)=>{\r\n            servicePointList.push(new window.BMap.Point(item.lon,item.lat))\r\n        })\r\n        let polyServiceLine = new window.BMap.Polyline(servicePointList,{\r\n            strokeColor:'#ef4136',\r\n            strokeWeigth:2,\r\n            strokeOpacity:1\r\n        })\r\n        this.map.addOverlay(polyServiceLine)\r\n\r\n        //添加地图中的自行车图标\r\n        let bikeList = res.result.bike_list;\r\n        let bikeIcon = new window.BMap.Icon('/assets/bike.jpg',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        })\r\n        bikeList.forEach((item)=>{\r\n            let p = item.split(',');\r\n            let point = new window.BMap.Point(p[0],p[1]);\r\n            let bikeMarker = new window.BMap.Marker(point,{icon:bikeIcon});\r\n            this.map.addOverlay(bikeMarker)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handelFilterSubmit}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <div>共{this.state.total_count}辆车</div>\r\n                    <div id=\"container\" style={{height:500}}></div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default {\n    \"color\": [\n        \"#f9c700\",\n        \"#ff5400\",\n        \"#6699cc\",\n        \"#9cb3c5\",\n        \"#e0e6ec\",\n        \"#666666\",\n        \"#787464\",\n        \"#cc7e63\",\n        \"#724e58\",\n        \"#4b565b\"\n    ],\n    \"backgroundColor\": \"#ffffff\",\n    \"textStyle\": {},\n    \"title\": {\n        \"textStyle\": {\n            \"color\": \"#cccccc\"\n        },\n        \"subtextStyle\": {\n            \"color\": \"#cccccc\"\n        }\n    },\n    \"line\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 1\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 2\n            }\n        },\n        \"symbolSize\": \"10\",\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": false\n    },\n    \"pie\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"categoryAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"toolbox\": {\n        \"iconStyle\": {\n            \"normal\": {\n                \"borderColor\": \"#999999\"\n            },\n            \"emphasis\": {\n                \"borderColor\": \"#666666\"\n            }\n        }\n    },\n    \"legend\": {\n        \"textStyle\": {\n            \"color\": \"#333333\"\n        }\n    },\n    \"tooltip\": {\n        \"axisPointer\": {\n            \"lineStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            },\n            \"crossStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            }\n        }\n    },\n    \"timeline\": {\n        \"lineStyle\": {\n            \"color\": \"#293c55\",\n            \"width\": 1\n        },\n        \"itemStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderWidth\": 1\n            },\n            \"emphasis\": {\n                \"color\": \"#a9334c\"\n            }\n        },\n        \"controlStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            }\n        },\n        \"checkpointStyle\": {\n            \"color\": \"#e43c59\",\n            \"borderColor\": \"rgba(194,53,49,0.5)\"\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            }\n        }\n    },\n    \"markPoint\": {\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react'\r\nimport {Card} from 'antd'\r\nimport echartTheme from './../echartTheme'\r\nimport echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/bar'\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Bar extends Component {\r\n    componentWillMount(){\r\n        echarts.registerTheme('Enjoy',echartTheme)\r\n    }\r\n    getOption = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'bar',\r\n                    data:[1000,2000,3000,4500,2000,1500,1000]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption2 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            legend:{\r\n                data:['白衣天使','邻家妹妹','御姐风范']\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'白衣天使',\r\n                    type:'bar',\r\n                    data:[500,1000,1500,2000,2500,3000,3500]\r\n                },{\r\n                    name:'邻家妹妹',\r\n                    type:'bar',\r\n                    data:[300,700,1200,3000,2100,2000,1500]\r\n                },{\r\n                    name:'御姐风范',\r\n                    type:'bar',\r\n                    data:[200,800,1000,2500,3000,2800,2000]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"柱形图表之一\">\r\n                    <ReactEcharts option={this.getOption()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n                <Card  title=\"柱形图表之二\" style={{marginTop:10}}>\r\n                    <ReactEcharts option={this.getOption2()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card} from 'antd'\r\nimport echartTheme from './../echartTheme'\r\nimport echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Pie extends Component {\r\n    componentWillMount(){\r\n        echarts.registerTheme('Enjoy',echartTheme)\r\n    }\r\n    getOption = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单',\r\n                x:'center'\r\n            },\r\n            legend:{\r\n                orient:'vertical',\r\n                right:10,\r\n                top:20,\r\n                bottom:20,\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'pie',\r\n                    data:[\r\n                        {\r\n                            value:1000,\r\n                            name:'周一'\r\n                        },\r\n                        {\r\n                            value:1800,\r\n                            name:'周二'\r\n                        },\r\n                        {\r\n                            value:2000,\r\n                            name:'周三'\r\n                        },\r\n                        {\r\n                            value:2100,\r\n                            name:'周四'\r\n                        },\r\n                        {\r\n                            value:2500,\r\n                            name:'周五'\r\n                        },\r\n                        {\r\n                            value:2800,\r\n                            name:'周六'\r\n                        },\r\n                        {\r\n                            value:3000,\r\n                            name:'周日'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption2 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单',\r\n                x:'center'\r\n            },\r\n            legend:{\r\n                orient:'vertical',\r\n                right:10,\r\n                top:20,\r\n                bottom:20,\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'pie',\r\n                    radius:['50%','80%'],\r\n                    data:[\r\n                        {\r\n                            value:1000,\r\n                            name:'周一'\r\n                        },\r\n                        {\r\n                            value:1800,\r\n                            name:'周二'\r\n                        },\r\n                        {\r\n                            value:2000,\r\n                            name:'周三'\r\n                        },\r\n                        {\r\n                            value:2100,\r\n                            name:'周四'\r\n                        },\r\n                        {\r\n                            value:2500,\r\n                            name:'周五'\r\n                        },\r\n                        {\r\n                            value:2800,\r\n                            name:'周六'\r\n                        },\r\n                        {\r\n                            value:3000,\r\n                            name:'周日'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption3 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单',\r\n                x:'center'\r\n            },\r\n            legend:{\r\n                orient:'vertical',\r\n                right:10,\r\n                top:20,\r\n                bottom:20,\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            tooltip:{\r\n                trigger:'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'pie',\r\n                    radius:'55%',\r\n                    data:[\r\n                        {\r\n                            value:1000,\r\n                            name:'周一'\r\n                        },\r\n                        {\r\n                            value:1800,\r\n                            name:'周二'\r\n                        },\r\n                        {\r\n                            value:2000,\r\n                            name:'周三'\r\n                        },\r\n                        {\r\n                            value:2100,\r\n                            name:'周四'\r\n                        },\r\n                        {\r\n                            value:2500,\r\n                            name:'周五'\r\n                        },\r\n                        {\r\n                            value:2800,\r\n                            name:'周六'\r\n                        },\r\n                        {\r\n                            value:3000,\r\n                            name:'周日'\r\n                        }\r\n                    ].sort((a,b)=>{\r\n                        return a.value - b.value\r\n                    }),\r\n                    roseType: 'radius',\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"饼图表之一\">\r\n                    <ReactEcharts option={this.getOption()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n                <Card  title=\"饼图表之二\" style={{marginTop:10}}>\r\n                    <ReactEcharts option={this.getOption2()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n                <Card  title=\"饼图表之三\" style={{marginTop:10}}>\r\n                    <ReactEcharts option={this.getOption3()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card} from 'antd'\r\nimport echartTheme from './../echartTheme'\r\nimport echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Line extends Component {\r\n    componentWillMount(){\r\n        echarts.registerTheme('Enjoy',echartTheme)\r\n    }\r\n    getOption = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'line',\r\n                    data:[500,1000,700,2000,1500,3000,800]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption2 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            legend:{\r\n                data:['白衣天使订单量','邻家妹妹订单量']\r\n            },\r\n            xAxis:{\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'白衣天使订单量',\r\n                    type:'line',\r\n                    data:[700,1200,900,2200,1700,3200,1000]\r\n                },\r\n                {\r\n                    name:'邻家妹妹订单量',\r\n                    type:'line',\r\n                    data:[500,1000,700,2000,1500,3000,800]\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    getOption3 = ()=>{\r\n        let option = {\r\n            title:{\r\n                text:'用户骑行订单'\r\n            },\r\n            tooltip:{\r\n                trigger:'axis'\r\n            },\r\n            xAxis:{\r\n                boundaryGap: false,\r\n                data:['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis:{\r\n                type:'value'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'订单量',\r\n                    type:'line',\r\n                    data:[700,1200,900,2200,1700,3200,1000],\r\n                    areaStyle:{}\r\n                }\r\n            ]\r\n        }\r\n        return option;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"折线图表之一\">\r\n                    <ReactEcharts option={this.getOption()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n                <Card  title=\"折线图表之二\" style={{marginTop:10}}>\r\n                    <ReactEcharts option={this.getOption2()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n                <Card  title=\"折线图表之三\" style={{marginTop:10}}>\r\n                    <ReactEcharts option={this.getOption3()} theme=\"Enjoy\" style={{height:500}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Button, Modal,Form,Select,Input,Tree,Transfer} from 'antd'\r\nimport ETable from './../../components/Etable/index'\r\nimport Utils from './../../util/utils'\r\nimport axios from './../../axios'\r\nimport menuConfig from './../../config/menuConfig'\r\n\r\nconst {Option} = Select;\r\nconst { TreeNode } = Tree;\r\n\r\nexport default class Permission extends Component {\r\n\r\n    state = {}\r\n\r\n    componentWillMount(){\r\n        axios.requestList(this,'/role/list',{},true)\r\n    }\r\n\r\n    // 打开创建角色弹框\r\n    handleRole = ()=>{\r\n        this.setState({\r\n            isRoleVisible:true\r\n        })\r\n    }\r\n\r\n    //角色提交\r\n    handleRoleSubmit = ()=>{\r\n        let data = this.RoleForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url:'role/create',\r\n            data:{\r\n                params:data\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                this.setState({\r\n                    isRoleVisible:false\r\n                })\r\n                this.RoleForm.props.form.resetFields();\r\n                axios.requestList(this,'/role/list',{},true)\r\n            }\r\n        })\r\n    }\r\n\r\n    //权限设置\r\n    handlePermission = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if(!item){\r\n            Modal.info({\r\n                text:'请选择一个角色'\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            isPermVisible:true,\r\n            detailInfo:item,\r\n            menuInfo:item.menus\r\n        })\r\n    }\r\n\r\n    handlePermEditSubmit = ()=>{\r\n        let data = this.permForm.props.form.getFieldsValue();\r\n        data.role_id = this.state.selectedItem.id;\r\n        data.menus = this.state.menuInfo;\r\n        axios.ajax({\r\n            url:'/permission/edit',\r\n            data:{\r\n                params:{\r\n                    ...data\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res){\r\n                this.setState({\r\n                    isPermVisible:false\r\n                })\r\n                axios.requestList(this,'/role/list',{},true)\r\n            }\r\n        })\r\n    }\r\n\r\n    //用户授权\r\n    handleUserAuth = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if(!item){\r\n            Modal.info({\r\n                text:'请选择一个角色'\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            isUserVisible:true,\r\n            detailInfo:item\r\n        })\r\n        this.getRoleUserList(item.id)\r\n    }\r\n\r\n    //定义用户列表\r\n    getRoleUserList = (id)=>{\r\n        axios.ajax({\r\n            url:'/role/user_list',\r\n            data:{\r\n                params:{\r\n                    id\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res){\r\n                this.getAuthUserList(res.result);\r\n            }\r\n        })\r\n    }\r\n\r\n    //筛选目标用户\r\n    getAuthUserList = (dataSource)=>{\r\n        const mockData = [];\r\n        const targetKeys = [];\r\n        if(dataSource && dataSource.length>0){\r\n            for(let i = 0; i < dataSource.length; i++){\r\n                const data = {\r\n                    key:dataSource[i].user_id,\r\n                    title:dataSource[i].user_name,\r\n                    status:dataSource[i].status\r\n                }\r\n                if(data.status === 1){\r\n                    targetKeys.push(data.key);\r\n                }\r\n                mockData.push(data);\r\n            }\r\n            this.setState({\r\n                mockData,targetKeys\r\n            })\r\n        }\r\n    }\r\n\r\n    //用户授权提交\r\n    handleUserSubmit = ()=>{\r\n        let data = {}\r\n        data.user_ids = this.state.targetKeys;\r\n        data.role_id = this.state.selectedItem.id;\r\n        axios.ajax({\r\n            url:'/role/user_role_edit',\r\n            data:{\r\n                params:{\r\n                    ...data\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res){\r\n                this.setState({\r\n                    isUserVisible:false\r\n                })\r\n                axios.requestList(this,'/role/list',{},true)\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'角色ID',\r\n                dataIndex:'id'\r\n            },{\r\n                title:'角色名称',\r\n                dataIndex:'role_name'\r\n            },{\r\n                title:'创建时间',\r\n                dataIndex:'create_time',\r\n                render:Utils.formateDate\r\n            },{\r\n                title:'使用状态',\r\n                dataIndex:'status',\r\n                render(status){\r\n                    return status === 1 ? '启用' : '停用'\r\n                }\r\n            },{\r\n                title:'授权时间',\r\n                dataIndex:'authorize_time',\r\n                render:Utils.formateDate\r\n            },{\r\n                title:'授权人',\r\n                dataIndex:'authorize_user_name'\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleRole}>创建角色</Button>\r\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handlePermission}>设置权限</Button>\r\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleUserAuth}>用户授权</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable \r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"创建角色\"\r\n                    visible={this.state.isRoleVisible}\r\n                    onOk={this.handleRoleSubmit}\r\n                    onCancel={()=>{\r\n                        this.RoleForm.props.form.resetFields();\r\n                        this.setState({\r\n                            isRoleVisible:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleForm wrappedComponentRef={(inst)=>this.RoleForm = inst}/>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"设置权限\"\r\n                    visible={this.state.isPermVisible}\r\n                    width={600}\r\n                    onOk={this.handlePermEditSubmit}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isPermVisible:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <PermEditForm \r\n                        wrappedComponentRef={(inst)=>this.permForm = inst}\r\n                        detailInfo={this.state.detailInfo}\r\n                        menuInfo={this.state.menuInfo}\r\n                        patchMenuInfo={(checkedKeys)=>{\r\n                            this.setState({\r\n                                menuInfo:checkedKeys\r\n                            })\r\n                        }}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"用户授权\"\r\n                    visible={this.state.isUserVisible}\r\n                    width={800}\r\n                    onOk={this.handleUserSubmit}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isUserVisible:false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleAuthForm\r\n                        wrappedComponentRef={(inst)=>this.userAuthForm = inst}\r\n                        detailInfo={this.state.detailInfo}\r\n                        targetKeys={this.state.targetKeys}\r\n                        mockData={this.state.mockData}\r\n                        patchUserInfo={(targetKeys)=>{\r\n                            this.setState({\r\n                                targetKeys\r\n                            })\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass RoleForm extends Component {\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        return (\r\n            <Form layout='horizontal' >\r\n                <Form.Item label='角色名称' {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('role_name')(\r\n                            <Input type='text' placeholder=\"请输入角色名称\"/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Form.Item label='状态' {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('status')(\r\n                            <Select>\r\n                                <Option value={1}>开启</Option>\r\n                                <Option value={0}>关闭</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nRoleForm = Form.create({})(RoleForm)\r\n\r\nclass PermEditForm extends Component {\r\n\r\n    onCheck = (checkedKeys)=>{\r\n        this.props.patchMenuInfo(checkedKeys)\r\n    }\r\n\r\n    renderTreeNodes = (data)=>{\r\n        return data.map((item)=>{\r\n            if(item.children){\r\n                return <TreeNode title={item.title} key={item.key}>\r\n                    {this.renderTreeNodes(item.children)}\r\n                </TreeNode>\r\n            }else{\r\n                return <TreeNode title={item.title} key={item.key} />\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        const detail_info = this.props.detailInfo;\r\n        const menuInfo = this.props.menuInfo;\r\n        return (\r\n            <Form layout='horizontal' >\r\n                <Form.Item label='角色名称' {...formItemLayout}>\r\n                    <Input disabled placeholder={detail_info.role_name}/>\r\n                </Form.Item>\r\n                <Form.Item label='状态' {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('status',{\r\n                            initialValue:'1'\r\n                        })(\r\n                            <Select>\r\n                                <Option value='1'>启用</Option>\r\n                                <Option value='0'>停用</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                    onCheck={(checkedKeys)=>{\r\n                        this.onCheck(checkedKeys)\r\n                    }}\r\n                    checkedKeys={menuInfo}\r\n                >\r\n                    <TreeNode title=\"平台权限\" key=\"platform_all\">\r\n                        {this.renderTreeNodes(menuConfig)}\r\n                    </TreeNode>\r\n                </Tree>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nPermEditForm = Form.create({})(PermEditForm)\r\n\r\nclass RoleAuthForm extends Component {\r\n\r\n    onCheck = (checkedKeys)=>{\r\n        this.props.patchMenuInfo(checkedKeys)\r\n    }\r\n\r\n    filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\r\n\r\n    handleChange = (targetKeys) => {\r\n        this.props.patchUserInfo(targetKeys);\r\n    };\r\n\r\n    render() {\r\n        // const {getFieldDecorator} = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        const detail_info = this.props.detailInfo;\r\n        // const menuInfo = this.props.menuInfo;\r\n        return (\r\n            <Form layout='horizontal' >\r\n                <Form.Item label='角色名称' {...formItemLayout}>\r\n                    <Input disabled placeholder={detail_info.role_name}/>\r\n                </Form.Item>\r\n                <Form.Item label='选择用户' {...formItemLayout}>\r\n                    <Transfer\r\n                        dataSource={this.props.mockData}\r\n                        titles={['待选用户', '已选用户']}\r\n                        showSearch\r\n                        filterOption={this.filterOption}\r\n                        targetKeys={this.props.targetKeys}\r\n                        onChange={this.handleChange}\r\n                        render={item => item.title}\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nRoleAuthForm = Form.create({})(RoleAuthForm)\r\n","import React, { Component } from 'react'\r\nimport{ HashRouter,Route,Switch,Redirect} from 'react-router-dom'\r\nimport App from './App'\r\nimport Login from './pages/login'\r\nimport Admin from './admin'\r\nimport Button from './pages/ui/button'\r\nimport NoFound from './pages/nofound/nofound'\r\nimport Modals from './pages/ui/modals'\r\nimport Loadings from './pages/ui/loadings'\r\nimport Home from './pages/home'\r\nimport Notification from './pages/ui/notification'\r\nimport Message from './pages/ui/message'\r\nimport Tabs from './pages/ui/tabs'\r\nimport Gallery from './pages/ui/gallery'\r\nimport Silder from './pages/ui/silder'\r\nimport FromLogin from './pages/form/login'\r\nimport Register from './pages/form/register'\r\nimport Basic from './pages/table/basic'\r\nimport High from './pages/table/high'\r\nimport City from './pages/city'\r\nimport Rich from './pages/rich'\r\nimport Order from './pages/order'\r\nimport Common from './common'\r\nimport OrderDetail from './pages/order/detail'\r\nimport User from './pages/user'\r\nimport bikeMap from './pages/map/bikeMap'\r\nimport Bar from './pages/echarts/bar'\r\nimport Pie from './pages/echarts/pie'\r\nimport Line from './pages/echarts/line'\r\nimport Permission from './pages/permission'\r\n\r\nexport default class Router extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <App>\r\n                    <Switch>\r\n                        <Route path='/login' component={Login} />\r\n                        <Route path='/common' render={()=>\r\n                            <Common>\r\n                                <Switch>\r\n                                    <Route path='/common/order/detail/:orderId' component={OrderDetail} />\r\n                                </Switch>\r\n                            </Common>\r\n                        } />\r\n                        <Route path='/' render={()=>\r\n                            <Admin>\r\n                                <Switch>\r\n                                    <Route path='/home' component={Home} />\r\n                                    <Route path='/ui/buttons' component={Button} />\r\n                                    <Route path='/ui/modals' component={Modals} />\r\n                                    <Route path='/ui/loadings' component={Loadings} />\r\n                                    <Route path='/ui/notification' component={Notification} />\r\n                                    <Route path='/ui/messages' component={Message} />\r\n                                    <Route path='/ui/tabs' component={Tabs} />\r\n                                    <Route path='/ui/gallery' component={Gallery} />\r\n                                    <Route path='/ui/carousel' component={Silder} />\r\n                                    <Route path='/form/login' component={FromLogin} />\r\n                                    <Route path='/form/reg' component={Register} />\r\n                                    <Route path='/table/basic' component={Basic} />\r\n                                    <Route path='/table/high' component={High} />\r\n                                    <Route path='/city' component={City} />\r\n                                    <Route path='/rich' component={Rich} />\r\n                                    <Route path='/order' component={Order} />\r\n                                    <Route path='/user' component={User} />\r\n                                    <Route path='/bikeMap' component={bikeMap} />\r\n                                    <Route path='/charts/bar' component={Bar} />\r\n                                    <Route path='/charts/pie' component={Pie} />\r\n                                    <Route path='/charts/line' component={Line} />\r\n                                    <Route path='/permission' component={Permission} />\r\n                                    <Redirect to='/home'/>\r\n                                    <Route component={NoFound} />\r\n                                </Switch>\r\n                            </Admin>\r\n                        } />\r\n                    </Switch>\r\n                </App>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}